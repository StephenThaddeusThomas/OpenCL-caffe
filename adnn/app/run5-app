Script started on Mon 15 Feb 2016 02:34:33 PM EST
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Could NOT find CLBLAS (missing:  CLBLAS_LIBRARIES CLBLAS_INCLUDE_DIRS) 
-- FindclBLAS looked for libraries named: clBLAS
CMake Error at CMakeLists.txt:128 (include_directories):
  Syntax error in cmake code at

    /c/AMD/MLopen/aDNN/app/CMakeLists.txt:128

  when parsing string

    ${CLBLAS_INCLUDE_DIRS

  syntax error, unexpected $end, expecting } (21)


-- Configuring incomplete, errors occurred!
See also "/c/AMD/MLopen/aDNN/app/CMakeFiles/CMakeOutput.log".
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Could NOT find CLBLAS (missing:  CLBLAS_LIBRARIES CLBLAS_INCLUDE_DIRS) 
-- FindclBLAS looked for libraries named: clBLAS
CMake Error at CMakeLists.txt:128 (include_directories):
  Syntax error in cmake code at

    /c/AMD/MLopen/aDNN/app/CMakeLists.txt:128

  when parsing string

    ${CLBLAS_INCLUDE_DIRS

  syntax error, unexpected $end, expecting } (21)


-- Configuring incomplete, errors occurred!
See also "/c/AMD/MLopen/aDNN/app/CMakeFiles/CMakeOutput.log".
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Could NOT find CLBLAS (missing:  CLBLAS_LIBRARIES CLBLAS_INCLUDE_DIRS) 
-- FindclBLAS looked for libraries named: clBLAS
CMake Error at CMakeLists.txt:130 (target_link_libraries):
  Cannot specify link libraries for target "aDNNdriver.lnx" which is not
  built by this project.


-- Configuring incomplete, errors occurred!
See also "/c/AMD/MLopen/aDNN/app/CMakeFiles/CMakeOutput.log".
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ pkg-conf
No command 'pkg-conf' found, did you mean:
 Command 'pkgconf' from package 'pkgconf' (universe)
pkg-conf: command not found
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ pkg-config
Please specify at least one package name on the command line.
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ pkgcn[Konf
Please specify at least one package name on the command line.
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ whence pkgcnf[K[Konf
whence: command not found
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ where pkgconf
No command 'where' found, did you mean:
 Command 'gwhere' from package 'gwhere' (universe)
where: command not found
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ apt-get install [Ksudo apt-get install gwhere
[sudo] password for thaddeus: 
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
The following packages were automatically installed and are no longer required:
  linux-headers-4.2.0-16 linux-headers-4.2.0-16-generic linux-headers-4.2.0-18 linux-headers-4.2.0-18-generic
  linux-headers-4.2.0-19 linux-headers-4.2.0-19-generic linux-headers-4.2.0-22 linux-headers-4.2.0-22-generic
  linux-headers-4.2.0-23 linux-headers-4.2.0-23-generic linux-image-4.2.0-16-generic linux-image-4.2.0-18-generic
  linux-image-4.2.0-19-generic linux-image-4.2.0-22-generic linux-image-4.2.0-23-generic linux-image-extra-4.2.0-16-generic
  linux-image-extra-4.2.0-18-generic linux-image-extra-4.2.0-19-generic linux-image-extra-4.2.0-22-generic
  linux-image-extra-4.2.0-23-generic
Use 'apt-get autoremove' to remove them.
The following NEW packages will be installed:
  gwhere
0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 468 kB of archives.
After this operation, 1,447 kB of additional disk space will be used.
0% [Working]            Get:1 http://archive.ubuntu.com/ubuntu/ wily/universe gwhere amd64 0.2.3.dfsg.1-4 [468 kB]
            0% [1 gwhere 1,195 B/468 kB 0%]                               19% [1 gwhere 91.0 kB/468 kB 19%]                                 75% [1 gwhere 352 kB/468 kB 75%]                                100% [Working]              Fetched 468 kB in 1s (284 kB/s)
Selecting previously unselected package gwhere.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 425539 files and directories currently installed.)
Preparing to unpack .../gwhere_0.2.3.dfsg.1-4_amd64.deb ...
Unpacking gwhere (0.2.3.dfsg.1-4) ...
Processing triggers for man-db (2.7.4-1) ...
Processing triggers for gnome-menus (3.13.3-6ubuntu1) ...
Processing triggers for desktop-file-utils (0.22-1ubuntu3) ...
Processing triggers for bamfdaemon (0.5.2~bzr0+15.10.20150627.1-0ubuntu1) ...
Rebuilding /usr/share/applications/bamf-2.index...
Processing triggers for mime-support (3.58ubuntu1) ...
Setting up gwhere (0.2.3.dfsg.1-4) ...
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ gwhere pkgconf
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ su
Password: 
su: Authentication failure
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ apt-get removew[K gwhere
E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)
E: Unable to lock the administration directory (/var/lib/dpkg/), are you root?
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ su
Password: 
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# apt-get remove gwhere
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
The following packages were automatically installed and are no longer required:
  linux-headers-4.2.0-16 linux-headers-4.2.0-16-generic linux-headers-4.2.0-18 linux-headers-4.2.0-18-generic
  linux-headers-4.2.0-19 linux-headers-4.2.0-19-generic linux-headers-4.2.0-22 linux-headers-4.2.0-22-generic
  linux-headers-4.2.0-23 linux-headers-4.2.0-23-generic linux-image-4.2.0-16-generic linux-image-4.2.0-18-generic
  linux-image-4.2.0-19-generic linux-image-4.2.0-22-generic linux-image-4.2.0-23-generic linux-image-extra-4.2.0-16-generic
  linux-image-extra-4.2.0-18-generic linux-image-extra-4.2.0-19-generic linux-image-extra-4.2.0-22-generic
  linux-image-extra-4.2.0-23-generic
Use 'apt-get autoremove' to remove them.
The following packages will be REMOVED:
  gwhere
0 upgraded, 0 newly installed, 1 to remove and 4 not upgraded.
After this operation, 1,447 kB disk space will be freed.
Do you want to continue? [Y/n] y
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 425598 files and directories currently installed.)
Removing gwhere (0.2.3.dfsg.1-4) ...
Processing triggers for gnome-menus (3.13.3-6ubuntu1) ...
Processing triggers for desktop-file-utils (0.22-1ubuntu3) ...
Processing triggers for bamfdaemon (0.5.2~bzr0+15.10.20150627.1-0ubuntu1) ...
Rebuilding /usr/share/applications/bamf-2.index...
Processing triggers for mime-support (3.58ubuntu1) ...
Processing triggers for man-db (2.7.4-1) ...
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# pk[K[Kdpkg libclbas-bin
dpkg: error: need an action option

Type dpkg --help for help about installing and deinstalling packages [*];
Use 'apt' or 'aptitude' for user-friendly package management;
Type dpkg -Dhelp for a list of dpkg debug flag values;
Type dpkg --force-help for a list of forcing options;
Type dpkg-deb --help for help about manipulating *.deb files;

Options marked [*] produce a lot of output - pipe it through 'less' or 'more' !
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -I 
dpkg-deb: error: --info needs a .deb filename argument

Type dpkg-deb --help for help about manipulating *.deb files;
Type dpkg --help for help about installing and deinstalling packages.
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -I libclclab[K[Klab-[K[K[K[K[K[Kblas-bin.deb
dpkg-deb: error: failed to read archive 'libclblas-bin.deb': No such file or directory
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -I libclblas-bin.deb[K[K[K[K
dpkg-deb: error: failed to read archive 'libclblas-bin': No such file or directory
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -I libclblas-bin[K[K[K[K[K[K[K[K[K[K[K[K[K[K[KL 
dpkg-query: error: --listfiles needs at least one package name argument

Use --help for help about querying packages.
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -L [K[Kl[K[K[K[K[K[K[Kman dpkg
[?1049h[?1h=dpkg(1)                                                  dpkg suite                                                  dpkg(1)[m
[m
[1mNAME[0m[m
       dpkg - package manager for Debian[m
[m
[1mSYNOPSIS[0m[m
       [1mdpkg[0m [[4moption[24m...] [4maction[24m[m
[m
[1mWARNING[0m[m
       This manual is intended for users wishing to understand [1mdpkg[0m's command line options and package states in more detail[m
       than that provided by [1mdpkg[0m [1m--help[0m.[m
[m
       It should [4mnot[24m be used by package maintainers wishing to understand how [1mdpkg[0m will install their packages. The descrip‐[m
       tions of what [1mdpkg[0m does when installing and removing packages are particularly inadequate.[m
[m
[1mDESCRIPTION[0m[m
       [1mdpkg[0m is a tool to install, build, remove and manage Debian packages. The primary and more user-friendly front-end for[m
       [1mdpkg[0m is [1maptitude[0m(1). [1mdpkg[0m itself is controlled entirely via command line parameters, which  consist  of  exactly  one[m
       action  and  zero or more options. The action-parameter tells [1mdpkg[0m what to do and options control the behavior of the[m
       action in some way.[m
[m
       [1mdpkg[0m can also be used as a front-end to [1mdpkg-deb[0m(1) and [1mdpkg-query[0m(1). The list of supported  actions  can  be  found[m
       later  on  in  the  [1mACTIONS[0m section. If any such action is encountered [1mdpkg[0m just runs [1mdpkg-deb[0m or [1mdpkg-query[0m with the[m
       parameters given to it, but no specific options are currently passed to them, to use any such  option  the  back-ends[m
       need to be called directly.[m
[m
[1mINFORMATION[0m [1mABOUT[0m [1mPACKAGES[0m[m
       [1mdpkg[0m maintains some usable information about available packages. The information is divided in three classes: [1mstates[0m,[m
       [1mselection[0m [1mstates[0m and [1mflags[0m. These values are intended to be changed mainly with [1mdselect[0m.[m
[m
   [1mPackage[0m [1mstates[0m[m
       [1mnot-installed[0m[m
              The package is not installed on your system.[m
[m
       [1mconfig-files[0m[m
              Only the configuration files of the package exist on the system.[m
[m
       [1mhalf-installed[0m[m
              The installation of the package has been started, but not completed for some reason.[m
[m
       [1munpacked[0m[m
              The package is unpacked, but not configured.[m
[m
       [1mhalf-configured[0m[m
              The package is unpacked and configuration has been started, but not yet completed for some reason.[m
[m
       [1mtriggers-awaited[0m[m
              The package awaits trigger processing by another package.[m
[m
[7m Manual page dpkg(1) line 1 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1mtriggers-pending[0m[m
[7m Manual page dpkg(1) line 2 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              The package has been triggered.[m
[7m Manual page dpkg(1) line 3 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 4 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1minstalled[0m[m
[7m Manual page dpkg(1) line 5 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              The package is correctly unpacked and configured.[m
[7m Manual page dpkg(1) line 6 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 7 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K   [1mPackage[0m [1mselection[0m [1mstates[0m[m
[7m Manual page dpkg(1) line 8 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1minstall[0m[m
[7m Manual page dpkg(1) line 9 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              The package is selected for installation.[m
[7m Manual page dpkg(1) line 10 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 11 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1mhold[0m   A package marked to be on [1mhold[0m is not handled by [1mdpkg[0m, unless forced to do that with option [1m--force-hold[0m.[m
[7m Manual page dpkg(1) line 12 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 13 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1mdeinstall[0m[m
[7m Manual page dpkg(1) line 14 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              The package is selected for deinstallation (i.e. we want to remove all files, except configuration files).[m
[7m Manual page dpkg(1) line 15 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 16 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1mpurge[0m  The package is selected to be purged (i.e. we want to remove everything from system directories, even configu‐[m
[7m Manual page dpkg(1) line 17 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              ration files).[m
[7m Manual page dpkg(1) line 18 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 19 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K   [1mPackage[0m [1mflags[0m[m
[7m Manual page dpkg(1) line 20 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1mreinst-required[0m[m
[7m Manual page dpkg(1) line 21 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              A  package  marked  [1mreinst-required[0m  is  broken and requires reinstallation. These packages cannot be removed,[m
[7m Manual page dpkg(1) line 22 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              unless forced with option [1m--force-remove-reinstreq[0m.[m
[7m Manual page dpkg(1) line 23 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 24 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[1mACTIONS[0m[m
[7m Manual page dpkg(1) line 25 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m-i[0m, [1m--install[0m [4mpackage-file[24m...[m
[7m Manual page dpkg(1) line 26 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Install the package. If [1m--recursive[0m or [1m-R[0m option is specified, [4mpackage-file[24m must refer to a directory instead.[m
[7m Manual page dpkg(1) line 27 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 28 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Installation consists of the following steps:[m
[7m Manual page dpkg(1) line 29 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 30 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m1.[0m Extract the control files of the new package.[m
[7m Manual page dpkg(1) line 31 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 32 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m2.[0m If another version of the same package was installed before the new installation, execute [4mprerm[24m  script  of[m
[7m Manual page dpkg(1) line 33 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              the old package.[m
[7m Manual page dpkg(1) line 34 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 35 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m3.[0m Run [4mpreinst[24m script, if provided by the package.[m
[7m Manual page dpkg(1) line 36 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 37 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m4.[0m Unpack the new files, and at the same time back up the old files, so that if something goes wrong, they can[m
[7m Manual page dpkg(1) line 38 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              be restored.[m
[7m Manual page dpkg(1) line 39 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 40 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m5.[0m If another version of the same package was installed before the new installation, execute the [4mpostrm[24m script[m
[7m Manual page dpkg(1) line 41 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              of the old package. Note that this script is executed after the [4mpreinst[24m script of the new package, because new[m
[7m Manual page dpkg(1) line 42 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              files are written at the same time old files are removed.[m
[7m Manual page dpkg(1) line 43 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 44 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m6.[0m Configure the package. See [1m--configure[0m for detailed information about how this is done.[m
[7m Manual page dpkg(1) line 45 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 46 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m--unpack[0m [4mpackage-file[24m...[m
[7m Manual page dpkg(1) line 47 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Unpack the package, but don't configure it. If [1m--recursive[0m or [1m-R[0m option is specified, [4mpackage-file[24m must  refer[m
[7m Manual page dpkg(1) line 48 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              to a directory instead.[m
[7m Manual page dpkg(1) line 49 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 50 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m--configure[0m [4mpackage[24m...|[1m-a[0m|[1m--pending[0m[m
[7m Manual page dpkg(1) line 51 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Configure  a  package  which has been unpacked but not yet configured.  If [1m-a[0m or [1m--pending[0m is given instead of[m
[7m Manual page dpkg(1) line 52 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [4mpackage[24m, all unpacked but unconfigured packages are configured.[m
[7m Manual page dpkg(1) line 53 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 54 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              To reconfigure a package which has already been configured, try the [1mdpkg-reconfigure[0m(8) command instead.[m
[7m Manual page dpkg(1) line 55 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 56 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Configuring consists of the following steps:[m
[7m Manual page dpkg(1) line 57 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 58 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m1.[0m Unpack the conffiles, and at the same time back up the old conffiles, so that they can be restored if some‐[m
[7m Manual page dpkg(1) line 59 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              thing goes wrong.[m
[7m Manual page dpkg(1) line 60 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 61 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m2.[0m Run [4mpostinst[24m script, if provided by the package.[m
[7m Manual page dpkg(1) line 62 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 63 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m--triggers-only[0m [4mpackage[24m...|[1m-a[0m|[1m--pending[0m[m
[7m Manual page dpkg(1) line 64 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Processes  only  triggers (since dpkg 1.14.17).  All pending triggers will be processed.  If package names are[m
[7m Manual page dpkg(1) line 65 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              supplied only those packages' triggers will be processed, exactly once  each  where  necessary.  Use  of  this[m
[7m Manual page dpkg(1) line 66 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              option  may  leave  packages  in  the improper [1mtriggers-awaited[0m and [1mtriggers-pending[0m states. This can be fixed[m
[7m Manual page dpkg(1) line 67 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              later by running: [1mdpkg[0m [1m--configure[0m [1m--pending[0m.[m
[7m Manual page dpkg(1) line 68 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 69 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m-r[0m, [1m--remove[0m [4mpackage[24m[1m...|-a|--pending[0m[m
[7m Manual page dpkg(1) line 70 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Remove an installed package. This removes everything except conffiles, which may avoid having  to  reconfigure[m
[7m Manual page dpkg(1) line 71 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              the  package if it is reinstalled later (conffiles are configuration files that are listed in the [4mDEBIAN/conf‐[24m[m
[7m Manual page dpkg(1) line 72 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [4mfiles[24m control file).  If [1m-a[0m or [1m--pending[0m is given instead of a package name, then all packages  unpacked,  but[m
[7m Manual page dpkg(1) line 73 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              marked to be removed in file [4m/var/lib/dpkg/status[24m, are removed.[m
[7m Manual page dpkg(1) line 74 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 75 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Removing of a package consists of the following steps:[m
[7m Manual page dpkg(1) line 76 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 77 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m1.[0m Run [4mprerm[24m script[m
[7m Manual page dpkg(1) line 78 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 79 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m2.[0m Remove the installed files[m
[7m Manual page dpkg(1) line 80 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 81 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m3.[0m Run [4mpostrm[24m script[m
[7m Manual page dpkg(1) line 82 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 83 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m-P[0m, [1m--purge[0m [4mpackage[24m...|[1m-a[0m|[1m--pending[0m[m
[7m Manual page dpkg(1) line 84 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Purge an installed or already removed package. This removes everything, including conffiles.  If [1m-a[0m or [1m--pend‐[0m[m
[7m Manual page dpkg(1) line 85 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1ming[0m is given instead of a package name, then all packages unpacked or removed, but marked to be purged in file[m
[7m Manual page dpkg(1) line 86 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [4m/var/lib/dpkg/status[24m, are purged.[m
[7m Manual page dpkg(1) line 87 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 88 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Note:  some  configuration  files  might  be  unknown  to [1mdpkg[0m because they are created and handled separately[m
[7m Manual page dpkg(1) line 89 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              through the configuration scripts. In that case, [1mdpkg[0m won't remove them by itself, but  the  package's  [4mpostrm[24m[m
[7m Manual page dpkg(1) line 90 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              script (which is called by [1mdpkg[0m), has to take care of their removal during purge. Of course, this only applies[m
[7m Manual page dpkg(1) line 91 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              to files in system directories, not configuration files written to individual users' home directories.[m
[7m Manual page dpkg(1) line 92 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 93 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Purging of a package consists of the following steps:[m
[7m Manual page dpkg(1) line 94 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 95 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m1.[0m Remove the package, if not already removed. See [1m--remove[0m for detailed information about how this is done.[m
[7m Manual page dpkg(1) line 96 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 97 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1m2.[0m Run [4mpostrm[24m script.[m
[7m Manual page dpkg(1) line 98 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 99 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m-V[0m, [1m--verify[0m [[4mpackage-name[24m...][m
[7m Manual page dpkg(1) line 100 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Verifies the integrity of [4mpackage-name[24m or all packages if omitted, by comparing  information  from  the  files[m
[7m Manual page dpkg(1) line 101 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              installed  by  a  package with the files metadata information stored in the [1mdpkg[0m database (since dpkg 1.17.2).[m
[7m Manual page dpkg(1) line 102 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              The origin of the files metadata information in the database is the binary packages themselves. That  metadata[m
[7m Manual page dpkg(1) line 103 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              gets collected at package unpack time during the installation process.[m
[7m Manual page dpkg(1) line 104 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 105 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Currently  the only functional check performed is an md5sum verification against the stored value in the files[m
[7m Manual page dpkg(1) line 106 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              database. It will only get checked if the database contains the file md5sum. To check for any missing metadata[m
[7m Manual page dpkg(1) line 107 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              in the database, the [1m--audit[0m command can be used.[m
[7m Manual page dpkg(1) line 108 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 109 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              The  output  format  is  selectable with the [1m--verify-format[0m option, which by default uses the [1mrpm[0m format, but[m
[7m Manual page dpkg(1) line 110 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              that might change in the future, and as such, programs parsing this command output should  be  explicit  about[m
[7m Manual page dpkg(1) line 111 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              the format they expect.[m
[7m Manual page dpkg(1) line 112 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 113 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m--update-avail[0m [[4mPackages-file[24m][m
[7m Manual page dpkg(1) line 114 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K       [1m--merge-avail[0m [[4mPackages-file[24m][m
[7m Manual page dpkg(1) line 115 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              Update  [1mdpkg[0m's  and [1mdselect[0m's idea of which packages are available. With action [1m--merge-avail[0m, old information[m
[7m Manual page dpkg(1) line 116 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              is combined with information from [4mPackages-file[24m. With action [1m--update-avail[0m, old information is replaced  with[m
[7m Manual page dpkg(1) line 117 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              the  information  in the [4mPackages-file[24m. The [4mPackages-file[24m distributed with Debian is simply named [4mPackages[24m. If[m
[7m Manual page dpkg(1) line 118 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              the [4mPackages-file[24m argument is missing or named [1m-[0m then it will be read from standard input (since dpkg 1.17.7).[m
[7m Manual page dpkg(1) line 119 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K              [1mdpkg[0m keeps its record of available packages in [4m/var/lib/dpkg/available[24m.[m
[7m Manual page dpkg(1) line 120 (press h for help or q to quit)[27m[K[K [KESCESC[KOO[KBB[K[m
[7m Manual page dpkg(1) line 121 (press h for help or q to quit)[27m[K[K-[K[7m Manual page dpkg(1) line 121 (press h for help or q to quit)[27m[K[K              A simpler one-shot command to retrieve and update the [4mavailable[24m file is [1mdselect[0m [1mupdate[0m. Note that this file is[m
              mostly useless if you don't use [1mdselect[0m but an APT-based frontend: APT has its own system  to  keep  track  of[m
              available packages.[m
[m
       [1m-A[0m, [1m--record-avail[0m [4mpackage-file[24m...[m
              Update [1mdpkg[0m and [1mdselect[0m's idea of which packages are available with information from the package [4mpackage-file[24m.[m
              If [1m--recursive[0m or [1m-R[0m option is specified, [4mpackage-file[24m must refer to a directory instead.[m
[m
       [1m--forget-old-unavail[0m[m
              Now [1mobsolete[0m and a no-op as [1mdpkg[0m will  automatically  forget  uninstalled  unavailable  packages  (since  dpkg[m
              1.15.4).[m
[m
       [1m--clear-avail[0m[m
              Erase the existing information about what packages are available.[m
[m
       [1m-C[0m, [1m--audit[0m [[4mpackage-name[24m...][m
              Performs  database  sanity  and  consistency  checks  for [4mpackage-name[24m or all packages if omitted (per package[m
              checks since dpkg 1.17.10).  For example, searches for packages that have been  installed  only  partially  on[m
              your  system  or that have missing, wrong or obsolete control data or files. [1mdpkg[0m will suggest what to do with[m
              them to get them fixed.[m
[m
       [1m--get-selections[0m [[4mpackage-name-pattern[24m...][m
              Get list of package selections, and write it to stdout. Without a pattern, non-installed packages (i.e.  those[m
              which have been previously purged) will not be shown.[m
[m
       [1m--set-selections[0m[m
              Set  package  selections  using file read from stdin. This file should be in the format “[4mpackage[24m [4mstate[24m”, where[m
              state is one of [1minstall[0m, [1mhold[0m, [1mdeinstall[0m or [1mpurge[0m. Blank lines and comment lines beginning with ‘#’  are  also[m
              permitted.[m
[m
              The  [4mavailable[24m  file  needs to be up-to-date for this command to be useful, otherwise unknown packages will be[m
              ignored with a warning. See the [1m--update-avail[0m and [1m--merge-avail[0m commands for more information.[m
[m
       [1m--clear-selections[0m[m
              Set the requested state of every non-essential package to deinstall (since dpkg 1.13.18).  This is intended to[m
              be used immediately before [1m--set-selections[0m, to deinstall any packages not in list given to [1m--set-selections[0m.[m
[m
       [1m--yet-to-unpack[0m[m
              Searches for packages selected for installation, but which for some reason still haven't been installed.[m
[m
       [1m--predep-packages[0m[m
              Print a single package which is the target of one or more relevant pre-dependencies and has itself no unsatis‐[m
              fied pre-dependencies.[m
[m
              If such a package is present, output it as a Packages file entry, which can be massaged as appropriate.[m
[m
              Returns 0 when a package is printed, 1 when no suitable package is available and 2 on error.[m
[m
       [1m--add-architecture[0m [4marchitecture[24m[m
[7m Manual page dpkg(1) line 170 (press h for help or q to quit)[27m[K[K[?1l>[?1049l]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# find /usr -name clblas.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# apt-get install libclblas-dev 
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree       
Reading state information... 0%Reading state information... 0%Reading state information... Done
The following packages were automatically installed and are no longer required:
  linux-headers-4.2.0-16 linux-headers-4.2.0-16-generic linux-headers-4.2.0-18 linux-headers-4.2.0-18-generic
  linux-headers-4.2.0-19 linux-headers-4.2.0-19-generic linux-headers-4.2.0-22 linux-headers-4.2.0-22-generic
  linux-headers-4.2.0-23 linux-headers-4.2.0-23-generic linux-image-4.2.0-16-generic linux-image-4.2.0-18-generic
  linux-image-4.2.0-19-generic linux-image-4.2.0-22-generic linux-image-4.2.0-23-generic linux-image-extra-4.2.0-16-generic
  linux-image-extra-4.2.0-18-generic linux-image-extra-4.2.0-19-generic linux-image-extra-4.2.0-22-generic
  linux-image-extra-4.2.0-23-generic
Use 'apt-get autoremove' to remove them.
The following NEW packages will be installed:
  libclblas-dev
0 upgraded, 1 newly installed, 0 to remove and 4 not upgraded.
Need to get 26.2 kB of archives.
After this operation, 911 kB of additional disk space will be used.
0% [Working]            Get:1 http://archive.ubuntu.com/ubuntu/ wily/universe libclblas-dev amd64 2.6-2 [26.2 kB]
            5% [1 libclblas-dev 1,213 B/26.2 kB 5%]                                       100% [Working]              Fetched 26.2 kB in 0s (66.3 kB/s)
Selecting previously unselected package libclblas-dev.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 425539 files and directories currently installed.)
Preparing to unpack .../libclblas-dev_2.6-2_amd64.deb ...
Unpacking libclblas-dev (2.6-2) ...
Setting up libclblas-dev (2.6-2) ...
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# apt-get install libclblas-dev [6Pfind /usr -name clblas.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# man apt-get
[?1049h[?1h=APT-GET(8)                                                   APT                                                  APT-GET(8)[m
[m
[1mNAME[0m[m
       apt-get - APT package handling utility -- command-line interface[m
[m
[1mSYNOPSIS[0m[m
       [1mapt-get[0m [[1m-asqdyfmubV[0m] [[1m-o=[0m[4mconfig_string[24m] [[1m-c=[0m[4mconfig_file[24m] [[1m-t=[0m[4mtarget_release[24m] [[1m-a=[0m[4marchitecture[24m] {update | upgrade |[m
               dselect-upgrade | dist-upgrade | install [4mpkg[24m [{=[4mpkg_version_number[24m | /[4mtarget_release[24m}]...  | remove [4mpkg[24m...  |[m
               purge [4mpkg[24m...  | source [4mpkg[24m [{=[4mpkg_version_number[24m | /[4mtarget_release[24m}]...  |[m
               build-dep [4mpkg[24m [{=[4mpkg_version_number[24m | /[4mtarget_release[24m}]...  |[m
               download [4mpkg[24m [{=[4mpkg_version_number[24m | /[4mtarget_release[24m}]...  | check | clean | autoclean | autoremove |[m
               {-v | --version} | {-h | --help}}[m
[m
[1mDESCRIPTION[0m[m
       [1mapt-get[0m is the command-line tool for handling packages, and may be considered the user's "back-end" to other tools[m
       using the APT library. Several "front-end" interfaces exist, such as [1maptitude[0m(8), [1msynaptic[0m(8) and [1mwajig[0m(1).[m
[m
       Unless the [1m-h[0m, or [1m--help[0m option is given, one of the commands below must be present.[m
[m
       [1mupdate[0m[m
           update is used to resynchronize the package index files from their sources. The indexes of available packages are[m
           fetched from the location(s) specified in /etc/apt/sources.list. For example, when using a Debian archive, this[m
           command retrieves and scans the Packages.gz files, so that information about new and updated packages is[m
           available. An update should always be performed before an upgrade or dist-upgrade. Please be aware that the[m
           overall progress meter will be incorrect as the size of the package files cannot be known in advance.[m
[m
       [1mupgrade[0m[m
           upgrade is used to install the newest versions of all packages currently installed on the system from the sources[m
           enumerated in /etc/apt/sources.list. Packages currently installed with new versions available are retrieved and[m
           upgraded; under no circumstances are currently installed packages removed, or packages not already installed[m
           retrieved and installed. New versions of currently installed packages that cannot be upgraded without changing[m
           the install status of another package will be left at their current version. An update must be performed first so[m
           that [1mapt-get[0m knows that new versions of packages are available.[m
[m
       [1mdist-upgrade[0m[m
           dist-upgrade in addition to performing the function of upgrade, also intelligently handles changing dependencies[m
           with new versions of packages; [1mapt-get[0m has a "smart" conflict resolution system, and it will attempt to upgrade[m
           the most important packages at the expense of less important ones if necessary. The dist-upgrade command may[m
           therefore remove some packages. The /etc/apt/sources.list file contains a list of locations from which to[m
           retrieve desired package files. See also [1mapt_preferences[0m(5) for a mechanism for overriding the general settings[m
           for individual packages.[m
[m
       [1mdselect-upgrade[0m[m
           dselect-upgrade is used in conjunction with the traditional Debian packaging front-end, [1mdselect[0m(1).[m
           dselect-upgrade follows the changes made by [1mdselect[0m(1) to the Status field of available packages, and performs[m
           the actions necessary to realize that state (for instance, the removal of old and the installation of new[m
           packages).[m
[m
       [1minstall[0m[m
[7m Manual page apt-get(8) line 1 (press h for help or q to quit)[27m[K[K           install is followed by one or more packages desired for installation or upgrading. Each package is a package[m
           name, not a fully qualified filename (for instance, in a Debian system, apt-utils would be the argument provided,[m
           not apt-utils_1.0.10.2ubuntu1_amd64.deb). All packages required by the package(s) specified for installation will[m
           also be retrieved and installed. The /etc/apt/sources.list file is used to locate the desired packages. If a[m
           hyphen is appended to the package name (with no intervening space), the identified package will be removed if it[m
           is installed. Similarly a plus sign can be used to designate a package to install. These latter features may be[m
           used to override decisions made by apt-get's conflict resolution system.[m
[m
           A specific version of a package can be selected for installation by following the package name with an equals and[m
           the version of the package to select. This will cause that version to be located and selected for install.[m
           Alternatively a specific distribution can be selected by following the package name with a slash and the version[m
           of the distribution or the Archive name (stable, testing, unstable).[m
[m
           Both of the version selection mechanisms can downgrade packages and must be used with care.[m
[m
           This is also the target to use if you want to upgrade one or more already-installed packages without upgrading[m
           every package you have on your system. Unlike the "upgrade" target, which installs the newest version of all[m
           currently installed packages, "install" will install the newest version of only the package(s) specified. Simply[m
           provide the name of the package(s) you wish to upgrade, and if a newer version is available, it (and its[m
           dependencies, as described above) will be downloaded and installed.[m
[m
           Finally, the [1mapt_preferences[0m(5) mechanism allows you to create an alternative installation policy for individual[m
           packages.[m
[m
           If no package matches the given expression and the expression contains one of '.', '?' or '*' then it is assumed[m
           to be a POSIX regular expression, and it is applied to all package names in the database. Any matches are then[m
           installed (or removed). Note that matching is done by substring so 'lo.*' matches 'how-lo' and 'lowest'. If this[m
           is undesired, anchor the regular expression with a '^' or '$' character, or create a more specific regular[m
           expression.[m
[m
       [1mremove[0m[m
           remove is identical to install except that packages are removed instead of installed. Note that removing a[m
           package leaves its configuration files on the system. If a plus sign is appended to the package name (with no[m
           intervening space), the identified package will be installed instead of removed.[m
[m
       [1mpurge[0m[m
           purge is identical to remove except that packages are removed and purged (any configuration files are deleted[m
           too).[m
[m
       [1msource[0m[m
           source causes [1mapt-get[0m to fetch source packages. APT will examine the available packages to decide which source[m
           package to fetch. It will then find and download into the current directory the newest available version of that[m
           source package while respecting the default release, set with the option APT::Default-Release, the [1m-t[0m option or[m
           per package with the pkg/release syntax, if possible.[m
[m
           Source packages are tracked separately from binary packages via deb-src lines in the [1msources.list[0m(5) file. This[m
           means that you will need to add such a line for each repository you want to get sources from; otherwise you will[m
           probably get either the wrong (too old/too new) source versions or none at all.[m
[m
[7m Manual page apt-get(8) line 50 (press h for help or q to quit)[27m[K[K           If the [1m--compile[0m option is specified then the package will be compiled to a binary .deb using [1mdpkg-buildpackage[0m[m
           for the architecture as defined by the [1m--host-architecture[0m option. If [1m--download-only[0m is specified then the[m
           source package will not be unpacked.[m
[m
           A specific source version can be retrieved by postfixing the source name with an equals and then the version to[m
           fetch, similar to the mechanism used for the package files. This enables exact matching of the source package[m
           name and version, implicitly enabling the APT::Get::Only-Source option.[m
[m
           Note that source packages are not installed and tracked in the [1mdpkg[0m database like binary packages; they are[m
           simply downloaded to the current directory, like source tarballs.[m
[m
       [1mbuild-dep[0m[m
           build-dep causes apt-get to install/remove packages in an attempt to satisfy the build dependencies for a source[m
           package. By default the dependencies are satisfied to build the package natively. If desired a host-architecture[m
           can be specified with the [1m--host-architecture[0m option instead.[m
[m
       [1mcheck[0m[m
           check is a diagnostic tool; it updates the package cache and checks for broken dependencies.[m
[m
       [1mdownload[0m[m
           download will download the given binary package into the current directory.[m
[m
       [1mclean[0m[m
           clean clears out the local repository of retrieved package files. It removes everything but the lock file from[m
           /var/cache/apt/archives/ and /var/cache/apt/archives/partial/.[m
[m
       [1mautoclean[0m[m
           Like clean, autoclean clears out the local repository of retrieved package files. The difference is that it only[m
           removes package files that can no longer be downloaded, and are largely useless. This allows a cache to be[m
           maintained over a long period without it growing out of control. The configuration option APT::Clean-Installed[m
           will prevent installed packages from being erased if it is set to off.[m
[m
       [1mautoremove[0m[m
           autoremove is used to remove packages that were automatically installed to satisfy dependencies for other[m
           packages and are now no longer needed.[m
[m
       [1mchangelog[0m[m
           changelog downloads a package changelog and displays it through [1msensible-pager[0m. The server name and base[m
           directory is defined in the APT::Changelogs::Server variable (e.g.  [1mpackages.debian.org/changelogs[0m[1] for Debian[m
           or [1mchangelogs.ubuntu.com/changelogs[0m[2] for Ubuntu). By default it displays the changelog for the version that is[m
           installed. However, you can specify the same options as for the [1minstall[0m command.[m
[m
[1mOPTIONS[0m[m
       All command line options may be set using the configuration file, the descriptions indicate the configuration option[m
       to set. For boolean options you can override the config file by using something like [1m-f-[0m,[1m--no-f[0m, [1m-f=no[0m or several[m
       other variations.[m
[m
       [1m--no-install-recommends[0m[m
           Do not consider recommended packages as a dependency for installing. Configuration Item: APT::Install-Recommends.[m
[7m Manual page apt-get(8) line 99 (press h for help or q to quit)[27m[K[K[m
       [1m--install-suggests[0m[m
           Consider suggested packages as a dependency for installing. Configuration Item: APT::Install-Suggests.[m
[m
       [1m-d[0m, [1m--download-only[0m[m
           Download only; package files are only retrieved, not unpacked or installed. Configuration Item:[m
           APT::Get::Download-Only.[m
[m
       [1m-f[0m, [1m--fix-broken[0m[m
           Fix; attempt to correct a system with broken dependencies in place. This option, when used with install/remove,[m
           can omit any packages to permit APT to deduce a likely solution. If packages are specified, these have to[m
           completely correct the problem. The option is sometimes necessary when running APT for the first time; APT itself[m
           does not allow broken package dependencies to exist on a system. It is possible that a system's dependency[m
           structure can be so corrupt as to require manual intervention (which usually means using [1mdpkg[0m [1m--remove[0m to[m
           eliminate some of the offending packages). Use of this option together with [1m-m[0m may produce an error in some[m
           situations. Configuration Item: APT::Get::Fix-Broken.[m
[m
       [1m-m[0m, [1m--ignore-missing[0m, [1m--fix-missing[0m[m
           Ignore missing packages; if packages cannot be retrieved or fail the integrity check after retrieval (corrupted[m
           package files), hold back those packages and handle the result. Use of this option together with [1m-f[0m may produce[m
           an error in some situations. If a package is selected for installation (particularly if it is mentioned on the[m
           command line) and it could not be downloaded then it will be silently held back. Configuration Item:[m
           APT::Get::Fix-Missing.[m
[m
       [1m--no-download[0m[m
           Disables downloading of packages. This is best used with [1m--ignore-missing[0m to force APT to use only the .debs it[m
           has already downloaded. Configuration Item: APT::Get::Download.[m
[m
       [1m-q[0m, [1m--quiet[0m[m
           Quiet; produces output suitable for logging, omitting progress indicators. More q's will produce more quiet up to[m
           a maximum of 2. You can also use [1m-q=#[0m to set the quiet level, overriding the configuration file. Note that quiet[m
           level 2 implies [1m-y[0m; you should never use -qq without a no-action modifier such as -d, --print-uris or -s as APT[m
           may decide to do something you did not expect. Configuration Item: quiet.[m
[m
       [1m-s[0m, [1m--simulate[0m, [1m--just-print[0m, [1m--dry-run[0m, [1m--recon[0m, [1m--no-act[0m[m
           No action; perform a simulation of events that would occur but do not actually change the system. Configuration[m
           Item: APT::Get::Simulate.[m
[m
           Simulated runs performed as a user will automatically deactivate locking (Debug::NoLocking), and if the option[m
           APT::Get::Show-User-Simulation-Note is set (as it is by default) a notice will also be displayed indicating that[m
           this is only a simulation. Runs performed as root do not trigger either NoLocking or the notice - superusers[m
           should know what they are doing without further warnings from apt-get.[m
[m
           Simulated runs print out a series of lines, each representing a [1mdpkg[0m operation: configure (Conf), remove (Remv)[m
           or unpack (Inst). Square brackets indicate broken packages, and empty square brackets indicate breaks that are of[m
           no consequence (rare).[m
[m
       [1m-y[0m, [1m--yes[0m, [1m--assume-yes[0m[m
           Automatic yes to prompts; assume "yes" as answer to all prompts and run non-interactively. If an undesirable[m
[7m Manual page apt-get(8) line 148 (press h for help or q to quit)[27m[K[K           situation, such as changing a held package, trying to install a unauthenticated package or removing an essential[m
           package occurs then apt-get will abort. Configuration Item: APT::Get::Assume-Yes.[m
[m
       [1m--assume-no[0m[m
           Automatic "no" to all prompts. Configuration Item: APT::Get::Assume-No.[m
[m
       [1m-u[0m, [1m--show-upgraded[0m[m
           Show upgraded packages; print out a list of all packages that are to be upgraded. Configuration Item:[m
           APT::Get::Show-Upgraded.[m
[m
       [1m-V[0m, [1m--verbose-versions[0m[m
           Show full versions for upgraded and installed packages. Configuration Item: APT::Get::Show-Versions.[m
[m
       [1m-a[0m, [1m--host-architecture[0m[m
           This option controls the architecture packages are built for by [1mapt-get[0m [1msource[0m [1m--compile[0m and how[m
           cross-builddependencies are satisfied. By default is it not set which means that the host architecture is the[m
           same as the build architecture (which is defined by APT::Architecture). Configuration Item:[m
           APT::Get::Host-Architecture.[m
[m
       [1m-P[0m, [1m--build-profiles[0m[m
           This option controls the activated build profiles for which a source package is built by [1mapt-get[0m [1msource[0m [1m--compile[0m[m
           and how build dependencies are satisfied. By default no build profile is active. More than one build profile can[m
           be activated at a time by concatenating them with a comma. Configuration Item: APT::Build-Profiles.[m
[m
       [1m-b[0m, [1m--compile[0m, [1m--build[0m[m
           Compile source packages after downloading them. Configuration Item: APT::Get::Compile.[m
[m
       [1m--ignore-hold[0m[m
           Ignore package holds; this causes [1mapt-get[0m to ignore a hold placed on a package. This may be useful in conjunction[m
           with dist-upgrade to override a large number of undesired holds. Configuration Item: APT::Ignore-Hold.[m
[m
       [1m--with-new-pkgs[0m[m
           Allow installing new packages when used in conjunction with upgrade. This is useful if the update of a installed[m
           package requires new dependencies to be installed. Instead of holding the package back upgrade will upgrade the[m
           package and install the new dependencies. Note that upgrade with this option will never remove packages, only[m
           allow adding new ones. Configuration Item: APT::Get::Upgrade-Allow-New.[m
[m
       [1m--no-upgrade[0m[m
           Do not upgrade packages; when used in conjunction with install, no-upgrade will prevent packages on the command[m
           line from being upgraded if they are already installed. Configuration Item: APT::Get::Upgrade.[m
[m
       [1m--only-upgrade[0m[m
           Do not install new packages; when used in conjunction with install, only-upgrade will install upgrades for[m
           already installed packages only and ignore requests to install new packages. Configuration Item:[m
           APT::Get::Only-Upgrade.[m
[m
       [1m--force-yes[0m[m
           Force yes; this is a dangerous option that will cause apt to continue without prompting if it is doing something[m
           potentially harmful. It should not be used except in very special situations. Using force-yes can potentially[m
[7m Manual page apt-get(8) line 197 (press h for help or q to quit)[27m[K[K           destroy your system! Configuration Item: APT::Get::force-yes.[m
[m
       [1m--print-uris[0m[m
           Instead of fetching the files to install their URIs are printed. Each URI will have the path, the destination[m
           file name, the size and the expected MD5 hash. Note that the file name to write to will not always match the file[m
           name on the remote site! This also works with the source and update commands. When used with the update command[m
           the MD5 and size are not included, and it is up to the user to decompress any compressed files. Configuration[m
           Item: APT::Get::Print-URIs.[m
[m
       [1m--purge[0m[m
           Use purge instead of remove for anything that would be removed. An asterisk ("*") will be displayed next to[m
           packages which are scheduled to be purged.  [1mremove[0m [1m--purge[0m is equivalent to the [1mpurge[0m command. Configuration[m
           Item: APT::Get::Purge.[m
[m
       [1m--reinstall[0m[m
           Re-install packages that are already installed and at the newest version. Configuration Item:[m
           APT::Get::ReInstall.[m
[m
       [1m--list-cleanup[0m[m
           This option is on by default; use --no-list-cleanup to turn it off. When it is on, [1mapt-get[0m will automatically[m
           manage the contents of /var/lib/apt/lists to ensure that obsolete files are erased. The only reason to turn it[m
           off is if you frequently change your sources list. Configuration Item: APT::Get::List-Cleanup.[m
[m
       [1m-t[0m, [1m--target-release[0m, [1m--default-release[0m[m
           This option controls the default input to the policy engine; it creates a default pin at priority 990 using the[m
           specified release string. This overrides the general settings in /etc/apt/preferences. Specifically pinned[m
           packages are not affected by the value of this option. In short, this option lets you have simple control over[m
           which distribution packages will be retrieved from. Some common examples might be [1m-t[0m [1m'2.1*'[0m, [1m-t[0m [1munstable[0m or [1m-t[0m[m
           [1msid[0m. Configuration Item: APT::Default-Release; see also the [1mapt_preferences[0m(5) manual page.[m
[m
       [1m--trivial-only[0m[m
           Only perform operations that are 'trivial'. Logically this can be considered related to [1m--assume-yes[0m; where[m
           [1m--assume-yes[0m will answer yes to any prompt, [1m--trivial-only[0m will answer no. Configuration Item:[m
           APT::Get::Trivial-Only.[m
[m
       [1m--no-remove[0m[m
           If any packages are to be removed apt-get immediately aborts without prompting. Configuration Item:[m
           APT::Get::Remove.[m
[m
       [1m--auto-remove[0m[m
           If the command is either install or remove, then this option acts like running the autoremove command, removing[m
           unused dependency packages. Configuration Item: APT::Get::AutomaticRemove.[m
[m
       [1m--only-source[0m[m
           Only has meaning for the source and build-dep commands. Indicates that the given source names are not to be[m
           mapped through the binary table. This means that if this option is specified, these commands will only accept[m
           source package names as arguments, rather than accepting binary package names and looking up the corresponding[m
           source package. Configuration Item: APT::Get::Only-Source.[m
[m
[7m Manual page apt-get(8) line 246 (press h for help or q to quit)[27m[K[K       [1m--diff-only[0m, [1m--dsc-only[0m, [1m--tar-only[0m[m
           Download only the diff, dsc, or tar file of a source archive. Configuration Item: APT::Get::Diff-Only,[m
           APT::Get::Dsc-Only, and APT::Get::Tar-Only.[m
[m
       [1m--arch-only[0m[m
           Only process architecture-dependent build-dependencies. Configuration Item: APT::Get::Arch-Only.[m
[m
       [1m--allow-unauthenticated[0m[m
           Ignore if packages can't be authenticated and don't prompt about it. This is useful for tools like pbuilder.[m
           Configuration Item: APT::Get::AllowUnauthenticated.[m
[m
       [1m--show-progress[0m[m
           Show user friendly progress information in the terminal window when packages are installed, upgraded or removed.[m
           For a machine parsable version of this data see README.progress-reporting in the apt doc directory. Configuration[m
           Item: Dpkg::Progress and Dpkg::Progress-Fancy.[m
[m
       [1m-h[0m, [1m--help[0m[m
           Show a short usage summary.[m
[m
       [1m-v[0m, [1m--version[0m[m
           Show the program version.[m
[m
       [1m-c[0m, [1m--config-file[0m[m
           Configuration File; Specify a configuration file to use. The program will read the default configuration file and[m
           then this configuration file. If configuration settings need to be set before the default configuration files are[m
           parsed specify a file with the [1mAPT_CONFIG[0m environment variable. See [1mapt.conf[0m(5) for syntax information.[m
[m
       [1m-o[0m, [1m--option[0m[m
           Set a Configuration Option; This will set an arbitrary configuration option. The syntax is [1m-o[0m [1mFoo::Bar=bar[0m.  [1m-o[0m[m
           and [1m--option[0m can be used multiple times to set different options.[m
[m
[1mFILES[0m[m
       /etc/apt/sources.list[m
           Locations to fetch packages from. Configuration Item: Dir::Etc::SourceList.[m
[m
       /etc/apt/sources.list.d/[m
           File fragments for locations to fetch packages from. Configuration Item: Dir::Etc::SourceParts.[m
[m
       /etc/apt/apt.conf[m
           APT configuration file. Configuration Item: Dir::Etc::Main.[m
[m
       /etc/apt/apt.conf.d/[m
           APT configuration file fragments. Configuration Item: Dir::Etc::Parts.[m
[m
       /etc/apt/preferences[m
           Version preferences file. This is where you would specify "pinning", i.e. a preference to get certain packages[m
           from a separate source or from a different version of a distribution. Configuration Item: Dir::Etc::Preferences.[m
[m
       /etc/apt/preferences.d/[m
[7m Manual page apt-get(8) line 295 (press h for help or q to quit)[27m[K[K           File fragments for the version preferences. Configuration Item: Dir::Etc::PreferencesParts.[m
[m
       /var/cache/apt/archives/[m
           Storage area for retrieved package files. Configuration Item: Dir::Cache::Archives.[m
[m
       /var/cache/apt/archives/partial/[m
           Storage area for package files in transit. Configuration Item: Dir::Cache::Archives (partial will be implicitly[m
           appended)[m
[m
       /var/lib/apt/lists/[m
           Storage area for state information for each package resource specified in [1msources.list[0m(5) Configuration Item:[m
           Dir::State::Lists.[m
[m
       /var/lib/apt/lists/partial/[m
           Storage area for state information in transit. Configuration Item: Dir::State::Lists (partial will be implicitly[m
           appended)[m
[m
[1mSEE[0m [1mALSO[0m[m
       [1mapt-cache[0m(8), [1mapt-cdrom[0m(8), [1mdpkg[0m(1), [1msources.list[0m(5), [1mapt.conf[0m(5), [1mapt-config[0m(8), [1mapt-secure[0m(8), The APT User's guide[m
       in /usr/share/doc/apt-doc/, [1mapt_preferences[0m(5), the APT Howto.[m
[m
[1mDIAGNOSTICS[0m[m
       [1mapt-get[0m returns zero on normal operation, decimal 100 on error.[m
[m
[1mBUGS[0m[m
       [1mAPT[0m [1mbug[0m [1mpage[0m[3]. If you wish to report a bug in APT, please see /usr/share/doc/debian/bug-reporting.txt or the[m
       [1mreportbug[0m(1) command.[m
[m
[1mAUTHORS[0m[m
       [1mJason[0m [1mGunthorpe[0m[m
[m
       [1mAPT[0m [1mteam[0m[m
[m
[1mNOTES[0m[m
        1. packages.debian.org/changelogs[m
           http://packages.debian.org/changelogs[m
[m
        2. changelogs.ubuntu.com/changelogs[m
           http://changelogs.ubuntu.com/changelogs[m
[m
        3. APT bug page[m
           http://bugs.debian.org/src:apt[m
[m
APT 1.0.10.2ubuntu1                                     09 June 2012                                              APT-GET(8)[m
[7m Manual page apt-get(8) line 339/387 (END) (press h for help or q to quit)[27m[K[K[?1l>[?1049l]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -L libclblas-dev
/.
/usr
/usr/share
/usr/share/doc
/usr/share/doc/libclblas-dev
/usr/share/doc/libclblas-dev/copyright
/usr/lib
/usr/lib/x86_64-linux-gnu
/usr/lib/x86_64-linux-gnu/cmake
/usr/lib/x86_64-linux-gnu/cmake/clBLAS
/usr/lib/x86_64-linux-gnu/cmake/clBLAS/clBLASConfig.cmake
/usr/lib/x86_64-linux-gnu/cmake/clBLAS/clBLASTargets-relwithdebinfo.cmake
/usr/lib/x86_64-linux-gnu/cmake/clBLAS/clBLASConfigVersion.cmake
/usr/lib/x86_64-linux-gnu/cmake/clBLAS/clBLASTargets.cmake
/usr/lib/x86_64-linux-gnu/pkgconfig
/usr/lib/x86_64-linux-gnu/pkgconfig/clBLAS.pc
/usr/include
/usr/include/clBLAS-complex.h
/usr/include/clBLAS.h
/usr/include/clBLAS.version.h
/usr/include/clAmdBlas.version.h
/usr/include/clAmdBlas.h
/usr/share/doc/libclblas-dev/changelog.Debian.gz
/usr/lib/x86_64-linux-gnu/libclBLAS.so
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -L libclblas-dev[K[K[Kbin
/.
/usr
/usr/share
/usr/share/doc
/usr/share/doc/libclblas-bin
/usr/share/doc/libclblas-bin/copyright
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/clBLAS-client.1.gz
/usr/bin
/usr/bin/clBLAS-client
/usr/share/doc/libclblas-bin/changelog.Debian.gz
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# dpkg -L libclblas-bindev[10Pman apt-getfind /usr -name clblas.hapt-get install libclblas-dev [KC[Kls
aLibDNNDriver.cpp      CMakeCache.txt  cmake_install.cmake  Makefile    run5-app    stdafx.h
aLibDNNDriver.vcxproj  [0m[01;34mCMakeFiles[0m      CMakeLists.txt       ReadMe.txt  stdafx.cpp  targetver.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# rm [K[K[Kcmake .
CMake Error: Error in cmake code at
/c/AMD/MLopen/aDNN/app/CMakeLists.txt:168:
Parse error.  Function missing ending ")".  End of file reached.
-- Configuring incomplete, errors occurred!
See also "/c/AMD/MLopen/aDNN/app/CMakeFiles/CMakeOutput.log".
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
CMake Error at CMakeLists.txt:132 (find_package):
  By not providing "FindclBLAS-client.cmake" in CMAKE_MODULE_PATH this
  project has asked CMake to find a package configuration file provided by
  "clBLAS-client", but CMake did not find one.

  Could not find a package configuration file provided by "clBLAS-client"
  with any of the following names:

    clBLAS-clientConfig.cmake
    clblas-client-config.cmake

  Add the installation prefix of "clBLAS-client" to CMAKE_PREFIX_PATH or set
  "clBLAS-client_DIR" to a directory containing one of the above files.  If
  "clBLAS-client" provides a separate development package or SDK, be sure it
  has been installed.


-- Configuring incomplete, errors occurred!
See also "/c/AMD/MLopen/aDNN/app/CMakeFiles/CMakeOutput.log".
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Found CLBLAS: /usr/lib/x86_64-linux-gnu/libclBLAS.so  
-- Found clBLAS  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libclBLAS.so)
CMake Error at CMakeLists.txt:134 (inlcude_directories):
  Unknown CMake command "inlcude_directories".


-- Configuring incomplete, errors occurred!
See also "/c/AMD/MLopen/aDNN/app/CMakeFiles/CMakeOutput.log".
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Found clBLAS  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libclBLAS.so)
CMake Error at CMakeLists.txt:138 (target_link_libraries):
  Cannot specify link libraries for target "aDNNdriver.lnx" which is not
  built by this project.


-- Configuring incomplete, errors occurred!
See also "/c/AMD/MLopen/aDNN/app/CMakeFiles/CMakeOutput.log".
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Found clBLAS  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libclBLAS.so)
-- Configuring done
-- Generating done
-- Build files have been written to: /c/AMD/MLopen/aDNN/app
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# make 
[35m[1mScanning dependencies of target aDNNdriver.lnx
[0m[100%] [32mBuilding CXX object CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
[0mIn file included from [01m[K/c/AMD/MLopen/aDNN/app/stdafx.h:8:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:24[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/targetver.h:8:23:[m[K [01;31m[Kfatal error: [m[KSDKDDKVer.h: No such file or directory
compilation terminated.
CMakeFiles/aDNNdriver.lnx.dir/build.make:54: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o' failed
make[2]: *** [CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/all' failed
make[1]: *** [CMakeFiles/aDNNdriver.lnx.dir/all] Error 2
Makefile:75: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# man malloc
[?1049h[?1h=MALLOC(3)                                         Linux Programmer's Manual                                        MALLOC(3)[m
[m
[1mNAME[0m[m
       malloc, free, calloc, realloc - allocate and free dynamic memory[m
[m
[1mSYNOPSIS[0m[m
       [1m#include[0m [1m<stdlib.h>[0m[m
[m
       [1mvoid[0m [1m*malloc(size_t[0m [4msize[24m[1m);[0m[m
       [1mvoid[0m [1mfree(void[0m [4m*ptr[24m[1m);[0m[m
       [1mvoid[0m [1m*calloc(size_t[0m [4mnmemb[24m[1m,[0m [1msize_t[0m [4msize[24m[1m);[0m[m
       [1mvoid[0m [1m*realloc(void[0m [4m*ptr[24m[1m,[0m [1msize_t[0m [4msize[24m[1m);[0m[m
[m
[1mDESCRIPTION[0m[m
       The [1mmalloc[0m() function allocates [4msize[24m bytes and returns a pointer to the allocated memory.  [4mThe[24m [4mmemory[24m [4mis[24m [4mnot[24m [4minitial‐[24m[m
       [4mized[24m.  If [4msize[24m is 0, then [1mmalloc[0m() returns either NULL, or a unique pointer value  that  can  later  be  successfully[m
       passed to [1mfree[0m().[m
[m
       The  [1mfree[0m()  function  frees  the memory space pointed to by [4mptr[24m, which must have been returned by a previous call to[m
       [1mmalloc[0m(), [1mcalloc[0m(), or [1mrealloc[0m().  Otherwise, or if [4mfree(ptr)[24m has already  been  called  before,  undefined  behavior[m
       occurs.  If [4mptr[24m is NULL, no operation is performed.[m
[m
       The [1mcalloc[0m() function allocates memory for an array of [4mnmemb[24m elements of [4msize[24m bytes each and returns a pointer to the[m
       allocated memory.  The memory is set to zero.  If [4mnmemb[24m or [4msize[24m is 0, then [1mcalloc[0m() returns either NULL, or a  unique[m
       pointer value that can later be successfully passed to [1mfree[0m().[m
[m
       The  [1mrealloc[0m()  function  changes the size of the memory block pointed to by [4mptr[24m to [4msize[24m bytes.  The contents will be[m
       unchanged in the range from the start of the region up to the minimum of the old and new sizes.  If the new  size  is[m
       larger  than  the old size, the added memory will [4mnot[24m be initialized.  If [4mptr[24m is NULL, then the call is equivalent to[m
       [4mmalloc(size)[24m, for all values of [4msize[24m; if [4msize[24m is equal to zero, and [4mptr[24m is not NULL, then the call is  equivalent  to[m
       [4mfree(ptr)[24m.  Unless [4mptr[24m is NULL, it must have been returned by an earlier call to [1mmalloc[0m(), [1mcalloc[0m() or [1mrealloc[0m().  If[m
       the area pointed to was moved, a [4mfree(ptr)[24m is done.[m
[m
[1mRETURN[0m [1mVALUE[0m[m
       The [1mmalloc[0m() and [1mcalloc[0m() functions return a pointer to the allocated memory,  which  is  suitably  aligned  for  any[m
       built-in  type.   On  error, these functions return NULL.  NULL may also be returned by a successful call to [1mmalloc[0m()[m
       with a [4msize[24m of zero, or by a successful call to [1mcalloc[0m() with [4mnmemb[24m or [4msize[24m equal to zero.[m
[m
       The [1mfree[0m() function returns no value.[m
[m
       The [1mrealloc[0m() function returns a pointer to the newly allocated memory, which is suitably aligned  for  any  built-in[m
       type  and  may be different from [4mptr[24m, or NULL if the request fails.  If [4msize[24m was equal to 0, either NULL or a pointer[m
       suitable to be passed to [1mfree[0m() is returned.  If [1mrealloc[0m() fails, the original block is left  untouched;  it  is  not[m
       freed or moved.[m
[m
[1mCONFORMING[0m [1mTO[0m[m
       C89, C99.[m
[m
[1mNOTES[0m[m
[7m Manual page malloc(3) line 1 (press h for help or q to quit)[27m[K[K       By  default,  Linux follows an optimistic memory allocation strategy.  This means that when [1mmalloc[0m() returns non-NULL[m
       there is no guarantee that the memory really is available.  In case it turns out that the system is  out  of  memory,[m
       one  or  more  processes  will  be  killed  by  the  OOM  killer.   For  more  information,  see  the  description of[m
       [4m/proc/sys/vm/overcommit_memory[24m and [4m/proc/sys/vm/oom_adj[24m in [1mproc[0m(5), and  the  Linux  kernel  source  file  [4mDocumenta‐[24m[m
       [4mtion/vm/overcommit-accounting[24m.[m
[m
       Normally, [1mmalloc[0m() allocates memory from the heap, and adjusts the size of the heap as required, using [1msbrk[0m(2).  When[m
       allocating blocks of memory larger than [1mMMAP_THRESHOLD[0m bytes, the glibc [1mmalloc[0m() implementation allocates the  memory[m
       as  a  private  anonymous  mapping  using [1mmmap[0m(2).  [1mMMAP_THRESHOLD[0m is 128 kB by default, but is adjustable using [1mmal‐[0m[m
       [1mlopt[0m(3).  Allocations performed using [1mmmap[0m(2) are unaffected by the [1mRLIMIT_DATA[0m resource limit (see [1mgetrlimit[0m(2)).[m
[m
       To avoid corruption in multithreaded applications, mutexes are used internally to protect the memory-management  data[m
       structures  employed by these functions.  In a multithreaded application in which threads simultaneously allocate and[m
       free memory, there could be contention for these mutexes.  To scalably  handle  memory  allocation  in  multithreaded[m
       applications,  glibc  creates  additional  [4mmemory[24m [4mallocation[24m [4marenas[24m if mutex contention is detected.  Each arena is a[m
       large region of memory that is internally allocated by the system (using [1mbrk[0m(2) or [1mmmap[0m(2)), and managed with its own[m
       mutexes.[m
[m
       The  UNIX  98 standard requires [1mmalloc[0m(), [1mcalloc[0m(), and [1mrealloc[0m() to set [4merrno[24m to [1mENOMEM[0m upon failure.  Glibc assumes[m
       that this is done (and the glibc versions of these routines do this); if you use a private malloc implementation that[m
       does not set [4merrno[24m, then certain library routines may fail without having a reason in [4merrno[24m.[m
[m
       Crashes in [1mmalloc[0m(), [1mcalloc[0m(), [1mrealloc[0m(), or [1mfree[0m() are almost always related to heap corruption, such as overflowing[m
       an allocated chunk or freeing the same pointer twice.[m
[m
       The [1mmalloc[0m() implementation is tunable via environment variables; see [1mmallopt[0m(3) for details.[m
[m
[1mSEE[0m [1mALSO[0m[m
       [1mbrk[0m(2), [1mmmap[0m(2), [1malloca[0m(3), [1mmalloc_get_state[0m(3), [1mmalloc_info[0m(3), [1mmalloc_trim[0m(3), [1mmalloc_usable_size[0m(3), [1mmallopt[0m(3),[m
       [1mmcheck[0m(3), [1mmtrace[0m(3), [1mposix_memalign[0m(3)[m
[m
[1mCOLOPHON[0m[m
       This page is part of release 3.74 of the Linux [4mman-pages[24m project.  A description of the project, information about[m
       reporting bugs, and the latest version of this page, can be found at http://www.kernel.org/doc/man-pages/.[m
[m
GNU                                                      2014-05-21                                                MALLOC(3)[m
[7m Manual page malloc(3) line 37/85 (END) (press h for help or q to quit)[27m[K[K[K[7m Manual page malloc(3) line 37/85 (END) (press h for help or q to quit)[27m[K[K[?1l>[?1049l]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# man brk
[?1049h[?1h=BRK(2)                                            Linux Programmer's Manual                                           BRK(2)[m
[m
[1mNAME[0m[m
       brk, sbrk - change data segment size[m
[m
[1mSYNOPSIS[0m[m
       [1m#include[0m [1m<unistd.h>[0m[m
[m
       [1mint[0m [1mbrk(void[0m [1m*[0m[4maddr[24m[1m);[0m[m
[m
       [1mvoid[0m [1m*sbrk(intptr_t[0m [4mincrement[24m[1m);[0m[m
[m
   Feature Test Macro Requirements for glibc (see [1mfeature_test_macros[0m(7)):[m
[m
       [1mbrk[0m(), [1msbrk[0m():[m
           Since glibc 2.12:[m
               _BSD_SOURCE || _SVID_SOURCE ||[m
                   (_XOPEN_SOURCE >= 500 ||[m
                       _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED) &&[m
                   !(_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600)[m
           Before glibc 2.12:[m
               _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE >= 500 || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED[m
[m
[1mDESCRIPTION[0m[m
       [1mbrk[0m() and [1msbrk[0m() change the location of the [4mprogram[24m [4mbreak[24m, which defines the end of the process's data segment (i.e.,[m
       the program break is the first location after the end of the uninitialized data  segment).   Increasing  the  program[m
       break has the effect of allocating memory to the process; decreasing the break deallocates memory.[m
[m
       [1mbrk[0m()  sets the end of the data segment to the value specified by [4maddr[24m, when that value is reasonable, the system has[m
       enough memory, and the process does not exceed its maximum data size (see [1msetrlimit[0m(2)).[m
[m
       [1msbrk[0m() increments the program's data space by [4mincrement[24m bytes.  Calling [1msbrk[0m() with an [4mincrement[24m of 0 can be used  to[m
       find the current location of the program break.[m
[m
[1mRETURN[0m [1mVALUE[0m[m
       On success, [1mbrk[0m() returns zero.  On error, -1 is returned, and [4merrno[24m is set to [1mENOMEM[0m.[m
[m
       On  success, [1msbrk[0m() returns the previous program break.  (If the break was increased, then this value is a pointer to[m
       the start of the newly allocated memory).  On error, [4m(void[24m [4m*)[24m [4m-1[24m is returned, and [4merrno[24m is set to [1mENOMEM[0m.[m
[m
[1mCONFORMING[0m [1mTO[0m[m
       4.3BSD; SUSv1, marked LEGACY in SUSv2, removed in POSIX.1-2001.[m
[m
[1mNOTES[0m[m
       Avoid using [1mbrk[0m() and [1msbrk[0m(): the [1mmalloc[0m(3) memory allocation package is the portable and comfortable way of allocat‐[m
       ing memory.[m
[m
       Various systems use various types for the argument of [1msbrk[0m().  Common are [4mint[24m, [4mssize_t[24m, [4mptrdiff_t[24m, [4mintptr_t[24m.[m
[m
[7m Manual page brk(2) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049l]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# man malloc.h
No manual entry for malloc.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ls /usr/include/malloc.h
/usr/include/malloc.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# vi /usr/include/malloc.h
[?1049h[?1h=[1;50r[?12;25h[?12l[?25h[27m[23m[m[H[2J[?25l[50;1H"/usr/include/malloc.h" 171 lines, 6232 characters[1;1H/* Prototypes and definition for malloc implementation.
   Copyright (C) 1996-2015 Free Software Foundation, Inc.
   This file is part of the GNU C Library.[5;4HThe GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.[10;4HThe GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.[15;4HYou should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */

#ifndef _MALLOC_H
#define _MALLOC_H 1

#include <features.h>
#include <stddef.h>
#include <stdio.h>

#ifdef _LIBC
# define __MALLOC_HOOK_VOLATILE
# define __MALLOC_DEPRECATED
#else
# define __MALLOC_HOOK_VOLATILE volatile
# define __MALLOC_DEPRECATED __attribute_deprecated__
#endif


__BEGIN_DECLS

/* Allocate SIZE bytes of memory.  */
extern void *malloc (size_t __size) __THROW __attribute_malloc__ __wur;

/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
extern void *calloc (size_t __nmemb, size_t __size)
__THROW __attribute_malloc__ __wur;

/* Re-allocate the previously allocated block in __ptr, making the new
   block SIZE bytes long.  */
/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */
extern void *realloc (void *__ptr, size_t __size)[1;1H[?12l[?25h















































[?25l[1;49r[49;1H
[1;50r[49;1H__THROW __attribute_warn_unused_result__;[50;1H[K[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Free a block allocated by `malloc', `realloc' or `calloc'.  */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern void free (void *__ptr) __THROW;[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Free a block allocated by `calloc'. */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern void cfree (void *__ptr) __THROW;[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Allocate SIZE bytes allocated to ALIGNMENT bytes.  */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern void *memalign (size_t __alignment, size_t __size)[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H__THROW __attribute_malloc__ __wur;[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Allocate SIZE bytes on a page boundary.  */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern void *valloc (size_t __size) __THROW __attribute_malloc__ __wur;[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Equivalent to valloc(minimum-page-that-holds(n)), that is, round up[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;4H__size to nearest pagesize. */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern void *pvalloc (size_t __size) __THROW __attribute_malloc__ __wur;[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Underlying allocation function; successive calls should return[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;4Hcontiguous pieces of memory.  */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern void *(*__morecore) (ptrdiff_t __size);[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Default value of `__morecore'.  */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern void *__default_morecore (ptrdiff_t __size)[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H__THROW __attribute_malloc__;[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* SVID2/XPG mallinfo structure */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hstruct mallinfo[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H{[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint arena;    /* non-mmapped space allocated from system */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint ordblks;  /* number of free chunks */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint smblks;   /* number of fastbin blocks */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint hblks;    /* number of mmapped regions */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint hblkhd;   /* space in mmapped regions */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint usmblks;  /* maximum total allocated space */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint fsmblks;  /* space available in freed fastbin blocks */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint uordblks; /* total allocated space */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint fordblks; /* total free space */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;3Hint keepcost; /* top-most, releasable (via malloc_trim) space */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H};[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* Returns a copy of the updated current mallinfo. */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1Hextern struct mallinfo mallinfo (void) __THROW;[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* SVID2/XPG mallopt options */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#ifndef M_MXFAST[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H# define M_MXFAST  1    /* maximum request size for "fastbins" */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#endif[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#ifndef M_NLBLKS[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H# define M_NLBLKS  2    /* UNUSED in this malloc */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#endif[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#ifndef M_GRAIN[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H# define M_GRAIN   3    /* UNUSED in this malloc */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#endif[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#ifndef M_KEEP[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H# define M_KEEP    4    /* UNUSED in this malloc */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#endif[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H/* mallopt options that actually do something */[?12l[?25h[?25l[1;49r[49;1H
[1;50r[49;1H#define M_TRIM_THRESHOLD    -1[?12l[?25h[?25l
:[?12l[?25hq[?25l[50;1H[K[50;1H[?1l>[?12l[?25h[?1049l]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# !hd
hdparm -y /dev/sdb

/dev/sdb:
 issuing standby command
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# make
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Found clBLAS  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libclBLAS.so)
-- Configuring done
-- Generating done
-- Build files have been written to: /c/AMD/MLopen/aDNN/app
[35m[1mScanning dependencies of target aDNNdriver.lnx
[0m[100%] [32mBuilding CXX object CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
[0m[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:24:7:[m[K [01;31m[Kerror: [m[Kmacro names must be identifiers
 #ifdef(WIN32)
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:38:21:[m[K [01;31m[Kfatal error: [m[KAMDnn.h: No such file or directory
compilation terminated.
CMakeFiles/aDNNdriver.lnx.dir/build.make:54: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o' failed
make[2]: *** [CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/all' failed
make[1]: *** [CMakeFiles/aDNNdriver.lnx.dir/all] Error 2
Makefile:75: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# make
[35m[1mScanning dependencies of target aDNNdriver.lnx
[0m[100%] [32mBuilding CXX object CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
[0m[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:38:21:[m[K [01;31m[Kfatal error: [m[KAMDnn.h: No such file or directory
compilation terminated.
CMakeFiles/aDNNdriver.lnx.dir/build.make:54: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o' failed
make[2]: *** [CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/all' failed
make[1]: *** [CMakeFiles/aDNNdriver.lnx.dir/all] Error 2
Makefile:75: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ls
aLibDNNDriver.cpp      CMakeCache.txt  cmake_install.cmake  Makefile    run5-app    #stdafx.h#  targetver.h
aLibDNNDriver.vcxproj  [0m[01;34mCMakeFiles[0m      CMakeLists.txt       ReadMe.txt  stdafx.cpp  stdafx.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ls ../src/AMDnn.h
../src/AMDnn.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ls ../../Include/aDNN
ls: cannot access ../../Include/aDNN: No such file or directory
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ls ../../..
[0m[01;34mAutoencoder[0m     [01;34mcaffe[0m            [01;34mclBLAS[0m    [01;34mCMake.TT[0m  [01;34mMLopen[0m  [01;34mOpenCL-caffe[0m              Tasks.CMake   [01;34mveles[0m
[01;34mAutoencoderRBM[0m  [01;34mcaffe2-refactor[0m  [01;34mclSPARSE[0m  [01;34mInclude[0m   [01;34mnotes[0m   [01;34mOpenCL_caffe_cmake_files[0m  Tasks.CMake~
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ls ../../../Include
[0m[01;34maDNN[0m  [01;34mAMDSDK[0m  [01;34mclBLAS[0m  pthread.cpp  pthread.h
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ls ../../../Include/aDNN
aLibsCLUtil.hpp  aLibsFile.hpp  aLibsUtil.hpp  SDKBitMap.hpp  SDKThread.hpp
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# make
[35m[1mScanning dependencies of target aDNNdriver.lnx
[0m[100%] [32mBuilding CXX object CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
[0mIn file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter& adnn::adnn_filter::operator=(const adnn::adnn_filter&)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:99:22:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < rh.filter.size(); i++)
[01;32m[K                      ^[m[K
In file included from [01m[K/usr/include/c++/5/cassert:43:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:30[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getDimOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:324:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < dims_.size());
[01;32m[K               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getStrideOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:330:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < strides_.size());
[01;32m[K               ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K At global scope:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:635:7:[m[K [01;31m[Kerror: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeType(ADNN_EDGE_DIR_TYPE, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:950:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[KADNN_EDGE_DIR_TYPE adnn::aDNNode::getOutputEdgeType(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:960:39:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (!outputs_.empty() && edge_indx < outputs_.size())
[01;32m[K                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeName(std::__cxx11::string, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:970:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getInputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:979:42:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!inputs_.empty() && edge_indx < inputs_.size() && !inputs_[edge_indx].getName().empty()) ? null_inp_str_ + std::to_s
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getOutputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:983:43:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!outputs_.empty() && edge_indx < outputs_.size() && !outputs_[edge_indx].getName().empty()) ? null_out_str_ + std::t
[01;32m[K                                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K At global scope:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:365:2:[m[K [01;31m[Kerror: [m[Kexpected ‘[01m[K,[m[K’ or ‘[01m[K...[m[K’ before ‘[01m[Kint[m[K’
  int input_w,      // 7
[01;32m[K  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:389:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kpnode_params[m[K’ was not declared in this scope
  if (!pnode_params)
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:400:6:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_name[m[K’ was not declared in this scope
  if (node_name)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:412:6:[m[K [01;31m[Kerror: [m[K‘[01m[Kinput_name[m[K’ was not declared in this scope
  if (input_name)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:417:36:[m[K [01;31m[Kerror: [m[K‘[01m[Kinput_edge_type[m[K’ was not declared in this scope
  node_params.inputs[0].edge_type = input_edge_type;
[01;32m[K                                    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:427:28:[m[K [01;31m[Kerror: [m[K‘[01m[Kinput_h[m[K’ was not declared in this scope
  node_src_params.dims[2] = input_h;
[01;32m[K                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:428:28:[m[K [01;31m[Kerror: [m[K‘[01m[Kinput_w[m[K’ was not declared in this scope
  node_src_params.dims[3] = input_w;
[01;32m[K                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:431:6:[m[K [01;31m[Kerror: [m[K‘[01m[Kinference[m[K’ was not declared in this scope
  if (inference && node_src)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:431:19:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_src[m[K’ was not declared in this scope
  if (inference && node_src)
[01;32m[K                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:451:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kn_output_featuremaps[m[K’ was not declared in this scope
   node_weights_params.dims[0] = n_output_featuremaps;
[01;32m[K                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:454:7:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_weights[m[K’ was not declared in this scope
   if (node_weights)
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:471:20:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_bias[m[K’ was not declared in this scope
   if (inference && node_bias)
[01;32m[K                    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:481:6:[m[K [01;31m[Kerror: [m[K‘[01m[Ktraining[m[K’ was not declared in this scope
  if (training)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:484:7:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_bot_df[m[K’ was not declared in this scope
   if (node_bot_df)
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:488:35:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_src[m[K’ was not declared in this scope
     *node_bot_df = ADNNDataClone(*node_src, true);
[01;32m[K                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:495:7:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_weights_df[m[K’ was not declared in this scope
   if (node_weights_df)
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:499:39:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_weights[m[K’ was not declared in this scope
     *node_weights_df = ADNNDataClone(*node_weights, true);
[01;32m[K                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:507:7:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_bias_df[m[K’ was not declared in this scope
   if (node_bias_df)
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:511:36:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_bias[m[K’ was not declared in this scope
     *node_bias_df = ADNNDataClone(*node_bias, true);
[01;32m[K                                    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:520:6:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_name[m[K’ was not declared in this scope
  if (node_name)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:528:6:[m[K [01;31m[Kerror: [m[K‘[01m[Kinference[m[K’ was not declared in this scope
  if (inference && node_src && *node_src && node_sink)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:528:19:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_src[m[K’ was not declared in this scope
  if (inference && node_src && *node_src && node_sink)
[01;32m[K                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:528:44:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_sink[m[K’ was not declared in this scope
  if (inference && node_src && *node_src && node_sink)
[01;32m[K                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:541:30:[m[K [01;31m[Kerror: [m[K‘[01m[Kn_output_featuremaps[m[K’ was not declared in this scope
   node_sink_params.dims[1] = n_output_featuremaps;
[01;32m[K                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:554:6:[m[K [01;31m[Kerror: [m[K‘[01m[Ktraining[m[K’ was not declared in this scope
  if (training && node_sink && * node_sink && node_top_df)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:554:18:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_sink[m[K’ was not declared in this scope
  if (training && node_sink && * node_sink && node_top_df)
[01;32m[K                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:554:46:[m[K [01;31m[Kerror: [m[K‘[01m[Knode_top_df[m[K’ was not declared in this scope
  if (training && node_sink && * node_sink && node_top_df)
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:565:6:[m[K [01;31m[Kerror: [m[K‘[01m[Kpnode_params[m[K’ was not declared in this scope
  if (pnode_params)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:570:6:[m[K [01;31m[Kerror: [m[K‘[01m[Knode[m[K’ was not declared in this scope
  if (node)
[01;32m[K      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint PrepareNeuronNode(alib_obj, const adnn_control_params*, const adnn_neuron_parameters*, int, int, int, int, const char*, const char*, ADNN_EDGE_DIR_TYPE, void**, void**, void**, void**, void**, bool, bool, adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:603:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kdata_objs[m[K’ [-Wunused-variable]
  adata_obj data_objs[2] = { 0, 0 };
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNOpenVXBindingConvLayer(alib_obj, int, int, int, int, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2045:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNSingleConvLayer(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int, int, int, bool, adnn_update_params*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2137:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2168:4:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
    );
[01;32m[K    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNSingleConvLayer3plBuffering(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int, int, int, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2345:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNcuDNNBinding(alib_obj, const adnn_control_params*, int, const adnn_filter1D_parameters*, int*, int, const adnn_neuron_parameters*, int, const adnn_filter1D_parameters*, ADNN_POOLING_METHOD*, int, const adnn_lrn_parameters*, int, int, int, int, int, int, bool)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2538:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2633:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2726:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2940:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:3044:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:3149:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2509:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bot_df[m[K’ [-Wunused-variable]
  adata_obj node_bot_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2510:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_top_df[m[K’ [-Wunused-variable]
  adata_obj node_top_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2511:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_weights_df[m[K’ [-Wunused-variable]
  adata_obj node_weights_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2512:13:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bias_df[m[K’ [-Wunused-variable]
  adata_obj *node_bias_df = 0;
[01;32m[K             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNCAFFEEBinding(alib_obj, const adnn_net_parameters*, const adnn_control_params*, int, const adnn_filter1D_parameters*, int*, int, const adnn_neuron_parameters*, int, const adnn_filter1D_parameters*, ADNN_POOLING_METHOD*, int, const adnn_lrn_parameters*, int, int, int, int, int, int, bool)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:3470:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:3545:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:3616:3:[m[K [01;31m[Kerror: [m[Ktoo many arguments to function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int)[m[K’
   );
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:359:12:[m[K [01;36m[Knote: [m[Kdeclared here
 static int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters can be passed by register
[01;32m[K            ^[m[K
CMakeFiles/aDNNdriver.lnx.dir/build.make:54: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o' failed
make[2]: *** [CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/all' failed
make[1]: *** [CMakeFiles/aDNNdriver.lnx.dir/all] Error 2
Makefile:75: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# [K]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# make
[35m[1mScanning dependencies of target aDNNdriver.lnx
[0m[100%] [32mBuilding CXX object CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
[0mIn file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter& adnn::adnn_filter::operator=(const adnn::adnn_filter&)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:99:22:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < rh.filter.size(); i++)
[01;32m[K                      ^[m[K
In file included from [01m[K/usr/include/c++/5/cassert:43:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:30[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getDimOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:324:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < dims_.size());
[01;32m[K               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getStrideOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:330:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < strides_.size());
[01;32m[K               ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K At global scope:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:635:7:[m[K [01;31m[Kerror: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeType(ADNN_EDGE_DIR_TYPE, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:950:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[KADNN_EDGE_DIR_TYPE adnn::aDNNode::getOutputEdgeType(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:960:39:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (!outputs_.empty() && edge_indx < outputs_.size())
[01;32m[K                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeName(std::__cxx11::string, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:970:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getInputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:979:42:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!inputs_.empty() && edge_indx < inputs_.size() && !inputs_[edge_indx].getName().empty()) ? null_inp_str_ + std::to_string((long long)edge_indx) + "." + inputs_[edge_indx].getName() : null_inp_str_ + s
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getOutputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:983:43:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!outputs_.empty() && edge_indx < outputs_.size() && !outputs_[edge_indx].getName().empty()) ? null_out_str_ + std::to_string((long long)edge_indx) + "." + outputs_[edge_indx].getName() : null_out_str_
[01;32m[K                                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint PrepareConvNode(alib_obj, const adnn_control_params*, const adnn_filter1D_parameters*, int, int, int, int, int, const char*, const char*, ADNN_EDGE_DIR_TYPE, void**, void**, void**, void**, void**, void**, void**, void**, void**, bool, bool, adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:427:28:[m[K [01;31m[Kerror: [m[K‘[01m[Kinput_h[m[K’ was not declared in this scope
  node_src_params.dims[2] = input_h;
[01;32m[K                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint PrepareNeuronNode(alib_obj, const adnn_control_params*, const adnn_neuron_parameters*, int, int, int, int, const char*, const char*, ADNN_EDGE_DIR_TYPE, void**, void**, void**, void**, void**, bool, bool, adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:603:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kdata_objs[m[K’ [-Wunused-variable]
  adata_obj data_objs[2] = { 0, 0 };
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNcuDNNBinding(alib_obj, const adnn_control_params*, int, const adnn_filter1D_parameters*, int*, int, const adnn_neuron_parameters*, int, const adnn_filter1D_parameters*, ADNN_POOLING_METHOD*, int, const adnn_lrn_parameters*, int, int, int, int, int, int, bool)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2509:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bot_df[m[K’ [-Wunused-variable]
  adata_obj node_bot_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2510:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_top_df[m[K’ [-Wunused-variable]
  adata_obj node_top_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2511:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_weights_df[m[K’ [-Wunused-variable]
  adata_obj node_weights_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2512:13:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bias_df[m[K’ [-Wunused-variable]
  adata_obj *node_bias_df = 0;
[01;32m[K             ^[m[K
CMakeFiles/aDNNdriver.lnx.dir/build.make:54: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o' failed
make[2]: *** [CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/all' failed
make[1]: *** [CMakeFiles/aDNNdriver.lnx.dir/all] Error 2
Makefile:75: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# make
[35m[1mScanning dependencies of target aDNNdriver.lnx
[0m[100%] [32mBuilding CXX object CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
[0mIn file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter& adnn::adnn_filter::operator=(const adnn::adnn_filter&)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:99:22:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < rh.filter.size(); i++)
[01;32m[K                      ^[m[K
In file included from [01m[K/usr/include/c++/5/cassert:43:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:30[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getDimOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:324:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < dims_.size());
[01;32m[K               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getStrideOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:330:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < strides_.size());
[01;32m[K               ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K At global scope:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:635:7:[m[K [01;31m[Kerror: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeType(ADNN_EDGE_DIR_TYPE, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:950:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[KADNN_EDGE_DIR_TYPE adnn::aDNNode::getOutputEdgeType(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:960:39:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (!outputs_.empty() && edge_indx < outputs_.size())
[01;32m[K                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeName(std::__cxx11::string, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:970:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getInputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:979:42:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!inputs_.empty() && edge_indx < inputs_.size() && !inputs_[edge_indx].getName().empty()) ? null_inp_str_ + std::to_string((long long)edge_indx) + "." + inputs_[edge_indx].getName() : null_inp_str_ + s
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getOutputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:983:43:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!outputs_.empty() && edge_indx < outputs_.size() && !outputs_[edge_indx].getName().empty()) ? null_out_str_ + std::to_string((long long)edge_indx) + "." + outputs_[edge_indx].getName() : null_out_str_
[01;32m[K                                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint PrepareNeuronNode(alib_obj, const adnn_control_params*, const adnn_neuron_parameters*, int, int, int, int, const char*, const char*, ADNN_EDGE_DIR_TYPE, void**, void**, void**, void**, void**, bool, bool, adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:603:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kdata_objs[m[K’ [-Wunused-variable]
  adata_obj data_objs[2] = { 0, 0 };
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNcuDNNBinding(alib_obj, const adnn_control_params*, int, const adnn_filter1D_parameters*, int*, int, const adnn_neuron_parameters*, int, const adnn_filter1D_parameters*, ADNN_POOLING_METHOD*, int, const adnn_lrn_parameters*, int, int, int, int, int, int, bool)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2509:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bot_df[m[K’ [-Wunused-variable]
  adata_obj node_bot_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2510:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_top_df[m[K’ [-Wunused-variable]
  adata_obj node_top_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2511:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_weights_df[m[K’ [-Wunused-variable]
  adata_obj node_weights_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2512:13:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bias_df[m[K’ [-Wunused-variable]
  adata_obj *node_bias_df = 0;
[01;32m[K             ^[m[K
CMakeFiles/aDNNdriver.lnx.dir/build.make:54: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o' failed
make[2]: *** [CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/all' failed
make[1]: *** [CMakeFiles/aDNNdriver.lnx.dir/all] Error 2
Makefile:75: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# make
[35m[1mScanning dependencies of target aDNNdriver.lnx
[0m[100%] [32mBuilding CXX object CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
[0mIn file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter& adnn::adnn_filter::operator=(const adnn::adnn_filter&)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:99:22:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    for (int i = 0; i < rh.filter.size(); i++)
[01;32m[K                      ^[m[K
In file included from [01m[K/usr/include/c++/5/cassert:43:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:30[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getDimOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:324:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < dims_.size());
[01;32m[K               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Ksize_t adnn::aDNNTensor::getStrideOrig(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:330:15:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    assert(dim < strides_.size());
[01;32m[K               ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:39:0[m[K:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeType(ADNN_EDGE_DIR_TYPE, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:950:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[KADNN_EDGE_DIR_TYPE adnn::aDNNode::getOutputEdgeType(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:960:39:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (!outputs_.empty() && edge_indx < outputs_.size())
[01;32m[K                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kvoid adnn::aDNNode::setOutputEdgeName(std::__cxx11::string, int)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:970:24:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    if (outputs_.size() <= edge_indx)
[01;32m[K                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getInputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:979:42:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!inputs_.empty() && edge_indx < inputs_.size() && !inputs_[edge_indx].getName().empty()) ? null_inp_str_ + std::to_string((long long)edge_indx) + "." + inputs_[edge_indx].getName() : null_inp_str_ + s
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getOutputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/../src/AMDnn.hpp:983:43:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
    return((!outputs_.empty() && edge_indx < outputs_.size() && !outputs_[edge_indx].getName().empty()) ? null_out_str_ + std::to_string((long long)edge_indx) + "." + outputs_[edge_indx].getName() : null_out_str_
[01;32m[K                                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint PrepareNeuronNode(alib_obj, const adnn_control_params*, const adnn_neuron_parameters*, int, int, int, int, const char*, const char*, ADNN_EDGE_DIR_TYPE, void**, void**, void**, void**, void**, bool, bool, adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:603:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kdata_objs[m[K’ [-Wunused-variable]
  adata_obj data_objs[2] = { 0, 0 };
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint ADNNcuDNNBinding(alib_obj, const adnn_control_params*, int, const adnn_filter1D_parameters*, int*, int, const adnn_neuron_parameters*, int, const adnn_filter1D_parameters*, ADNN_POOLING_METHOD*, int, const adnn_lrn_parameters*, int, int, int, int, int, int, bool)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2509:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bot_df[m[K’ [-Wunused-variable]
  adata_obj node_bot_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2510:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_top_df[m[K’ [-Wunused-variable]
  adata_obj node_top_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2511:12:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_weights_df[m[K’ [-Wunused-variable]
  adata_obj node_weights_df = 0;
[01;32m[K            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:2512:13:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Knode_bias_df[m[K’ [-Wunused-variable]
  adata_obj *node_bias_df = 0;
[01;32m[K             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:[m[K In function ‘[01m[Kint main(int, char**)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp:4021:6:[m[K [01;35m[Kwarning: [m[Kvariable ‘[01m[Kstatus[m[K’ set but not used [-Wunused-but-set-variable]
  int status;
[01;32m[K      ^[m[K
make[2]: *** No rule to make target 'aDNN-NOTFOUND', needed by 'aDNNdriver.lnx'.  Stop.
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNNdriver.lnx.dir/all' failed
make[1]: *** [CMakeFiles/aDNNdriver.lnx.dir/all] Error 2
Makefile:75: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# cd ../src
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Detected GNU C++ compiler collection
-- CMAKE_CXX_COMPILER flags: -m64  -fPIC -Wall -Wno-sign-compare -Wno-uninitialized
-- CMAKE_CXX_COMPILER debug flags: -g
-- CMAKE_CXX_COMPILER release flags: -O3 -DNDEBUG
-- CMAKE_CXX_COMPILER relwithdebinfo flags: -O2 -g -DNDEBUG
-- CMAKE_EXE_LINKER link flags: 
-- PROJECT SRC DIR = /c/AMD/MLopen/aDNN/src
-- PROJECT INC DIR = /c/AMD/MLopen/aDNN/src
-- COMMON  INC DIR = /c/AMD/Include
-- Project OBJ Dir = /c/AMD/MLopen/aDNN/obj for temporary build files
-- Project LIB Dir = /c/AMD/MLopen/aDNN/lib
-- Configuring done
-- Generating done
-- Build files have been written to: /c/AMD/MLopen/aDNN/src
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# ls -rt 
sgemm_NT.CL      aLibDNN.vcxproj         aDNNTensor.hpp        aDNNPoolingBwd.cl    aDNNNeuron.cl     aDNNLayer.cpp              aDNNConvWeightsUpdate.cl  aDNNConvBwd1.cl   CMakeCache.txt
ReadMe.txt       aLibDNN.sln             aDNNSoftMaxLayer.cpp  aDNNOCL.hpp          aDNNMatOps.cl     aDNNInternal.cpp           aDNNConv_LE32_NCHW.cl     aDNN.cl.h         cmake_install.cmake
AMDnnTensor.cpp  aLibDNNObj.cpp          aDNNSoftMax.cl        aDNNOCL.cpp          aDNNMatMat.cl     aDNN.hpp                   aDNNConvLayerWin.cpp      aDNN.cl           AMDnn.hpp
AMDnnImpl.cpp    aLibDNNInternal.cpp     aDNNPoolingLayer.cpp  aDNNNeuronLayer.cpp  aDNNLRNLayer.cpp  aDNNFullyConnectLayer.cpp  aDNNConvLayer.cpp         aDNNInternal.hpp  Makefile
AMDnn.h          aDNNWeightsUpdate.cl.h  aDNNPooling.cl        aDNNNeuron.cl.h      aDNNLRN.cl        aDNN.cpp                   aDNNConv_GT32_NCHW.cl     CMakeLists.txt    [0m[01;34mCMakeFiles[0m
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# 
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# !hd
hdparm -y /dev/sdb

/dev/sdb:
 issuing standby command
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# mkae
No command 'mkae' found, did you mean:
 Command 'make' from package 'make' (main)
 Command 'make' from package 'make-guile' (universe)
mkae: command not found
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# make
[35m[1mScanning dependencies of target aDNN
[0m[  6%] [32mBuilding CXX object CMakeFiles/aDNN.dir/aDNNConvLayer.cpp.o
[0mIn file included from [01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h:148:0[m[K,
                 from [01m[K/usr/include/c++/5/ext/atomicity.h:35[m[K,
                 from [01m[K/usr/include/c++/5/bits/ios_base.h:39[m[K,
                 from [01m[K/usr/include/c++/5/iomanip:40[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:24[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:101:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_once[m[K’ was not declared in this scope
 __gthrw(pthread_once)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:102:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_getspecific[m[K’ was not declared in this scope
 __gthrw(pthread_getspecific)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:103:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_setspecific[m[K’ was not declared in this scope
 __gthrw(pthread_setspecific)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:105:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_create[m[K’ was not declared in this scope
 __gthrw(pthread_create)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:106:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_join[m[K’ was not declared in this scope
 __gthrw(pthread_join)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:107:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_equal[m[K’ was not declared in this scope
 __gthrw(pthread_equal)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:108:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_self[m[K’ was not declared in this scope
 __gthrw(pthread_self)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:109:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_detach[m[K’ was not declared in this scope
 __gthrw(pthread_detach)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:111:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cancel[m[K’ was not declared in this scope
 __gthrw(pthread_cancel)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:113:1:[m[K [01;31m[Kerror: [m[K‘[01m[Ksched_yield[m[K’ was not declared in this scope
 __gthrw(sched_yield)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:115:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_lock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_lock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:116:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_trylock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_trylock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:118:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_timedlock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_timedlock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:120:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_unlock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_unlock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:121:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_init[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_init)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:122:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_destroy[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_destroy)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:124:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_init[m[K’ was not declared in this scope
 __gthrw(pthread_cond_init)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:125:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_broadcast[m[K’ was not declared in this scope
 __gthrw(pthread_cond_broadcast)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:126:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_signal[m[K’ was not declared in this scope
 __gthrw(pthread_cond_signal)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:127:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_wait[m[K’ was not declared in this scope
 __gthrw(pthread_cond_wait)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:128:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_timedwait[m[K’ was not declared in this scope
 __gthrw(pthread_cond_timedwait)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:129:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_destroy[m[K’ was not declared in this scope
 __gthrw(pthread_cond_destroy)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:131:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_key_create[m[K’ was not declared in this scope
 __gthrw(pthread_key_create)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:132:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_key_delete[m[K’ was not declared in this scope
 __gthrw(pthread_key_delete)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:133:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutexattr_init[m[K’ was not declared in this scope
 __gthrw(pthread_mutexattr_init)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:134:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutexattr_settype[m[K’ was not declared in this scope
 __gthrw(pthread_mutexattr_settype)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:135:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutexattr_destroy[m[K’ was not declared in this scope
 __gthrw(pthread_mutexattr_destroy)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:236:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_key_create[m[K’ was not declared in this scope
 __gthrw2(__gthrw_(__pthread_key_create),
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_create(__gthread_t*, void* (*)(void*), void*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:662:68:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_create[m[K’ cannot be used as a function
   return __gthrw_(pthread_create) (__threadid, NULL, __func, __args);
[01;32m[K                                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_join(__gthread_t, void**)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:668:57:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_join[m[K’ cannot be used as a function
   return __gthrw_(pthread_join) (__threadid, __value_ptr);
[01;32m[K                                                         ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_detach(__gthread_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:674:46:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_detach[m[K’ cannot be used as a function
   return __gthrw_(pthread_detach) (__threadid);
[01;32m[K                                              ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_equal(__gthread_t, __gthread_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:680:45:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_equal[m[K’ cannot be used as a function
   return __gthrw_(pthread_equal) (__t1, __t2);
[01;32m[K                                             ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[K__gthread_t __gthread_self()[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:686:34:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_self[m[K’ cannot be used as a function
   return __gthrw_(pthread_self) ();
[01;32m[K                                  ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_yield()[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:692:33:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_sched_yield[m[K’ cannot be used as a function
   return __gthrw_(sched_yield) ();
[01;32m[K                                 ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_once(__gthread_once_t*, void (*)())[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:699:50:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_once[m[K’ cannot be used as a function
     return __gthrw_(pthread_once) (__once, __func);
[01;32m[K                                                  ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_key_create(__gthread_key_t*, void (*)(void*))[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:707:53:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_key_create[m[K’ cannot be used as a function
   return __gthrw_(pthread_key_create) (__key, __dtor);
[01;32m[K                                                     ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_key_delete(__gthread_key_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:713:45:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_key_delete[m[K’ cannot be used as a function
   return __gthrw_(pthread_key_delete) (__key);
[01;32m[K                                             ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kvoid* __gthread_getspecific(__gthread_key_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:719:46:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_getspecific[m[K’ cannot be used as a function
   return __gthrw_(pthread_getspecific) (__key);
[01;32m[K                                              ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_setspecific(__gthread_key_t, const void*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:725:53:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_setspecific[m[K’ cannot be used as a function
   return __gthrw_(pthread_setspecific) (__key, __ptr);
[01;32m[K                                                     ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kvoid __gthread_mutex_init_function(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:732:48:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_init[m[K’ cannot be used as a function
     __gthrw_(pthread_mutex_init) (__mutex, NULL);
[01;32m[K                                                ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_destroy(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:739:52:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_destroy[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_destroy) (__mutex);
[01;32m[K                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_lock(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:748:49:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_lock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_lock) (__mutex);
[01;32m[K                                                 ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_trylock(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:757:52:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_trylock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_trylock) (__mutex);
[01;32m[K                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_timedlock(__gthread_mutex_t*, const __gthread_time_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:768:69:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_timedlock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_timedlock) (__mutex, __abs_timeout);
[01;32m[K                                                                     ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_unlock(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:778:51:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_unlock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_unlock) (__mutex);
[01;32m[K                                                   ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_recursive_mutex_init_function(__gthread_recursive_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:793:54:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutexattr_init[m[K’ cannot be used as a function
       __r = __gthrw_(pthread_mutexattr_init) (&__attr);
[01;32m[K                                                      ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:796:10:[m[K [01;31m[Kerror: [m[K‘[01m[KPTHREAD_MUTEX_RECURSIVE[m[K’ was not declared in this scope
          PTHREAD_MUTEX_RECURSIVE);
[01;32m[K          ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:796:33:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutexattr_settype[m[K’ cannot be used as a function
          PTHREAD_MUTEX_RECURSIVE);
[01;32m[K                                 ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:798:54:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_init[m[K’ cannot be used as a function
  __r = __gthrw_(pthread_mutex_init) (__mutex, &__attr);
[01;32m[K                                                      ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:800:52:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutexattr_destroy[m[K’ cannot be used as a function
  __r = __gthrw_(pthread_mutexattr_destroy) (&__attr);
[01;32m[K                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_broadcast(__gthread_cond_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:852:50:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_broadcast[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_broadcast) (__cond);
[01;32m[K                                                  ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_signal(__gthread_cond_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:858:47:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_signal[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_signal) (__cond);
[01;32m[K                                               ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_wait(__gthread_cond_t*, __gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:864:54:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_wait[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_wait) (__cond, __mutex);
[01;32m[K                                                      ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_timedwait(__gthread_cond_t*, __gthread_mutex_t*, const __gthread_time_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:871:74:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_timedwait[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_timedwait) (__cond, __mutex, __abs_timeout);
[01;32m[K                                                                          ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_destroy(__gthread_cond_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:884:48:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_destroy[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_destroy) (__cond);
[01;32m[K                                                ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:[m[K In function ‘[01m[Kstd::__cxx11::string alibs::getSdkVerStr()[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:653:13:[m[K [01;31m[Kerror: [m[K‘[01m[KsdkVerStr[m[K’ was not declared in this scope
             sdkVerStr.major,
[01;32m[K             ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getDefaultPlatform(cl_uint, _cl_platform_id**, _cl_platform_id*&, cl_device_type, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:673:15:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kcontext[m[K’ [-Wunused-variable]
    cl_context context = clCreateContextFromType(cps,
[01;32m[K               ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:710:15:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kcontext[m[K’ [-Wunused-variable]
    cl_context context = clCreateContextFromType(cps,
[01;32m[K               ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:[m[K At global scope:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:119:53:[m[K [01;31m[Kerror: [m[K‘[01m[K>>[m[K’ should be ‘[01m[K> >[m[K’ within a nested template argument list
  std::map<cl_device_id, std::vector<cl_command_queue>> queues_;
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, uint)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:702:2:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [-Wreturn-type]
  }
[01;32m[K  ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:120:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/MLopen/aDNN/src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getInputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/AMDnn.hpp:979:119:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    return((!inputs_.empty() && edge_indx < inputs_.size() && !inputs_[edge_indx].getName().empty()) ? null_inp_str_ + std::to_string((long long)edge_indx) + "." + inputs_[edge_indx].getName() : null_inp_str_ + s
[01;32m[K                                                                                                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/AMDnn.hpp:979:211:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
 (!inputs_.empty() && edge_indx < inputs_.size() && !inputs_[edge_indx].getName().empty()) ? null_inp_str_ + std::to_string((long long)edge_indx) + "." + inputs_[edge_indx].getName() : null_inp_str_ + std::to_str
[01;32m[K                                                                                                                                                                                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/AMDnn.hpp:[m[K In member function ‘[01m[Kconst string adnn::aDNNode::getOutputEdgeName(int) const[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/AMDnn.hpp:983:122:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    return((!outputs_.empty() && edge_indx < outputs_.size() && !outputs_[edge_indx].getName().empty()) ? null_out_str_ + std::to_string((long long)edge_indx) + "." + outputs_[edge_indx].getName() : null_out_str_
[01;32m[K                                                                                                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/AMDnn.hpp:983:215:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
 tputs_.empty() && edge_indx < outputs_.size() && !outputs_[edge_indx].getName().empty()) ? null_out_str_ + std::to_string((long long)edge_indx) + "." + outputs_[edge_indx].getName() : null_out_str_ + std::to_str
[01;32m[K                                                                                                                                                                                                         ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:121:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:[m[K In member function ‘[01m[K_T adnn::CGaussianDistr<_T>::generateGaussianNoise()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:268:27:[m[K [01;31m[Kerror: [m[K‘[01m[KDBL_MIN[m[K’ was not declared in this scope
    const double epsilon = DBL_MIN; // std::numeric_limits<double>::min();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:[m[K In member function ‘[01m[Kconst adnn::aDNNTensor& adnn::CDNN_Tensor<_T>::mul2(adnn::aDNNTensor&, adnn::aDNNTensor&, int, int, double, double, cl_command_queue)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:524:31:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_WIDTH[m[K’ was not declared in this scope
    size_t a_cols =  tA.getDim(ANN_TENSOR_WIDTH) * tA.getDim(ANN_TENSOR_HEIGHT) * tA.getDim(ANN_TENSOR_DEPTH);
[01;32m[K                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:524:61:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_HEIGHT[m[K’ was not declared in this scope
    size_t a_cols =  tA.getDim(ANN_TENSOR_WIDTH) * tA.getDim(ANN_TENSOR_HEIGHT) * tA.getDim(ANN_TENSOR_DEPTH);
[01;32m[K                                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:524:92:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_DEPTH[m[K’ was not declared in this scope
    size_t a_cols =  tA.getDim(ANN_TENSOR_WIDTH) * tA.getDim(ANN_TENSOR_HEIGHT) * tA.getDim(ANN_TENSOR_DEPTH);
[01;32m[K                                                                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:525:31:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_4THDIM[m[K’ was not declared in this scope
    size_t a_rows =  tA.getDim(ANN_TENSOR_4THDIM);
[01;32m[K                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::Construct()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:111:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kwidth[m[K’ [-Wunused-variable]
   int width = (int)bot.getDim(aDNN_TENSOR_WIDTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:112:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kheight[m[K’ [-Wunused-variable]
   int height = (int)bot.getDim(aDNN_TENSOR_HEIGHT);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:113:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kinputs[m[K’ [-Wunused-variable]
   int inputs = (int)bot.getDim(aDNN_TENSOR_DEPTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:115:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kkernel_size[m[K’ [-Wunused-variable]
   int kernel_size = getKernelSz();
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kint adnn::aDNNodeConv::ConstructGT32_NCHW()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:190:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    std::string("-D ADNN_CONV_KERNEL_SZ=") + std::to_string((long long)kernel_size)
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:191:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_OUTPUTS=") + std::to_string((long long)n_outputs)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:192:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_CHANNELS=") + std::to_string((long long)inputs)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:193:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_PAD=") + std::to_string((long long)pad)
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:194:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_STRIDE=") + std::to_string((long long)stride)
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:195:54:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_HORIZ_OUT_PIX=") + std::to_string((long long)n_out_pix_horiz)
[01;32m[K                                                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:196:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_VERT_OUT_PIX=") + std::to_string((long long)n_out_pix_vert)
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:197:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_GROUP_SZ0=") + std::to_string((long long)ocl_group_sz0)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:198:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_GROUP_SZ1=") + std::to_string((long long)ocl_group_sz1)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:199:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_GROUP_LG2SZ0=") + std::to_string((long long)ocl_group_lg2sz0)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:200:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_GROUP_LG2SZ1=") + std::to_string((long long)ocl_group_lg2sz1)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:201:55:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_BATCH_STRIDE=") + std::to_string((long long)bot_batch_stride)
[01;32m[K                                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:202:57:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_CHANNEL_STRIDE=") + std::to_string((long long)bot_channel_stride)
[01;32m[K                                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:203:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_STRIDE=") + std::to_string((long long)bot_stride)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:204:55:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_TOP_BATCH_STRIDE=") + std::to_string((long long)top_batch_stride)
[01;32m[K                                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:205:57:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_TOP_CHANNEL_STRIDE=") + std::to_string((long long)top_channel_stride)
[01;32m[K                                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:206:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_TOP_STRIDE=") + std::to_string((long long)top_stride)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:207:52:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_VIS_WIDTH=") + std::to_string((long long)vis_width)
[01;32m[K                                                    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:208:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_VIS_HEIGHT=") + std::to_string((long long)vis_height)
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:209:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_WEIGHTS_STRIDE=") + std::to_string((long long)weights_stride)
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:210:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_TOP_WIDTH=") + std::to_string((long long)width_out)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:211:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_TOP_HEIGHT=") + std::to_string((long long)height_out)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:212:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_OUTS=") + std::to_string((long long)n_outs)
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:213:41:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_ALIGNED=") + std::to_string((long long)aligned)  // weights stride
[01;32m[K                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:219:56:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
   comp_options += std::string(" -D ADNN_CONV_BIAS=") + std::to_string((long long)do_bias);
[01;32m[K                                                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kint adnn::aDNNodeConv::ConstructLE32_NCHW()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:365:28:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
   n_ins = min(n_ins, inputs);
[01;32m[K                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:365:28:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/bits/char_traits.h:39:0[m[K,
                 from [01m[K/usr/include/c++/5/string:40[m[K,
                 from [01m[K/usr/include/c++/5/bits/locale_classes.h:40[m[K,
                 from [01m[K/usr/include/c++/5/bits/ios_base.h:41[m[K,
                 from [01m[K/usr/include/c++/5/iomanip:40[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:24[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/usr/include/c++/5/bits/stl_algobase.h:243:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
[01;32m[K     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:436:37:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    std::string("-D ADNN_GRP_SZ=") + std::to_string((long long)ocl_group_sz0)
[01;32m[K                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:437:41:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_GRP_SZ0=") + std::to_string((long long)ocl_group_sz0)
[01;32m[K                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:438:41:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_GRP_SZ1=") + std::to_string((long long)ocl_group_sz1)
[01;32m[K                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:439:44:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_GRP_LG2SZ0=") + std::to_string((long long)ocl_group_lg2sz0)
[01;32m[K                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:440:44:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_GRP_LG2SZ1=") + std::to_string((long long)ocl_group_lg2sz1)
[01;32m[K                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:441:44:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_IN_CHNLS=") + std::to_string((long long)inputs)
[01;32m[K                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:442:44:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_IN_CHNL_SZ=") + std::to_string((long long)(height* bot_stride))
[01;32m[K                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:443:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_IN_WIDTH=") + std::to_string((long long)width)
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:444:43:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_IN_HEIGHT=") + std::to_string((long long)height)
[01;32m[K                                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:445:43:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_IN_STRIDE=") + std::to_string((long long)bot_stride)
[01;32m[K                                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:446:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_IN_CHNL_STRIDE=") + std::to_string((long long)bot_channel_stride)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:447:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_IN_BATCH_STRIDE=") + std::to_string((long long)bot_batch_stride)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:448:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LCL_N_IN_CHNLS=") + std::to_string((long long)(n_ins))
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:449:52:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LCL_LOG2N_IN_CHNLS=") + std::to_string((long long)(log2_n_ins))
[01;32m[K                                                    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:450:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LCL_N_OUT_CHNLS=") + std::to_string((long long)n_outs)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:451:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_BATCH_SZ=") + std::to_string((long long)batch_sz)
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:452:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_FLTR_SZ0=") + std::to_string((long long)kernel_size0)
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:453:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_FLTR_PAD_SZ0=") + std::to_string((long long)pad0)
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:454:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_FLTR_STRIDE0=") + std::to_string((long long)stride0)
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:455:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_FLTR_SZ1=") + std::to_string((long long)kernel_size1)
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:456:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_FLTR_PAD_SZ1=") + std::to_string((long long)pad1)
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:457:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_FLTR_STRIDE1=") + std::to_string((long long)stride1)
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:458:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_IN_CHNL_LOOP=") + std::to_string((long long)in_main_loop)
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:459:40:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_WEI_SZ=") + std::to_string((long long)weights_hight*weights_stride)
[01;32m[K                                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:460:43:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_WIDTH=") + std::to_string((long long)width_out)
[01;32m[K                                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:461:44:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_HEIGHT=") + std::to_string((long long)height_out)
[01;32m[K                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:462:44:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_STRIDE=") + std::to_string((long long)top_stride)
[01;32m[K                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:463:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_CHNL_STRIDE=") + std::to_string((long long)top_channel_stride)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:464:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_BATCH_STRIDE=") + std::to_string((long long)top_batch_stride)
[01;32m[K                                                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:465:47:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_OUT_PIX_SZ0=") + std::to_string((long long)n_out_pix_horiz)
[01;32m[K                                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:466:47:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_OUT_PIX_SZ1=") + std::to_string((long long)n_out_pix_vert)
[01;32m[K                                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:467:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LOG2N_OUT_PIX_SZ0=") + std::to_string((long long)log2n_out_pix_horiz)    // log2 of n output pixel per wk item in 0 dim
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:468:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LOG2N_OUT_PIX_SZ1=") + std::to_string((long long)log2n_out_pix_vert) // log2 of n output pexels per wk item in 1 dim
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:469:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_PROC_SZ0=") + std::to_string((long long)n_procs_x)         // size of output processing group in 0 dim
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:470:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_PROC_SZ1=") + std::to_string((long long)n_procs_y)         // size of output processing group in 1 dim
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:471:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_PROC_LOG2SZ0=") + std::to_string((long long)log2n_procs_x)     // log2 of size of output processing group in 0 dim
[01;32m[K                                                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:472:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_PROC_LOG2SZ1=") + std::to_string((long long)log2n_procs_y)     // log2 of size of output processing group in 1 dim
[01;32m[K                                                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:473:52:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_N_TILEPROC_SZ0=") + std::to_string((long long)n_tiles_x)      //   size of output tile processing group in 0 dim, 1 tile per 1 outpur channel. 
[01;32m[K                                                    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:474:52:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_N_TILEPROC_SZ1=") + std::to_string((long long)n_tiles_y)       //  size of output tile processing group in 1 dim
[01;32m[K                                                    ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:475:56:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_N_TILEPROC_LOG2SZ0=") + std::to_string((long long)log2n_tiles_x)    // log2 of size of tile output processing group in 0 dim,  ADNN_OUT_TILEPROC_LOG2SZ0 + ADNN_LOG2N_OUT_PIX_SZ0 = 
[01;32m[K                                                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:476:56:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_N_TILEPROC_LOG2SZ1=") + std::to_string((long long)log2n_tiles_y)    // log2 of size of til output processing group in 1 dim
[01;32m[K                                                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:477:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_OUT_CHNLS=") + std::to_string((long long)outputs)   //total number of output channels
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:478:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LCL_N_OUT_CHNLS=") + std::to_string((long long)n_outs)  //n of localy kept output channels
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:479:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_WEIGHTS_STRIDE=") + std::to_string((long long)weights_stride)  // weights stride
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:480:41:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_ALIGNED=") + std::to_string((long long)aligned)  // weights stride
[01;32m[K                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:481:37:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_BIG=") + std::to_string((long long)big)  // reasolution > 32 x 32
[01;32m[K                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:482:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_TILE_SZ0=") + std::to_string((long long)input_tile_sz0)         //size of output tile(dim 0) = size of input tile
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:483:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_TILE_SZ1=") + std::to_string((long long)input_tile_sz1)         //size of output tile(dim 1) = size of input tile
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:484:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_TILE_LOG2SZ0=") + std::to_string((long long)input_tile_log2sz0)       //  log2 size of output tile(dim 0) = size of input tile
[01;32m[K                                                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:485:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_OUT_TILE_LOG2SZ1=") + std::to_string((long long)input_tile_log2sz1)        // log2 size of output tile(dim 1) = size of input tile
[01;32m[K                                                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:486:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_READ_PROC_SZ0=") + std::to_string((long long)n_read_proc0)         //size of read processors(dim 0) = size of input tile
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:487:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_READ_PROC_SZ1=") + std::to_string((long long)n_read_proc1)         //size of read processors(dim 1) = size of input tile
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:488:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_READ_PROC_LOG2SZ0=") + std::to_string((long long)log2n_read_proc0)     //log2 size of read processors(dim 0) = size of input tile
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:489:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_READ_PROC_LOG2SZ1=") + std::to_string((long long)log2n_read_proc1)     //log2 size of read processors(dim 1) = size of input tile
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:490:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_OUT_TILES0=") + std::to_string((long long)n_input_tiles0)        // n output tiles(dim 0) = n input tiles
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:491:46:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_N_OUT_TILES1=") + std::to_string((long long)n_input_tiles1)        // n output tiles(dim 1) = n input tiles
[01;32m[K                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:492:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LOG2N_OUT_TILES0=") + std::to_string((long long)log2n_input_tiles0)     //    log2 n output tiles(dim 0) = log2 n input tile
[01;32m[K                                                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:493:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LOG2N_OUT_TILES1=") + std::to_string((long long)log2n_input_tiles1)      //   log2 n output tiles(dim 1) = log2 n input tile
[01;32m[K                                                  ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:494:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_LCL_WEIGHTS=") + std::to_string((long long)lcl_weights)
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:394:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kinput_tile[m[K’ [-Wunused-variable]
   int input_tile = input_tile_sz0 * input_tile_sz1;
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::RunFwd(const adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:596:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kn_arg[m[K’ [-Wunused-variable]
    int n_arg = 0;
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:628:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    s = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:640:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    e = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:653:23:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kwei[m[K’ [-Wunused-variable]
    const aDNNTensor & wei = getBotWeightsFwd();
[01;32m[K                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:661:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kpad[m[K’ [-Wunused-variable]
    int pad = getPad();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:662:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kstride[m[K’ [-Wunused-variable]
    int stride = getKernelStride();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::VerifyFwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:839:21:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
   double max_err = -FLT_MIN;
[01;32m[K                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::ConstructBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1069:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    std::string("-D ADNN_CONV_KERNEL_SZ=") + std::to_string((long long)kernel_size)
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1070:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_OUTPUTS=") + std::to_string((long long)outputs)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1071:47:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_INPUTS=") + std::to_string((long long)inputs)
[01;32m[K                                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1072:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_PAD=") + std::to_string((long long)pad)
[01;32m[K                                          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1073:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_STRIDE=") + std::to_string((long long)stride)
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1074:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_PRV_TOPDF_W=") + std::to_string((long long)prv_w)
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1075:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_PRV_TOPDF_H=") + std::to_string((long long)prv_h)
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1076:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_GROUP_SZ0=") + std::to_string((long long)ocl_group_sz0)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1077:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_GROUP_SZ1=") + std::to_string((long long)ocl_group_sz1)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1078:54:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_GROUP_LG2SZ0=") + std::to_string((long long)ocl_group_lg2sz0)
[01;32m[K                                                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1079:54:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_GROUP_LG2SZ1=") + std::to_string((long long)ocl_group_lg2sz1)
[01;32m[K                                                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1080:55:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_BATCH_STRIDE=") + std::to_string((long long)bot_batch_stride)
[01;32m[K                                                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1081:57:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_CHANNEL_STRIDE=") + std::to_string((long long)bot_channel_stride)
[01;32m[K                                                         ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1082:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_STRIDE=") + std::to_string((long long)bot_stride)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1083:60:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_TOPDF_BATCH_STRIDE=") + std::to_string((long long)top_df_batch_stride)
[01;32m[K                                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1084:62:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_TOPDF_CHANNEL_STRIDE=") + std::to_string((long long)top_df_channel_stride)
[01;32m[K                                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1085:54:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_TOPDF_STRIDE=") + std::to_string((long long)top_df_stride)
[01;32m[K                                                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1086:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_WIDTH=") + std::to_string((long long)bot_width)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1087:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BOT_HEIGHT=") + std::to_string((long long)bot_height)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1088:61:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_WEIGHTS_CHANNEL_STRIDE=") + std::to_string((long long)weights_channel_stride)
[01;32m[K                                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1089:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_WEIGHTS_STRIDE=") + std::to_string((long long)weights_stride)
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1090:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_TOP_WIDTH=") + std::to_string((long long)top_width)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1091:49:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_TOP_HEIGHT=") + std::to_string((long long)top_height)
[01;32m[K                                                 ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1092:47:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_BATCH_SZ=") + std::to_string((long long)batch_sz)
[01;32m[K                                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1093:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_N_TILES_V=") + std::to_string((long long)convbwd_n_tile_v)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1094:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_N_TILES_H=") + std::to_string((long long)convbwd_n_tile_h)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1098:56:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
   comp_options += std::string(" -D ADNN_CONV_BIAS=") + std::to_string((long long)do_bias);
[01;32m[K                                                        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1103:63:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
   comp_options += std::string(" -D ADNN_CONVBSUM_GRP_SZ0=") + std::to_string((long long)sum_grp_sz0);
[01;32m[K                                                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1152:61:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
   comp_options += std::string(" -D ADNN_CONV_GROUP_SZ0=") + std::to_string((long long)ocl_group_bwd_sz0)
[01;32m[K                                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1153:48:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_GROUP_SZ1=") + std::to_string((long long)ocl_group_bwd_sz1)
[01;32m[K                                                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1154:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_GROUP_LG2SZ0=") + std::to_string((long long)ocl_group_bwd_lg2sz0)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1155:51:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_GROUP_LG2SZ1=") + std::to_string((long long)ocl_group_bwd_lg2sz1)
[01;32m[K                                                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1156:54:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_HORIZ_OUT_PIX=") + std::to_string((long long)n_out_pix_horiz_bwd)
[01;32m[K                                                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1157:53:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_VERT_OUT_PIX=") + std::to_string((long long)n_out_pix_vert_bwd)
[01;32m[K                                                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1158:60:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_BOTDF_BATCH_STRIDE=") + std::to_string((long long)bot_df_batch_stride)
[01;32m[K                                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1159:62:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_BOTDF_CHANNEL_STRIDE=") + std::to_string((long long)bot_df_channel_stride)
[01;32m[K                                                              ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1160:54:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONVBWD_BOTDF_STRIDE=") + std::to_string((long long)bot_df_stride)
[01;32m[K                                                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1161:45:[m[K [01;31m[Kerror: [m[K‘[01m[Kto_string[m[K’ is not a member of ‘[01m[Kstd[m[K’
    + std::string(" -D ADNN_CONV_N_OUTS=") + std::to_string((long long)n_outs);
[01;32m[K                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1198:23:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kweights_df_psum[m[K’ [-Wunused-variable]
    const aDNNTensor & weights_df_psum = getSlot(getWeightsDiffNm() + ADNN_SUM_NM);
[01;32m[K                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:948:16:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kweights_df_psum[m[K’ [-Wunused-variable]
   aDNNTensor & weights_df_psum = createSlot(getWeightsDiffNm() + ADNN_SUM_NM, weight_df_sum_descr);
[01;32m[K                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::BuildBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1306:23:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_df[m[K’ [-Wunused-variable]
    const aDNNTensor & bot_df = getBotDiff();
[01;32m[K                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::RunBwd(const adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1342:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    s = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1368:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    e = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1388:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kpad[m[K’ [-Wunused-variable]
    int pad = getPad();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1389:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kstride[m[K’ [-Wunused-variable]
    int stride = getKernelStride();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::RunHostBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1440:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_channel_stride[m[K’ [-Wunused-variable]
    int bot_channel_stride = (int)bot.getStride(aDNN_TENSOR_HEIGHT);
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1441:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_stride[m[K’ [-Wunused-variable]
    int bot_stride = (int)bot.getStride(aDNN_TENSOR_WIDTH);
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1494:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_df_vchannel_stride[m[K’ [-Wunused-variable]
   int bot_df_vchannel_stride = (int)bot_df_v.getStride(aDNN_TENSOR_HEIGHT);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1495:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_df_vstride[m[K’ [-Wunused-variable]
   int bot_df_vstride = (int)bot_df_v.getStride(aDNN_TENSOR_WIDTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1504:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kweights_batch_stride[m[K’ [-Wunused-variable]
   int weights_batch_stride = (int)weights.getStride(aDNN_TENSOR_DEPTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1429:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Ktop_df_stride[m[K’ [-Wunused-variable]
   int top_df_stride = (int)top_df.getStride(aDNN_TENSOR_WIDTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::VerifyBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1564:22:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
    double max_err = -FLT_MIN;
[01;32m[K                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1565:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kmax_b[m[K’ [-Wunused-variable]
    int max_b = 0, max_o = 0, max_i = 0, max_j = 0;
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1565:19:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kmax_o[m[K’ [-Wunused-variable]
    int max_b = 0, max_o = 0, max_i = 0, max_j = 0;
[01;32m[K                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1654:22:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
    double max_err = -FLT_MIN;
[01;32m[K                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1651:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Koutputs[m[K’ [-Wunused-variable]
    int outputs = (int)top_df.getDim(aDNN_TENSOR_DEPTH);
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::UpdateWeights()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1757:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    s = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1769:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    e = mach_absolute_time();
[01;32m[K                           ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:121:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp: In instantiation of ‘[01m[Kvoid adnn::ADNN_mm_cpu(const Dtype*, size_t, size_t, size_t, int, const Dtype*, size_t, size_t, size_t, int, Dtype*, size_t, size_t, size_t, int, double, double) [with Dtype = float; size_t = long unsigned int][m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1466:10:[m[K   required from here
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 2 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
    printf("MM_CPU ERROR; %d %d   %d %d   %d %d\n", a_cols, a_rows, b_cols, b_rows, c_rows, c_cols);
[01;32m[K          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 3 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 4 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 5 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 6 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 7 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:[m[K At global scope:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:192:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kvoid alibs::expectedError(const char*)[m[K’ defined but not used [-Wunused-function]
 static void expectedError(const char* errorMsg)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:202:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kvoid alibs::expectedError(std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static void expectedError(std::string errorMsg)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:216:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::compare(const float*, const float*, int, float)[m[K’ defined but not used [-Wunused-function]
 static bool compare(const float *refData, const float *data,
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:236:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::compare(const double*, const double*, int, double)[m[K’ defined but not used [-Wunused-function]
 static bool compare(const double *refData, const double *data,
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:257:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::compare(int*, int*, int)[m[K’ defined but not used [-Wunused-function]
 static bool compare(int *refData, int *data, int length) {
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:271:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::strComparei(std::__cxx11::string, std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static bool strComparei(std::string a, std::string b)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:307:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::fileToString(std::__cxx11::string&, std::__cxx11::string&)[m[K’ defined but not used [-Wunused-function]
 static int fileToString(std::string &fileName, std::string &str)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:428:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kvoid alibs::printStatistics(std::__cxx11::string*, std::__cxx11::string*, int)[m[K’ defined but not used [-Wunused-function]
 static void printStatistics(std::string *statsStr, std::string * stats, int n)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:669:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::is64Bit()[m[K’ defined but not used [-Wunused-function]
 static bool is64Bit()
[01;32m[K             ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:24:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsFile.hpp:51:20:[m[K [01;35m[Kwarning: [m[K‘[01m[Kstd::__cxx11::string alibs::getCurrentDir()[m[K’ defined but not used [-Wunused-function]
 static std::string getCurrentDir()
[01;32m[K                    ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:155:20:[m[K [01;35m[Kwarning: [m[K‘[01m[Kconst char* alibs::getOpenCLErrorCodeStr(std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static const char* getOpenCLErrorCodeStr(std::string input)
[01;32m[K                    ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:318:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::displayDevices(cl_platform_id, cl_device_type)[m[K’ defined but not used [-Wunused-function]
 static int displayDevices(cl_platform_id platform, cl_device_type deviceType)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:360:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::displayPlatformAndDevices(cl_platform_id, _cl_device_id* const*, int)[m[K’ defined but not used [-Wunused-function]
 static int displayPlatformAndDevices(cl_platform_id platform,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:408:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::generateBinaryImage(const alibs::bifData&)[m[K’ defined but not used [-Wunused-function]
 static int generateBinaryImage(const bifData &binaryData)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:739:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static int getPlatformL(cl_platform_id &platform, int platformId,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:813:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::getDevices(_cl_context*&, _cl_device_id***, int, bool)[m[K’ defined but not used [-Wunused-function]
 static int getDevices(cl_context &context, cl_device_id **devices, int deviceId,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:851:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::getDevices(_cl_context*&, std::vector<_cl_device_id*>&, int, bool)[m[K’ defined but not used [-Wunused-function]
 static int getDevices(cl_context &context, std::vector<cl_device_id> & devices, int deviceId,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:898:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::loadOpenCLProgram(_cl_context* const&, alibs::buildProgramData&)[m[K’ defined but not used [-Wunused-function]
 static int loadOpenCLProgram(const cl_context& context,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:959:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::buildOpenCLProgram(_cl_context* const&, const alibs::buildProgramData&)[m[K’ defined but not used [-Wunused-function]
 static int buildOpenCLProgram(const cl_context& context,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1075:15:[m[K [01;35m[Kwarning: [m[K‘[01m[Kcl_int alibs::spinForEventsComplete(cl_uint, _cl_event**)[m[K’ defined but not used [-Wunused-function]
 static cl_int spinForEventsComplete(cl_uint num_events, cl_event *event_list)
[01;32m[K               ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1108:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::waitForEventAndRelease(_cl_event**)[m[K’ defined but not used [-Wunused-function]
 static int waitForEventAndRelease(cl_event *event)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1125:15:[m[K [01;35m[Kwarning: [m[K‘[01m[Ksize_t alibs::getLocalThreads(size_t, size_t)[m[K’ defined but not used [-Wunused-function]
 static size_t getLocalThreads(size_t globalThreads, size_t maxWorkItemSize)
[01;32m[K               ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1197:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::ReadEventTime(_cl_event*&, double*)[m[K’ defined but not used [-Wunused-function]
 static int ReadEventTime(cl_event& event, double *time)
[01;32m[K            ^[m[K
CMakeFiles/aDNN.dir/build.make:54: recipe for target 'CMakeFiles/aDNN.dir/aDNNConvLayer.cpp.o' failed
make[2]: *** [CMakeFiles/aDNN.dir/aDNNConvLayer.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNN.dir/all' failed
make[1]: *** [CMakeFiles/aDNN.dir/all] Error 2
Makefile:116: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# q[Kcmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Detected GNU C++ compiler collection
-- CMAKE_CXX_COMPILER flags: -m64  -std=c++0x -fPIC -Wall -Wno-sign-compare -Wno-uninitialized
-- CMAKE_CXX_COMPILER debug flags: -g
-- CMAKE_CXX_COMPILER release flags: -O3 -DNDEBUG
-- CMAKE_CXX_COMPILER relwithdebinfo flags: -O2 -g -DNDEBUG
-- CMAKE_EXE_LINKER link flags: 
-- PROJECT SRC DIR = /c/AMD/MLopen/aDNN/src
-- PROJECT INC DIR = /c/AMD/MLopen/aDNN/src
-- COMMON  INC DIR = /c/AMD/Include
-- Project OBJ Dir = /c/AMD/MLopen/aDNN/obj for temporary build files
-- Project LIB Dir = /c/AMD/MLopen/aDNN/lib
-- Configuring done
CMake Warning (dev) at CMakeLists.txt:134 (add_dependencies):
  Policy CMP0046 is not set: Error on non-existent dependency in
  add_dependencies.  Run "cmake --help-policy CMP0046" for policy details.
  Use the cmake_policy command to set the policy and suppress this warning.

  The dependency target "clBLAS" of target "aDNN" does not exist.
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Generating done
-- Build files have been written to: /c/AMD/MLopen/aDNN/src
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# cmake .
-- 64bit build - FIND_LIBRARY_USE_LIB64_PATHS TRUE
-- Detected GNU C++ compiler collection
-- CMAKE_CXX_COMPILER flags: -m64  -std=c++0x -fPIC -Wall -Wno-sign-compare -Wno-uninitialized
-- CMAKE_CXX_COMPILER debug flags: -g
-- CMAKE_CXX_COMPILER release flags: -O3 -DNDEBUG
-- CMAKE_CXX_COMPILER relwithdebinfo flags: -O2 -g -DNDEBUG
-- CMAKE_EXE_LINKER link flags: 
-- PROJECT SRC DIR = /c/AMD/MLopen/aDNN/src
-- PROJECT INC DIR = /c/AMD/MLopen/aDNN/src
-- COMMON  INC DIR = /c/AMD/Include
-- Project OBJ Dir = /c/AMD/MLopen/aDNN/obj for temporary build files
-- Project LIB Dir = /c/AMD/MLopen/aDNN/lib
-- Configuring done
-- Generating done
-- Build files have been written to: /c/AMD/MLopen/aDNN/src
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# make
[  6%] [32mBuilding CXX object CMakeFiles/aDNN.dir/aDNNConvLayer.cpp.o
[0mIn file included from [01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h:148:0[m[K,
                 from [01m[K/usr/include/c++/5/ext/atomicity.h:35[m[K,
                 from [01m[K/usr/include/c++/5/bits/ios_base.h:39[m[K,
                 from [01m[K/usr/include/c++/5/iomanip:40[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:24[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:101:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_once[m[K’ was not declared in this scope
 __gthrw(pthread_once)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:102:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_getspecific[m[K’ was not declared in this scope
 __gthrw(pthread_getspecific)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:103:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_setspecific[m[K’ was not declared in this scope
 __gthrw(pthread_setspecific)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:105:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_create[m[K’ was not declared in this scope
 __gthrw(pthread_create)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:106:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_join[m[K’ was not declared in this scope
 __gthrw(pthread_join)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:107:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_equal[m[K’ was not declared in this scope
 __gthrw(pthread_equal)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:108:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_self[m[K’ was not declared in this scope
 __gthrw(pthread_self)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:109:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_detach[m[K’ was not declared in this scope
 __gthrw(pthread_detach)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:111:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cancel[m[K’ was not declared in this scope
 __gthrw(pthread_cancel)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:113:1:[m[K [01;31m[Kerror: [m[K‘[01m[Ksched_yield[m[K’ was not declared in this scope
 __gthrw(sched_yield)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:115:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_lock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_lock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:116:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_trylock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_trylock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:118:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_timedlock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_timedlock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:120:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_unlock[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_unlock)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:121:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_init[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_init)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:122:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutex_destroy[m[K’ was not declared in this scope
 __gthrw(pthread_mutex_destroy)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:124:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_init[m[K’ was not declared in this scope
 __gthrw(pthread_cond_init)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:125:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_broadcast[m[K’ was not declared in this scope
 __gthrw(pthread_cond_broadcast)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:126:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_signal[m[K’ was not declared in this scope
 __gthrw(pthread_cond_signal)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:127:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_wait[m[K’ was not declared in this scope
 __gthrw(pthread_cond_wait)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:128:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_timedwait[m[K’ was not declared in this scope
 __gthrw(pthread_cond_timedwait)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:129:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_cond_destroy[m[K’ was not declared in this scope
 __gthrw(pthread_cond_destroy)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:131:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_key_create[m[K’ was not declared in this scope
 __gthrw(pthread_key_create)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:132:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_key_delete[m[K’ was not declared in this scope
 __gthrw(pthread_key_delete)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:133:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutexattr_init[m[K’ was not declared in this scope
 __gthrw(pthread_mutexattr_init)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:134:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutexattr_settype[m[K’ was not declared in this scope
 __gthrw(pthread_mutexattr_settype)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:135:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_mutexattr_destroy[m[K’ was not declared in this scope
 __gthrw(pthread_mutexattr_destroy)
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:236:1:[m[K [01;31m[Kerror: [m[K‘[01m[Kpthread_key_create[m[K’ was not declared in this scope
 __gthrw2(__gthrw_(__pthread_key_create),
[01;32m[K ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_create(__gthread_t*, void* (*)(void*), void*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:662:68:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_create[m[K’ cannot be used as a function
   return __gthrw_(pthread_create) (__threadid, NULL, __func, __args);
[01;32m[K                                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_join(__gthread_t, void**)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:668:57:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_join[m[K’ cannot be used as a function
   return __gthrw_(pthread_join) (__threadid, __value_ptr);
[01;32m[K                                                         ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_detach(__gthread_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:674:46:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_detach[m[K’ cannot be used as a function
   return __gthrw_(pthread_detach) (__threadid);
[01;32m[K                                              ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_equal(__gthread_t, __gthread_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:680:45:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_equal[m[K’ cannot be used as a function
   return __gthrw_(pthread_equal) (__t1, __t2);
[01;32m[K                                             ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[K__gthread_t __gthread_self()[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:686:34:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_self[m[K’ cannot be used as a function
   return __gthrw_(pthread_self) ();
[01;32m[K                                  ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_yield()[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:692:33:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_sched_yield[m[K’ cannot be used as a function
   return __gthrw_(sched_yield) ();
[01;32m[K                                 ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_once(__gthread_once_t*, void (*)())[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:699:50:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_once[m[K’ cannot be used as a function
     return __gthrw_(pthread_once) (__once, __func);
[01;32m[K                                                  ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_key_create(__gthread_key_t*, void (*)(void*))[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:707:53:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_key_create[m[K’ cannot be used as a function
   return __gthrw_(pthread_key_create) (__key, __dtor);
[01;32m[K                                                     ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_key_delete(__gthread_key_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:713:45:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_key_delete[m[K’ cannot be used as a function
   return __gthrw_(pthread_key_delete) (__key);
[01;32m[K                                             ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kvoid* __gthread_getspecific(__gthread_key_t)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:719:46:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_getspecific[m[K’ cannot be used as a function
   return __gthrw_(pthread_getspecific) (__key);
[01;32m[K                                              ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_setspecific(__gthread_key_t, const void*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:725:53:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_setspecific[m[K’ cannot be used as a function
   return __gthrw_(pthread_setspecific) (__key, __ptr);
[01;32m[K                                                     ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kvoid __gthread_mutex_init_function(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:732:48:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_init[m[K’ cannot be used as a function
     __gthrw_(pthread_mutex_init) (__mutex, NULL);
[01;32m[K                                                ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_destroy(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:739:52:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_destroy[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_destroy) (__mutex);
[01;32m[K                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_lock(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:748:49:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_lock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_lock) (__mutex);
[01;32m[K                                                 ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_trylock(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:757:52:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_trylock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_trylock) (__mutex);
[01;32m[K                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_timedlock(__gthread_mutex_t*, const __gthread_time_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:768:69:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_timedlock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_timedlock) (__mutex, __abs_timeout);
[01;32m[K                                                                     ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_mutex_unlock(__gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:778:51:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_unlock[m[K’ cannot be used as a function
     return __gthrw_(pthread_mutex_unlock) (__mutex);
[01;32m[K                                                   ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_recursive_mutex_init_function(__gthread_recursive_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:793:54:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutexattr_init[m[K’ cannot be used as a function
       __r = __gthrw_(pthread_mutexattr_init) (&__attr);
[01;32m[K                                                      ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:796:10:[m[K [01;31m[Kerror: [m[K‘[01m[KPTHREAD_MUTEX_RECURSIVE[m[K’ was not declared in this scope
          PTHREAD_MUTEX_RECURSIVE);
[01;32m[K          ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:796:33:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutexattr_settype[m[K’ cannot be used as a function
          PTHREAD_MUTEX_RECURSIVE);
[01;32m[K                                 ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:798:54:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutex_init[m[K’ cannot be used as a function
  __r = __gthrw_(pthread_mutex_init) (__mutex, &__attr);
[01;32m[K                                                      ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:800:52:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_mutexattr_destroy[m[K’ cannot be used as a function
  __r = __gthrw_(pthread_mutexattr_destroy) (&__attr);
[01;32m[K                                                    ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_broadcast(__gthread_cond_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:852:50:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_broadcast[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_broadcast) (__cond);
[01;32m[K                                                  ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_signal(__gthread_cond_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:858:47:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_signal[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_signal) (__cond);
[01;32m[K                                               ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_wait(__gthread_cond_t*, __gthread_mutex_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:864:54:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_wait[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_wait) (__cond, __mutex);
[01;32m[K                                                      ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_timedwait(__gthread_cond_t*, __gthread_mutex_t*, const __gthread_time_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:871:74:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_timedwait[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_timedwait) (__cond, __mutex, __abs_timeout);
[01;32m[K                                                                          ^[m[K
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:[m[K In function ‘[01m[Kint __gthread_cond_destroy(__gthread_cond_t*)[m[K’:
[01m[K/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h:884:48:[m[K [01;31m[Kerror: [m[K‘[01m[K__gthrw_pthread_cond_destroy[m[K’ cannot be used as a function
   return __gthrw_(pthread_cond_destroy) (__cond);
[01;32m[K                                                ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:[m[K In function ‘[01m[Kstd::__cxx11::string alibs::getSdkVerStr()[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:653:13:[m[K [01;31m[Kerror: [m[K‘[01m[KsdkVerStr[m[K’ was not declared in this scope
             sdkVerStr.major,
[01;32m[K             ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getDefaultPlatform(cl_uint, _cl_platform_id**, _cl_platform_id*&, cl_device_type, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:673:15:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kcontext[m[K’ [-Wunused-variable]
    cl_context context = clCreateContextFromType(cps,
[01;32m[K               ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:710:15:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kcontext[m[K’ [-Wunused-variable]
    cl_context context = clCreateContextFromType(cps,
[01;32m[K               ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, uint)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:702:2:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [-Wreturn-type]
  }
[01;32m[K  ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:121:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:[m[K In member function ‘[01m[K_T adnn::CGaussianDistr<_T>::generateGaussianNoise()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:268:27:[m[K [01;31m[Kerror: [m[K‘[01m[KDBL_MIN[m[K’ was not declared in this scope
    const double epsilon = DBL_MIN; // std::numeric_limits<double>::min();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:[m[K In member function ‘[01m[Kconst adnn::aDNNTensor& adnn::CDNN_Tensor<_T>::mul2(adnn::aDNNTensor&, adnn::aDNNTensor&, int, int, double, double, cl_command_queue)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:524:31:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_WIDTH[m[K’ was not declared in this scope
    size_t a_cols =  tA.getDim(ANN_TENSOR_WIDTH) * tA.getDim(ANN_TENSOR_HEIGHT) * tA.getDim(ANN_TENSOR_DEPTH);
[01;32m[K                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:524:61:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_HEIGHT[m[K’ was not declared in this scope
    size_t a_cols =  tA.getDim(ANN_TENSOR_WIDTH) * tA.getDim(ANN_TENSOR_HEIGHT) * tA.getDim(ANN_TENSOR_DEPTH);
[01;32m[K                                                             ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:524:92:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_DEPTH[m[K’ was not declared in this scope
    size_t a_cols =  tA.getDim(ANN_TENSOR_WIDTH) * tA.getDim(ANN_TENSOR_HEIGHT) * tA.getDim(ANN_TENSOR_DEPTH);
[01;32m[K                                                                                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:525:31:[m[K [01;31m[Kerror: [m[K‘[01m[KANN_TENSOR_4THDIM[m[K’ was not declared in this scope
    size_t a_rows =  tA.getDim(ANN_TENSOR_4THDIM);
[01;32m[K                               ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::Construct()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:111:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kwidth[m[K’ [-Wunused-variable]
   int width = (int)bot.getDim(aDNN_TENSOR_WIDTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:112:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kheight[m[K’ [-Wunused-variable]
   int height = (int)bot.getDim(aDNN_TENSOR_HEIGHT);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:113:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kinputs[m[K’ [-Wunused-variable]
   int inputs = (int)bot.getDim(aDNN_TENSOR_DEPTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:115:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kkernel_size[m[K’ [-Wunused-variable]
   int kernel_size = getKernelSz();
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kint adnn::aDNNodeConv::ConstructLE32_NCHW()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:365:28:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
   n_ins = min(n_ins, inputs);
[01;32m[K                            ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:365:28:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:35[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:394:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kinput_tile[m[K’ [-Wunused-variable]
   int input_tile = input_tile_sz0 * input_tile_sz1;
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::RunFwd(const adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:596:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kn_arg[m[K’ [-Wunused-variable]
    int n_arg = 0;
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:628:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    s = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:640:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    e = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:653:23:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kwei[m[K’ [-Wunused-variable]
    const aDNNTensor & wei = getBotWeightsFwd();
[01;32m[K                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:661:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kpad[m[K’ [-Wunused-variable]
    int pad = getPad();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:662:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kstride[m[K’ [-Wunused-variable]
    int stride = getKernelStride();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::VerifyFwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:839:21:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
   double max_err = -FLT_MIN;
[01;32m[K                     ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::ConstructBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1198:23:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kweights_df_psum[m[K’ [-Wunused-variable]
    const aDNNTensor & weights_df_psum = getSlot(getWeightsDiffNm() + ADNN_SUM_NM);
[01;32m[K                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:948:16:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kweights_df_psum[m[K’ [-Wunused-variable]
   aDNNTensor & weights_df_psum = createSlot(getWeightsDiffNm() + ADNN_SUM_NM, weight_df_sum_descr);
[01;32m[K                ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::BuildBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1306:23:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_df[m[K’ [-Wunused-variable]
    const aDNNTensor & bot_df = getBotDiff();
[01;32m[K                       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::RunBwd(const adnn_node_parameters*)[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1342:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    s = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1368:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    e = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1388:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kpad[m[K’ [-Wunused-variable]
    int pad = getPad();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1389:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kstride[m[K’ [-Wunused-variable]
    int stride = getKernelStride();
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::RunHostBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1440:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_channel_stride[m[K’ [-Wunused-variable]
    int bot_channel_stride = (int)bot.getStride(aDNN_TENSOR_HEIGHT);
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1441:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_stride[m[K’ [-Wunused-variable]
    int bot_stride = (int)bot.getStride(aDNN_TENSOR_WIDTH);
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1494:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_df_vchannel_stride[m[K’ [-Wunused-variable]
   int bot_df_vchannel_stride = (int)bot_df_v.getStride(aDNN_TENSOR_HEIGHT);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1495:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kbot_df_vstride[m[K’ [-Wunused-variable]
   int bot_df_vstride = (int)bot_df_v.getStride(aDNN_TENSOR_WIDTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1504:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kweights_batch_stride[m[K’ [-Wunused-variable]
   int weights_batch_stride = (int)weights.getStride(aDNN_TENSOR_DEPTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1429:7:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Ktop_df_stride[m[K’ [-Wunused-variable]
   int top_df_stride = (int)top_df.getStride(aDNN_TENSOR_WIDTH);
[01;32m[K       ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::VerifyBwd()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1564:22:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
    double max_err = -FLT_MIN;
[01;32m[K                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1565:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kmax_b[m[K’ [-Wunused-variable]
    int max_b = 0, max_o = 0, max_i = 0, max_j = 0;
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1565:19:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Kmax_o[m[K’ [-Wunused-variable]
    int max_b = 0, max_o = 0, max_i = 0, max_j = 0;
[01;32m[K                   ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1654:22:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
    double max_err = -FLT_MIN;
[01;32m[K                      ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1651:8:[m[K [01;35m[Kwarning: [m[Kunused variable ‘[01m[Koutputs[m[K’ [-Wunused-variable]
    int outputs = (int)top_df.getDim(aDNN_TENSOR_DEPTH);
[01;32m[K        ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeConv::UpdateWeights()[m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1757:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    s = mach_absolute_time();
[01;32m[K                           ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1769:27:[m[K [01;31m[Kerror: [m[K‘[01m[Kmach_absolute_time[m[K’ was not declared in this scope
    e = mach_absolute_time();
[01;32m[K                           ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:121:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp: In instantiation of ‘[01m[Kvoid adnn::ADNN_mm_cpu(const Dtype*, size_t, size_t, size_t, int, const Dtype*, size_t, size_t, size_t, int, Dtype*, size_t, size_t, size_t, int, double, double) [with Dtype = float; size_t = long unsigned int][m[K’:
[01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:1466:10:[m[K   required from here
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 2 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
    printf("MM_CPU ERROR; %d %d   %d %d   %d %d\n", a_cols, a_rows, b_cols, b_rows, c_rows, c_cols);
[01;32m[K          ^[m[K
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 3 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 4 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 5 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 6 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
[01m[K/c/AMD/MLopen/aDNN/src/aDNNTensor.hpp:59:10:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 7 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:[m[K At global scope:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:192:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kvoid alibs::expectedError(const char*)[m[K’ defined but not used [-Wunused-function]
 static void expectedError(const char* errorMsg)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:202:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kvoid alibs::expectedError(std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static void expectedError(std::string errorMsg)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:216:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::compare(const float*, const float*, int, float)[m[K’ defined but not used [-Wunused-function]
 static bool compare(const float *refData, const float *data,
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:236:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::compare(const double*, const double*, int, double)[m[K’ defined but not used [-Wunused-function]
 static bool compare(const double *refData, const double *data,
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:257:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::compare(int*, int*, int)[m[K’ defined but not used [-Wunused-function]
 static bool compare(int *refData, int *data, int length) {
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:271:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::strComparei(std::__cxx11::string, std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static bool strComparei(std::string a, std::string b)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:307:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::fileToString(std::__cxx11::string&, std::__cxx11::string&)[m[K’ defined but not used [-Wunused-function]
 static int fileToString(std::string &fileName, std::string &str)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:428:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kvoid alibs::printStatistics(std::__cxx11::string*, std::__cxx11::string*, int)[m[K’ defined but not used [-Wunused-function]
 static void printStatistics(std::string *statsStr, std::string * stats, int n)
[01;32m[K             ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:669:13:[m[K [01;35m[Kwarning: [m[K‘[01m[Kbool alibs::is64Bit()[m[K’ defined but not used [-Wunused-function]
 static bool is64Bit()
[01;32m[K             ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:24:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsFile.hpp:51:20:[m[K [01;35m[Kwarning: [m[K‘[01m[Kstd::__cxx11::string alibs::getCurrentDir()[m[K’ defined but not used [-Wunused-function]
 static std::string getCurrentDir()
[01;32m[K                    ^[m[K
In file included from [01m[K/c/AMD/MLopen/aDNN/src/aDNNOCL.hpp:22:0[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNInternal.hpp:113[m[K,
                 from [01m[K/c/AMD/MLopen/aDNN/src/aDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:155:20:[m[K [01;35m[Kwarning: [m[K‘[01m[Kconst char* alibs::getOpenCLErrorCodeStr(std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static const char* getOpenCLErrorCodeStr(std::string input)
[01;32m[K                    ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:318:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::displayDevices(cl_platform_id, cl_device_type)[m[K’ defined but not used [-Wunused-function]
 static int displayDevices(cl_platform_id platform, cl_device_type deviceType)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:360:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::displayPlatformAndDevices(cl_platform_id, _cl_device_id* const*, int)[m[K’ defined but not used [-Wunused-function]
 static int displayPlatformAndDevices(cl_platform_id platform,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:408:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::generateBinaryImage(const alibs::bifData&)[m[K’ defined but not used [-Wunused-function]
 static int generateBinaryImage(const bifData &binaryData)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:739:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’ defined but not used [-Wunused-function]
 static int getPlatformL(cl_platform_id &platform, int platformId,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:813:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::getDevices(_cl_context*&, _cl_device_id***, int, bool)[m[K’ defined but not used [-Wunused-function]
 static int getDevices(cl_context &context, cl_device_id **devices, int deviceId,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:851:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::getDevices(_cl_context*&, std::vector<_cl_device_id*>&, int, bool)[m[K’ defined but not used [-Wunused-function]
 static int getDevices(cl_context &context, std::vector<cl_device_id> & devices, int deviceId,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:898:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::loadOpenCLProgram(_cl_context* const&, alibs::buildProgramData&)[m[K’ defined but not used [-Wunused-function]
 static int loadOpenCLProgram(const cl_context& context,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:959:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::buildOpenCLProgram(_cl_context* const&, const alibs::buildProgramData&)[m[K’ defined but not used [-Wunused-function]
 static int buildOpenCLProgram(const cl_context& context,
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1075:15:[m[K [01;35m[Kwarning: [m[K‘[01m[Kcl_int alibs::spinForEventsComplete(cl_uint, _cl_event**)[m[K’ defined but not used [-Wunused-function]
 static cl_int spinForEventsComplete(cl_uint num_events, cl_event *event_list)
[01;32m[K               ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1108:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::waitForEventAndRelease(_cl_event**)[m[K’ defined but not used [-Wunused-function]
 static int waitForEventAndRelease(cl_event *event)
[01;32m[K            ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1125:15:[m[K [01;35m[Kwarning: [m[K‘[01m[Ksize_t alibs::getLocalThreads(size_t, size_t)[m[K’ defined but not used [-Wunused-function]
 static size_t getLocalThreads(size_t globalThreads, size_t maxWorkItemSize)
[01;32m[K               ^[m[K
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:1197:12:[m[K [01;35m[Kwarning: [m[K‘[01m[Kint alibs::ReadEventTime(_cl_event*&, double*)[m[K’ defined but not used [-Wunused-function]
 static int ReadEventTime(cl_event& event, double *time)
[01;32m[K            ^[m[K
CMakeFiles/aDNN.dir/build.make:54: recipe for target 'CMakeFiles/aDNN.dir/aDNNConvLayer.cpp.o' failed
make[2]: *** [CMakeFiles/aDNN.dir/aDNNConvLayer.cpp.o] Error 1
CMakeFiles/Makefile2:60: recipe for target 'CMakeFiles/aDNN.dir/all' failed
make[1]: *** [CMakeFiles/aDNN.dir/all] Error 2
Makefile:116: recipe for target 'all' failed
make: *** [all] Error 2
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# 
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# ls -l 
total 1072
-rw-r--r-- 1 thaddeus amddev    26365 Jan 14 13:31 aDNN.cl
-rw-r--r-- 1 thaddeus amddev     1776 Jan 14 13:31 aDNN.cl.h
-rw-r--r-- 1 thaddeus amddev    28901 Jan 14 13:31 aDNNConvBwd1.cl
-rw-r--r-- 1 thaddeus amddev     7651 Jan 14 13:31 aDNNConv_GT32_NCHW.cl
-rw-r--r-- 1 thaddeus amddev    63325 Feb 16 15:14 aDNNConvLayer.cpp
-rw-r--r-- 1 thaddeus amddev    29568 Jan 14 13:31 aDNNConvLayerWin.cpp
-rw-r--r-- 1 thaddeus amddev    18103 Jan 14 13:31 aDNNConv_LE32_NCHW.cl
-rw-r--r-- 1 thaddeus amddev     3630 Jan 14 13:31 aDNNConvWeightsUpdate.cl
-rw-r--r-- 1 thaddeus amddev   244236 Jan 14 13:31 aDNN.cpp
-rw-r--r-- 1 thaddeus amddev    33977 Jan 14 13:31 aDNNFullyConnectLayer.cpp
-rw-r--r-- 1 thaddeus amddev    33057 Jan 14 13:31 aDNN.hpp
-rw-r--r-- 1 thaddeus amddev    10767 Jan 14 13:31 aDNNInternal.cpp
-rw-r--r-- 1 thaddeus amddev     4122 Feb 11 15:18 aDNNInternal.hpp
-rw-r--r-- 1 thaddeus amddev    36081 Jan 14 13:31 aDNNLayer.cpp
-rw-r--r-- 1 thaddeus amddev    30608 Jan 14 13:31 aDNNLRN.cl
-rw-r--r-- 1 thaddeus amddev    47156 Jan 14 13:31 aDNNLRNLayer.cpp
-rw-r--r-- 1 thaddeus amddev    11667 Jan 14 13:31 aDNNMatMat.cl
-rw-r--r-- 1 thaddeus amddev     4166 Jan 14 13:31 aDNNMatOps.cl
-rw-r--r-- 1 thaddeus amddev     5132 Jan 14 13:31 aDNNNeuron.cl
-rw-r--r-- 1 thaddeus amddev     6255 Jan 14 13:31 aDNNNeuron.cl.h
-rw-r--r-- 1 thaddeus amddev    23206 Jan 14 13:31 aDNNNeuronLayer.cpp
-rw-r--r-- 1 thaddeus amddev     8833 Jan 14 13:31 aDNNOCL.cpp
-rw-r--r-- 1 thaddeus amddev    14935 Jan 14 13:31 aDNNOCL.hpp
-rw-r--r-- 1 thaddeus amddev    12365 Jan 14 13:31 aDNNPoolingBwd.cl
-rw-r--r-- 1 thaddeus amddev    13601 Jan 14 13:31 aDNNPooling.cl
-rw-r--r-- 1 thaddeus amddev    52947 Jan 14 13:31 aDNNPoolingLayer.cpp
-rw-r--r-- 1 thaddeus amddev     5958 Jan 14 13:31 aDNNSoftMax.cl
-rw-r--r-- 1 thaddeus amddev    15974 Jan 14 13:31 aDNNSoftMaxLayer.cpp
-rw-r--r-- 1 thaddeus amddev    20512 Jan 14 13:31 aDNNTensor.hpp
-rw-r--r-- 1 thaddeus amddev     1529 Jan 14 13:31 aDNNWeightsUpdate.cl.h
-rw-r--r-- 1 thaddeus amddev     6933 Jan 14 13:31 aLibDNNInternal.cpp
-rw-r--r-- 1 thaddeus amddev     2993 Jan 14 13:31 aLibDNNObj.cpp
-rw-r--r-- 1 thaddeus amddev     2205 Jan 14 13:31 aLibDNN.sln
-rw-r--r-- 1 thaddeus amddev     8895 Jan 14 13:31 aLibDNN.vcxproj
-rw-r--r-- 1 thaddeus amddev    32686 Jan 14 13:31 AMDnn.h
-rw-r--r-- 1 thaddeus amddev    36273 Feb 16 13:18 AMDnn.hpp
-rw-r--r-- 1 thaddeus amddev    19549 Jan 14 13:31 AMDnnImpl.cpp
-rw-r--r-- 1 thaddeus amddev    13311 Jan 14 13:31 AMDnnTensor.cpp
-rw-rw-r-- 1 thaddeus thaddeus  12216 Feb 16 14:10 #CMakeCache.txt#
-rw-r--r-- 1 root     root      11985 Feb 16 15:09 CMakeCache.txt
drwxrwxr-x 6 thaddeus thaddeus   4096 Feb 16 15:11 [0m[01;34mCMakeFiles[0m
-rw-rw-r-- 1 thaddeus thaddeus   2049 Feb 15 02:58 cmake_install.cmake
-rw-rw-r-- 2 thaddeus thaddeus   9801 Feb 16 15:11 CMakeLists.txt
-rw-r--r-- 1 root     root      17340 Feb 16 15:11 Makefile
-rw-r--r-- 1 thaddeus amddev     1300 Jan 14 13:31 ReadMe.txt
-rw-r--r-- 1 thaddeus amddev     6333 Jan 14 13:31 sgemm_NT.CL
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# chown thaddeus:amdev CMakeCache.txt
chown: invalid group: ‘thaddeus:amdev’
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# chown thaddeus:amdev CMakeCache.txt[1@d
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# chown [K[K[K[K[K[Krm Makefile
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# [K]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# CTS[K[K[Ketags *.cpp *.hpp
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# ls 
aDNN.cl                    aDNN.hpp          aDNNNeuronLayer.cpp     aLibDNNInternal.cpp  [0m[01;34mCMakeFiles[0m
aDNN.cl.h                  aDNNInternal.cpp  aDNNOCL.cpp             aLibDNNObj.cpp       cmake_install.cmake
aDNNConvBwd1.cl            aDNNInternal.hpp  aDNNOCL.hpp             aLibDNN.sln          CMakeLists.txt
aDNNConv_GT32_NCHW.cl      aDNNLayer.cpp     aDNNPoolingBwd.cl       aLibDNN.vcxproj      Makefile
aDNNConvLayer.cpp          aDNNLRN.cl        aDNNPooling.cl          AMDnn.h              ReadMe.txt
aDNNConvLayerWin.cpp       aDNNLRNLayer.cpp  aDNNPoolingLayer.cpp    AMDnn.hpp            sgemm_NT.CL
aDNNConv_LE32_NCHW.cl      aDNNMatMat.cl     aDNNSoftMax.cl          AMDnnImpl.cpp        TAGS
aDNNConvWeightsUpdate.cl   aDNNMatOps.cl     aDNNSoftMaxLayer.cpp    AMDnnTensor.cpp
aDNN.cpp                   aDNNNeuron.cl     aDNNTensor.hpp          #CMakeCache.txt#
aDNNFullyConnectLayer.cpp  aDNNNeuron.cl.h   aDNNWeightsUpdate.cl.h  CMakeCache.txt
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# [K]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# git diff
[?1h=[1mdiff --git a/aDNN/app/aLibDNNDriver.cpp b/aDNN/app/aLibDNNDriver.cpp[m[m
[1mindex f8b7248..e4e6f21 100644[m[m
[1m--- a/aDNN/app/aLibDNNDriver.cpp[m[m
[1m+++ b/aDNN/app/aLibDNNDriver.cpp[m[m
[36m@@ -21,8 +21,23 @@[m[m
  * MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.[m[m
  */[m[m
 [m[m
[31m-#include "stdafx.h"[m[m
[31m-[m[m
[32m+[m[32m#ifdef WIN32[m[m
[32m+[m[32m  #include "stdafx.h"[m[m
[32m+[m[32m#else  // linux[m[41m [m[m
[32m+[m[32m  #include <cstdio>       // this defines malloc also, so commented out the malloc.h below[m[m
[32m+[m[32m  #include <iomanip>[m[m
[32m+[m[32m  #include <cstdlib>[m[m
[32m+[m[32m  #include <cassert>[m[m
[32m+[m[32m  #include <cstring>[m[m
[32m+[m[32m  #include <vector>[m[m
[32m+[m[32m  #include <map>[m[m
[32m+[m[32m  #include <string>[m[m
[32m+[m[32m//#include <malloc.h>    // defines addition non-standard functions like mallinfo(3) malloc_stats(3)[m[m
[32m+[m[32m//Application Specific (these are in stdafx.h)[m[41m [m[m
[32m+[m[32m  #include <CL/opencl.h>[m[m
[32m+[m[32m  #include "../src/AMDnn.h"[m[m
[32m+[m[32m  #include "../src/AMDnn.hpp"   // one of these may be gone[m[m
[32m+[m[32m#endif[m[m
 [m[m
 [m[m
 static int PrepareLRNode(alib_obj aLib,[m[m
[36m@@ -96,7 +111,7 @@[m [mstatic int PrepareLRNode(alib_obj aLib,[m[m
        node_src_params.dims[1] = input_channels;[m[m
        node_src_params.dims[2] = input_h;[m[m
        node_src_params.dims[3] = input_w;[m[m
[31m-[m[m
[32m+[m[41m [m[m
        // src[m[m
        if (inference && node_src)[m[m
        {[m[m
[36m@@ -346,7 +361,7 @@[m [mstatic int PrepareConvNode(alib_obj aLib, //         1    ?? 8 or 12 parameters[m[m
        const adnn_filter1D_parameters *f_params, // 3    IS there a way we can group these into a structure an[m d pass[m[m
         int batch_sz,                            // 4    a pointer to the structure ?? [m[m
        int input_channels,                       // 5[m[m
[31m-       int input_                                // 6[m[m
[32m+[m       [32mint input_h,                              // 6[m[m
        int input_w,                              // 7[m[m
        int n_output_featuremaps,                 // 8[m[m
        const char * node_name,                   // 9[m[m
:[K[K[?1l>]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# git add aLibDNN[Kcd ,.[K[K../app
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# ad[K[Kgit add aLibDNNDriver.cpp 
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mmodified:   aLibDNNDriver.cpp[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   ../src/AMDnn.hpp[m
	[31mmodified:   ../src/aDNN.hpp[m
	[31mmodified:   ../src/aDNNConvLayer.cpp[m
	[31mmodified:   ../src/aDNNOCL.hpp[m
	[31mmodified:   ../src/aLibDNNInternal.cpp[m
	[31mmodified:   ../../cmake_files/CMakeLists.0.TOP[m
	[31mmodified:   ../../cmake_files/CMakeLists.app[m
	[31mmodified:   ../../cmake_files/CMakeLists.lib[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m../../.#clBLAS.notes[m
	[31m../../.gitignore[m
	[31m../../LICENSE[m
	[31m../CMakeCache.txt[m
	[31m../CMakeFiles/[m
	[31m../Makefile[m
	[31m.#stdafx.h[m
	[31mCMakeCache.txt[m
	[31mCMakeFiles/[m
	[31mCMakeLists.txt[m
	[31mMakefile[m
	[31mcmake_install.cmake[m
	[31mrun5-app[m
	[31m../build_from_aDNN[m
	[31m../cmake_install.cmake[m
	[31m../src/.#aDNNOCL.hpp[m
	[31m../src/CMakeCache.txt[m
	[31m../src/CMakeFiles/[m
	[31m../src/CMakeLists.txt[m
	[31m../src/Makefile[m
	[31m../src/cmake_install.cmake[m
	[31m../../clBLAS.notes[m
	[31m../../cmake.run1[m
	[31m../../cmake.run2[m
	[31m../../cmake.run3[m
	[31m../../cmake/[m
	[31m../../cmake_files/top_down/[m

]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# cd ../src
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# git add A[KM[KAMDnn.hpp
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# git add A[KaDNN.hpp
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# git add aDNNConvLayer.cpp
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# git add aDNNOCL.ht[Kpp
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# git add aLibDNNInternal.cpp
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# i[Kgit add CMakeF[KLists.txt
]0;root@TT: /c/AMD/MLopen/aDNN/srcroot@TT:/c/AMD/MLopen/aDNN/src# cd ../app
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# git status .
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mmodified:   aLibDNNDriver.cpp[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m.#stdafx.h[m
	[31mCMakeCache.txt[m
	[31mCMakeFiles/[m
	[31mCMakeLists.txt[m
	[31mMakefile[m
	[31mcmake_install.cmake[m
	[31mrun5-app[m

]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# git add aLibDNNDriver.cpp
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# get[K[Kit add CMakeLists.txt
]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   CMakeLists.txt[m
	[32mmodified:   aLibDNNDriver.cpp[m
	[32mmodified:   ../src/AMDnn.hpp[m
	[32mnew file:   ../src/CMakeLists.txt[m
	[32mmodified:   ../src/aDNN.hpp[m
	[32mmodified:   ../src/aDNNConvLayer.cpp[m
	[32mmodified:   ../src/aDNNOCL.hpp[m
	[32mmodified:   ../src/aLibDNNInternal.cpp[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   ../../cmake_files/CMakeLists.0.TOP[m
	[31mmodified:   ../../cmake_files/CMakeLists.app[m
	[31mmodified:   ../../cmake_files/CMakeLists.lib[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m../../.#clBLAS.notes[m
	[31m../../.gitignore[m
	[31m../../LICENSE[m
	[31m../CMakeCache.txt[m
	[31m../CMakeFiles/[m
	[31m../Makefile[m
	[31m.#stdafx.h[m
	[31mCMakeCache.txt[m
	[31mCMakeFiles/[m
	[31mMakefile[m
	[31mcmake_install.cmake[m
	[31mrun5-app[m
	[31m../build_from_aDNN[m
	[31m../cmake_install.cmake[m
	[31m../src/.#aDNNOCL.hpp[m
	[31m../src/CMakeCache.txt[m
	[31m../src/CMakeFiles/[m
	[31m../src/Makefile[m
	[31m../src/cmake_install.cmake[m
	[31m../../clBLAS.notes[m
	[31m../../cmake.run1[m
	[31m../../cmake.run2[m
	[31m../../cmake.run3[m
	[31m../../cmake/[m
	[31m../../cmake_files/top_down/[m

]0;root@TT: /c/AMD/MLopen/aDNN/approot@TT:/c/AMD/MLopen/aDNN/app# cd ..
]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# git commit -n "160216 : CMake working (so it seems) but issues with some files.  Al ex has a new set of files, so going to copy them over now (next)" [K[K =-[K[K- committed changes so far"[K[K[K[K[K[K[Kfor includes fo rli[K[K[K[Kr l[KLinux"
error: pathspec '160216 : CMake working (so it seems) but issues with some files.  Alex has a new set of files, so going to copy them over now (next) - committed changes for includes for Linux' did not match any file(s) known to git.
]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mnew file:   app/CMakeLists.txt[m
	[32mmodified:   app/aLibDNNDriver.cpp[m
	[32mmodified:   src/AMDnn.hpp[m
	[32mnew file:   src/CMakeLists.txt[m
	[32mmodified:   src/aDNN.hpp[m
	[32mmodified:   src/aDNNConvLayer.cpp[m
	[32mmodified:   src/aDNNOCL.hpp[m
	[32mmodified:   src/aLibDNNInternal.cpp[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   ../cmake_files/CMakeLists.0.TOP[m
	[31mmodified:   ../cmake_files/CMakeLists.app[m
	[31mmodified:   ../cmake_files/CMakeLists.lib[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	[31m../.#clBLAS.notes[m
	[31m../.gitignore[m
	[31m../LICENSE[m
	[31mCMakeCache.txt[m
	[31mCMakeFiles/[m
	[31mMakefile[m
	[31mapp/.#stdafx.h[m
	[31mapp/CMakeCache.txt[m
	[31mapp/CMakeFiles/[m
	[31mapp/Makefile[m
	[31mapp/cmake_install.cmake[m
	[31mapp/run5-app[m
	[31mbuild_from_aDNN[m
	[31mcmake_install.cmake[m
	[31msrc/.#aDNNOCL.hpp[m
	[31msrc/CMakeCache.txt[m
	[31msrc/CMakeFiles/[m
	[31msrc/Makefile[m
	[31msrc/cmake_install.cmake[m
	[31m../clBLAS.notes[m
	[31m../cmake.run1[m
	[31m../cmake.run2[m
	[31m../cmake.run3[m
	[31m../cmake/[m
	[31m../cmake_files/top_down/[m

]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# git statuscommit -n "160216 : CMake working (so it seems) but issues with some files.  Aleex has a new set of files, so going to copy them over now (next) - committed changes for includes for Linux"[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C"160216 : CMake working (so it seems) but issues with some files.  Alex[1P[A]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# [C[C[C[C[C[C[C[C[C[C[C[C[C"160216 : CMake working (so it seems) but issues with some files.  Alex [1P[A]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# [C[C[C[C[C[C[C[C[C[C[C[Cm"160216 : CMake working (so it seems) but issues with some files.  Alex[1@ [A]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# [C[C[C[C[C[C[C[C[C[C[C[C[C "160216 : CMake working (so it seems) but issues with some files.  Ale[1@x[A]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# [C[C[C[C[C[C[C[C[C[C[C[C[C[C

[master 802b5d7] 160216 : CMake working (so it seems) but issues with some files.  Alex has a new set of files, so going to copy them over now (next) - committed changes for includes for Linux
 8 files changed, 412 insertions(+), 8 deletions(-)
 create mode 100644 aDNN/app/CMakeLists.txt
 create mode 100644 aDNN/src/CMakeLists.txt
]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# 
]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# ls 
[0m[01;34mapp[0m  [01;34mbin[0m  build_from_aDNN  CMakeCache.txt  [01;34mCMakeFiles[0m  cmake_install.cmake  [01;34mdoc[0m  [01;34mdox[0m  [01;34mlib[0m  Makefile  [01;34mobj[0m  [01;34msrc[0m
]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# tar -cvf ../preAlex.tar app src 
app/
app/CMakeLists.txt
app/stdafx.cpp
app/ReadMe.txt
app/.#stdafx.h
app/targetver.h
app/cmake_install.cmake
app/aLibDNNDriver.cpp
app/Makefile
app/CMakeCache.txt
app/#stdafx.h#
app/run5-app
app/aLibDNNDriver.vcxproj
app/stdafx.h
app/CMakeFiles/
app/CMakeFiles/CMakeTmp/
app/CMakeFiles/cmake.check_cache
app/CMakeFiles/CMakeDirectoryInformation.cmake
app/CMakeFiles/progress.marks
app/CMakeFiles/CMakeOutput.log
app/CMakeFiles/Makefile2
app/CMakeFiles/aDNNdriver.lnx.dir/
app/CMakeFiles/aDNNdriver.lnx.dir/CXX.includecache
app/CMakeFiles/aDNNdriver.lnx.dir/depend.make
app/CMakeFiles/aDNNdriver.lnx.dir/link.txt
app/CMakeFiles/aDNNdriver.lnx.dir/cmake_clean.cmake
app/CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
app/CMakeFiles/aDNNdriver.lnx.dir/DependInfo.cmake
app/CMakeFiles/aDNNdriver.lnx.dir/flags.make
app/CMakeFiles/aDNNdriver.lnx.dir/depend.internal
app/CMakeFiles/aDNNdriver.lnx.dir/build.make
app/CMakeFiles/aDNNdriver.lnx.dir/progress.make
app/CMakeFiles/TargetDirectories.txt
app/CMakeFiles/3.2.2/
app/CMakeFiles/3.2.2/CompilerIdC/
app/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c
app/CMakeFiles/3.2.2/CompilerIdC/a.out
app/CMakeFiles/3.2.2/CMakeSystem.cmake
app/CMakeFiles/3.2.2/CompilerIdCXX/
app/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
app/CMakeFiles/3.2.2/CompilerIdCXX/a.out
app/CMakeFiles/3.2.2/CMakeDetermineCompilerABI_CXX.bin
app/CMakeFiles/3.2.2/CMakeDetermineCompilerABI_C.bin
app/CMakeFiles/3.2.2/CMakeCXXCompiler.cmake
app/CMakeFiles/3.2.2/CMakeCCompiler.cmake
app/CMakeFiles/Progress/
app/CMakeFiles/Progress/count.txt
app/CMakeFiles/Progress/1
app/CMakeFiles/feature_tests.c
app/CMakeFiles/Makefile.cmake
app/CMakeFiles/feature_tests.cxx
app/CMakeFiles/feature_tests.bin
src/
src/aLibDNN.vcxproj
src/aDNNLayer.cpp
src/CMakeLists.txt
src/aDNNLRN.cl
src/aDNNTensor.hpp
src/aDNNMatMat.cl
src/aDNNSoftMax.cl
src/aDNNInternal.hpp
src/aDNNNeuron.cl.h
src/ReadMe.txt
src/AMDnnTensor.cpp
src/aDNN.cpp
src/aDNNOCL.hpp
src/sgemm_NT.CL
src/aDNNConvBwd1.cl
src/#aDNNOCL.hpp#
src/aDNN.cl.h
src/aDNN.hpp
src/#CMakeCache.txt#
src/aDNNConvLayerWin.cpp
src/aLibDNN.sln
src/TAGS
src/aLibDNNObj.cpp
src/.#aDNNOCL.hpp
src/aDNNPoolingLayer.cpp
src/aDNNNeuron.cl
src/cmake_install.cmake
src/AMDnnImpl.cpp
src/aDNNMatOps.cl
src/Makefile
src/aDNNOCL.cpp
src/aDNNWeightsUpdate.cl.h
src/aDNN.cl
src/aDNNSoftMaxLayer.cpp
src/aLibDNNInternal.cpp
src/aDNNConv_GT32_NCHW.cl
src/aDNNConvWeightsUpdate.cl
src/aDNNInternal.cpp
src/CMakeCache.txt
src/aDNNConvLayer.cpp
src/aDNNLRNLayer.cpp
src/aDNNConv_LE32_NCHW.cl
src/aDNNFullyConnectLayer.cpp
src/aDNNNeuronLayer.cpp
src/aDNNPooling.cl
src/aDNNPoolingBwd.cl
src/AMDnn.hpp
src/AMDnn.h
src/CMakeFiles/
src/CMakeFiles/CMakeTmp/
src/CMakeFiles/cmake.check_cache
src/CMakeFiles/CMakeDirectoryInformation.cmake
src/CMakeFiles/progress.marks
src/CMakeFiles/CMakeOutput.log
src/CMakeFiles/Makefile2
src/CMakeFiles/TargetDirectories.txt
src/CMakeFiles/3.2.2/
src/CMakeFiles/3.2.2/CompilerIdC/
src/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c
src/CMakeFiles/3.2.2/CompilerIdC/a.out
src/CMakeFiles/3.2.2/CMakeSystem.cmake
src/CMakeFiles/3.2.2/CompilerIdCXX/
src/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp
src/CMakeFiles/3.2.2/CompilerIdCXX/a.out
src/CMakeFiles/3.2.2/CMakeDetermineCompilerABI_CXX.bin
src/CMakeFiles/3.2.2/CMakeDetermineCompilerABI_C.bin
src/CMakeFiles/3.2.2/CMakeCXXCompiler.cmake
src/CMakeFiles/3.2.2/CMakeCCompiler.cmake
src/CMakeFiles/Progress/
src/CMakeFiles/Progress/count.txt
src/CMakeFiles/Progress/1
src/CMakeFiles/feature_tests.c
src/CMakeFiles/Makefile.cmake
src/CMakeFiles/feature_tests.cxx
src/CMakeFiles/feature_tests.bin
src/CMakeFiles/aDNN.dir/
src/CMakeFiles/aDNN.dir/CXX.includecache
src/CMakeFiles/aDNN.dir/depend.make
src/CMakeFiles/aDNN.dir/link.txt
src/CMakeFiles/aDNN.dir/cmake_clean.cmake
src/CMakeFiles/aDNN.dir/DependInfo.cmake
src/CMakeFiles/aDNN.dir/flags.make
src/CMakeFiles/aDNN.dir/depend.internal
src/CMakeFiles/aDNN.dir/build.make
src/CMakeFiles/aDNN.dir/cmake_clean_target.cmake
src/CMakeFiles/aDNN.dir/progress.make
]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# !hd
hdparm -y /dev/sdb

/dev/sdb:
 issuing standby command
]0;root@TT: /c/AMD/MLopen/aDNNroot@TT:/c/AMD/MLopen/aDNN# exit
exit
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ man mach_ao[Kbsolute time [K[K[K[K[K[K_time
No manual entry for mach_absolute_time
thaddeus@TT:/c/AMD/MLopen/aDNN/app$ cd ../src
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ git diff ADNN[K[K[K[KaDNNInternal.hpp 
[?1h=[1mdiff --git a/aDNN/src/aDNNInternal.hpp b/aDNN/src/aDNNInternal.hpp[m[m
[1mindex a9856c6..7efde2d 100644[m[m
[1m--- a/aDNN/src/aDNNInternal.hpp[m[m
[1m+++ b/aDNN/src/aDNNInternal.hpp[m[m
[36m@@ -39,12 +39,7 @@[m [mTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND[m[m
 #include <io.h>[m[m
 #include <windows.h>[m[m
 #include <BaseTsd.h>[m[m
[31m-//#include "wintime.h"[m[m
 [m[m
[31m-#ifdef USE_RESTRICT[m[m
[31m-#else[m[m
[31m-#define restrict[m[m
[31m-#endif[m[m
 [m[m
 #define snprintf _snprintf [m[m
 #define vsnprintf _vsnprintf [m[m
[36m@@ -52,7 +47,6 @@[m [mTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND[m[m
 #define strncasecmp _strnicmp[m[m
 typedef unsigned int uint;[m[m
 [m[m
[31m-// TT: why is this defined for Windows but subtractTime below is for all[m[m
 static[m[m
 double mach_absolute_time()[m[m
 {[m[m
[36m@@ -65,21 +59,25 @@[m [mdouble mach_absolute_time()[m[m
        return(ret);[m[m
 }[m[m
 [m[m
[32m+[m[m
[32m+[m[m
 #else  // WIN32[m[m
 [m[m
[31m-#include <strings.h>   // TT: including string.h above[m[m
[32m+[m[m
[32m+[m[32m#include<strings.h>[m[m
 #include <unistd.h>[m[m
 #include <stdbool.h>[m[m
 #include <sys/time.h>[m[m
 #include <sys/resource.h>[m[m
[31m-#include <typeinfo>       // operator typeid  TT:don't need, not using RTTI[m[m
[31m-typedef  long long int __int64;  // TT: this should be in dtype.h [m[m
[32m+[m[32m#include <typeinfo>       // operator typeid[m[m
[32m+[m[32mtypedef  long long int __int64;[m[m
[32m+[m[m
 [m[m
 #endif[m[m
 [m[m
 #define __FLOAT__ float[m[m
:[K[K typedef __FLOAT__ aDType;[m[m
[31m-typedef unsigned int uint;   // TT: dtype.h [m[m
[32m+[m[32mtypedef unsigned int uint;[m[m
 [m[m
 static[m[m
 double subtractTimes(double endTime, double startTime)[m[m
[36m@@ -101,21 +99,25 @@[m [mdouble subtractTimes(double endTime, double startTime)[m[m
                conversion = 1.;[m[m
 #endif[m[m
        }[m[m
[32m+[m[m
        return conversion * (double)difference;[m[m
 }[m[m
 [m[m
 /* Include CLBLAS header. It automatically includes needed OpenCL header,[m[m
[31m-** so we can drop out explicit inclusion of cl.h header.[m[m
[32m+[m[32m* so we can drop out explicit inclusion of cl.h header.[m[m
 */[m[m
 #define WITH_CLBLAS[m[m
 #include <clBLAS.h>[m[m
 [m[m
[31m-#include "aDNNOCL.hpp"[m[m
 [m[m
[32m+[m[32m#include "aDNNOCL.hpp"[m[m
 // SET TO COMPILE any SHARED CPU/GPU code ON CPU[m[m
 #define ADNN_ACCEL 1 //_DNN_ACCEL_CPU[m[m
 [m[m
[32m+[m[m
 #include "aDNN.cl.h"[m[m
[32m+[m[m
[32m+[m[m
 #include "AMDnn.h"[m[m
 #include "AMDnn.hpp"[m[m
 #include "aDNNTensor.hpp"[m[m
[7m(END)[27m[K[K[?1l>thaddeus@TT:/c/AMD/MLopen/aDNN/src$ git diff aDNNInternal.hpp [1P[1P[1P[1P[1@m[1@e[1@r[1@g[1@e
merge: aDNNInternal.hpp - not something we can merge
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ mv aDNNINternal[K[K[K[K[K[K[Knternal.hpp aDNNInternal.hpp.NEW
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ get checkout aDNNInternal.hpp
No command 'get' found, but there are 18 similar ones
get: command not found
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ get checkout aDNNInternal.hpp[1P[1P[1@i[C[1@t
No command 'itt' found, did you mean:
 Command 'ttt' from package 'ttt' (universe)
 Command 'iat' from package 'iat' (universe)
 Command 'mtt' from package 'xawtv' (universe)
 Command 'btt' from package 'blktrace' (universe)
 Command 'idt' from package 'ncl-ncarg' (universe)
 Command 'tt' from package 'treetop' (universe)
itt: command not found
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ itt checkout aDNNInternal.hpp[1@g[C[C[1P
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ meld aDNNInternal.hpp aDNNInternal.hpp.NEW
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ cd /c/dotlands/src
bash: cd: /c/dotlands/src: No such file or directory
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ cd /d[Kc/dotland/src
thaddeus@TT:/c/dotland/src$ clear; ls -1
[3;J[H[2Jaix_main.c
appresource.h
article.c.comments
artlink.c.comments
ball.h
base.c.OLD
buffer.c.comments
colormap.c
common.h
dbmain.c.comments
define.h
DeviceData.h
devices.c
dial.c
dial.h
dialog.h
disk.c
DisplayData.h
display.h
dot
dot.151215.out
dotl.h
dots.c
dtdragdrop.c
dtpopup.c
dtype.h
dump.c
enum.h
error.c
event.c
extractGL.c
glxrender.c
image.c
image.h
initdb.c.comments
keyb.c
link.error
lnx_main.c
lnx_main.c.151201
lpfk.c
lpfk.h
main.c.prev
mainwindow.c
makefile
Makefile.dotland.lnxos
mask.h
menuette.h
node.data
path.c
pipe.c
point.h
ptrlist.c.comments
scaleref.h
serverdata.h
spaceball.c
SpaceBallDef.h
spaceball_lpfk_event.c
spacepilot.cpp
SpacePilotDef.h
sphere.c
src.list
TAGS
TargetLibraries.notes
term.c.comments
VERSION.notes
view.c
vimagefile.c
vtype.h
window.c
WindowData.h
xbox.c
xbox.c.comments
xlist.c.comments
xmain.c.comments
xmainui.c
xmenu.c
xmenu.c.comments
XMenuMain.c
xpopup.c
xscale.c
xscale.c.comments
xtext.c
xtext.h
XTextMain.c
xview.c.comments
xviewport.c
xviewui.c
xviewui.h
thaddeus@TT:/c/dotland/src$ ls [K[K[Kvi makef*[Kile
[?1049h[?1h=[1;50r[?12;25h[?12l[?25h[27m[23m[m[H[2J[?25l[50;1H"makefile" 315 lines, 14705 characters[1;1H# /c/dotland/src/makefile link to Makefile.dotland.lnxos (version 8)
# 151204 thaddeus@TT (formerly sys76, but now upgraded to ubuntu 15.10 and called TT)   dot WORKS - next TextBoo[3;1Hx and Menu
# 151120 thaddeus@sys76 - created GITserver git-server (192.168.2.129) cloned repository to /git/dotland.git
# REMOVE base.c its all in window.c now
#
# 151117 sys76: STARTED using GIT with "4.0" - currently this is a LINUX version - it does NOT support XMotionDD[8;1Hev etc
# sys76: 150630 review - integration of SpacePilot, to replace spaceball
#[8Cwhat I want to do is still be able to build for AIX, with spaceball, lpfk, but now to build with Spacee[11;1HPilot alone
#
# visor4:/c/exec/makefile.exec.lnxos,7
# 110902: 15.10 and 15.11 remove -DVLP - DSXm is working now with Focus, but still glitch in upperleft
# 110326: 15.7 has Ring.h FrameCat = 2 bins
# 110216: ProgDvlp.110214-15
# 110129: removing the -static and -shared and -dynamic in the LIB= definitiosn - see ,6, -static|shared-libgccc[18;1H no effect
# ,5 - This has -static and -shared for EACH library - THIS MAY BE WRONG - but this was how it was done with IRR[20;1HIX compiler/linker
# 110127: updated from makefile.video.lnx in /c/video
# vlp0:/v/c/test/14.8/makefile.test.aixos
# 1101071326: first version of Linux Ubuntu 10.10 (Maverick) with GCC
# root@visor4:/c/time# gcc --version
# gcc (Ubuntu/Linaro 4.4.4-14ubuntu5) 4.4.5
# Linux man page for ptheads
#   Compiling on Linux
#[7COn Linux, programs that use the Pthreads API should be compiled using cc -pthread.
#
# See vlp0 or vmux0 for previous LIB defintions
#
############################################# Linux GCC Environment ########################################

V=linux
v=.17.0
T=.lnx
l=.plst
H=TT
APP=dotland
BIN=/c/dotland/bin/
REMOTE_BIN_PATH = git-server:/c/bin
LOCAL_BIN_PATH = /c/dotland/bin
LOCAL_LIB_PATH = /c/dotland/lib
LOCAL_SRC_PATH = /c/dotland/src
3DX_INC_PATH=/c/3Dx/inc/
3DX_LIB_PATH=/c/3Dx/lib/

########################################################################################
# COMPILE[1;1H[?12l[?25h[?25l[27m[23m[m[H[2J[1;1H########################################################################################
# COMPILE
# The following is from /c/Make/makefile.notes and vlp0:/c/test/14.8/makefile.test.irxos
########################################################################################

# REMOVED -DUSE_PTHREADS (i think this was only needed for SGI)
# -traditional-cpp was to see if we can work around <iostream> (w/o .h)
# -frepo implies -fno-implicit-templates see ProgDvlp.110118
# -std=c++98
# -falt-external-templates
# -fexternal-templates
# -W
# -fPIC
C= g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates
c= gcc -mglibc -pipe -c

# FLAGS
# These compiler options are listed in three DBG levels
# Level 1 is to get things up and running (espeically the -fpermissive) with checks that make sense when portinn[20;1Hg form AIX/IRIX to Linux
# Level 2 is to get more strict, after we have some time to test and optimize (save space)
# Level 3 is all warnings
# The Flag ($F) can be concatenated.  eg F=$(C_DBG_1)$(C_DBG_2) or F=$(C_DBG_1)$(C_DBG_3) or when done, F=$(C_OO[24;1HPT)
# -Wall includes many of the -w's defined so using -Wall is a bit redundant - the -W's defined above I think shh[26;1Hould be used, so
# -Wimplicit ==  -Wimplicit-int -Wimplicit-function-declaration
# It may make more sense to use -O2 and -g2 -g1 -O1 etc with the $G option and save $F for warnings and error ff[29;1Hlags
# -Woverloaded-virtual-macros <<<-- unrecognized
C_DBG_0 = -w
C_DBG_1 = -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-frienn[33;1Hd  -Wswitch-enum -Wswitch-default -Wcast-align
C_DBG_2 = -Wextra -Weffc++ -Wfatal-errors -Wmissing-include-dirs  -Wundef -Wunused -Wunused-function -Wunused-ll[35;1Habel -Wunused-parameter -Wunused-macros -Wundef -Wlogical-op -Waggregate-return -Wredundant-decls -Wtraditionall[36;1H -Wimplicit -Wsequence-point -Wfloat-equal
C_DBG_3 = -Wall
C_OPT   = -O2

F= $(C_DBG_1) -Wno-write-strings

# 151120 : Add 3DX_DRIVER - but ... <command-line>:0:1: error: macro names must be identifiers
# SOLUTION - can not start a macro with a NUMBER - so SPACEPILOT_3DX_DRIVER will work
E= -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER
G= -DVERBOSE -fmessage-length=0 -g2 -ggdb
I= -I$(LOCAL_SRC_PATH) -I$(3DX_INC_PATH)
P= -fprofile-arcs
X= -Q -H[1;1H[?12l[?25h[?25l[27m[23m[m[H[2J[1;1HX= -Q -H

########################################################################################
# LINK
# handcrafted using /v/d/GCC.help and /oe/Atlis/DomParser/dvlp/8.2/makefile.linux.2
########################################################################################

L_OPT = -O2 -s
L_DBG = -g
L= -L$(LOCAL_LIB_PATH) -L$(3DX_LIB_PATH)

# tried: -no-shared and both -static and -shared-libgcc
# works: -static -static -m64 -o  but problem now is templates
# unsure: -fno-implicit-templates
# -Wl  <--- this was fucking things up
# --no-undefined
# -std=c++98
# -frepo
# -static
# -fPIC -m64  -rdynamic
# -static <<<--- with this we get: crtbeginT.o: relocation R_X86_64_32 against `__DTOR_END__
# The following works for dsxstub (dsxs) ...
# K=g++ -m64 -static-libgcc -std=c++98 -o
# Removing to be compliant to the video makefile : -m64 -static-libgcc -std=c++98
# Tried... -std=c++0x - nope.
K=g++ -m64 -shared-libgcc -o

############################################
# 2.2) OpenGL and Xwindows for specific OS
# replaced X_OGL_LIBS with XgLib
# for more Library combinations see makefile.IRIXtoLinux.prePurge, in /c/VpsController/dvlp and in /c/Makefiles[32;1HOpenGL_LIB =  -lGL
OGL_LIBS   =  -lGLw
# removed -shared between GLw GLU
# renamed XgLib->X_GL_LIB; XmLib->XM_LIB; XT_LIB->XT_ext_LIB  (VpsController uses XT_LIB
X_GL_LIB   =  -lGLw -lGLU -lXm -lXt -lGL -lX11 -lXext -lXi
XT_ext_LIB =  -lXm -lXt -lX11 -lXext
XM_LIB     =  -lXm -lXt -lX11
ThrdLib    =  -lpthread
MiLib      =  -lmil
VideoLib   =  -lthrd -levent -lvid -lpix -lerror -ltime
VpsLib     =  -lthrd -lmesg -lsock -levent -lstrip -lerror -ltime
VpsVidLib  =  -lthrd -lmesg -lsock -levent -lvid -lcmprs -lstrip -lpix -lerror -ltime
VpsVidStub =  -lthrd -lmesg -lsock -levent -lvidstub -lcmprs -lstrip -lpix -lerror -ltime
XVpsVidLib =  -lthrd -lmesg -lsock -levent -lstrip -lvid -lpix -lxvw -ldot -lmath
OsLib      =  -lerror -ltime -lthrd -lvid

# IRIX/AIX
#-L /usr/lib -lglut -L/usr/X11R6/lib -lGLU -lGL -lXmu -lXext -lX11 -lm[1;1H[?12l[?25h[?25l[27m[23m[m[H[2J[1;1H# IRIX/AIX
#-L /usr/lib -lglut -L/usr/X11R6/lib -lGLU -lGL -lXmu -lXext -lX11 -lm
# also -L/usr/lib64

###################################################################################################
# 7) FINAL SETS
# - these are used directly in the TARGETS section
# - so for each target there can be at most one of these CL|SL|VL|XCL|XCVL|CVL
# CL and SL have not been tesed yet (040421) currently porting the video (VL)
# if you get crt0.a is -032 its because the SGI_XT_LIBS needs to FOLLOW VpsLib (050720)
# 110119 replaced DmLib-->MiLib
################################################################################


#################################### Target and Parent OBJS ########################################

# Component Object Sets
common_include = define.h dtype.h mask.h enum.h # errorstring.h path.h protocol.h
common[9C= error.o dump.o # reporterror.o

# where path.o
pipe_code      = pipe.o
tcp_code[7C= connect.o cmnsock.o
icp[12C= $(pipe_code)


# 151125 adding dial disk
model_code      = dots.o disk.o sphere.o

# base.c --> window.c
# 151125 what about xpopup xbox xmainui xviewui
xmotif_code    = xmenu.o xscale.o xtext.o
xt_code[8C= window.o colormap.o # mainwindow.o
render[9C= xviewport.o glxrender.o extractGL.o
gui[12C= $(xt_code) $(xmotif_code)

# SpaceBall, Dials and LPFK (Lighted Programmable Function Keys)
# This only runs on the AIX platform
# removed disk.o 151125 but added model_code to *_code_set
aix_devices    = keyb.o spaceball.o dial.o lpfk.o spaceball_lpfk_event.o
aix_executive  = aix_main.o

# SpacePilot
# The space pilot is a six-degree of freedome device, like the spaceball, but connects through USB and has moree[45;1H buttons
# there are 4 programmable buttons (top), which need to be mapped to the Menu and Textbox
# There are 5 buttons to the left which add: ESCape, SHIFT, ConTRol, and ALTernate.  A fifth Menu pops up a conn[48;1Hfig menu
# The config menu allows one to assign functions to these buttons.  The ESC,SHFT,CTRL,ALT can be selected in th[49;1H[94m@                                                                                                              [1;1H[?12l[?25h[?25l[1;49r[m[1;1H[45M[1;50r[4;1H# The config menu allows one to assign functions to these buttons.  The ESC,SHFT,CTRL,ALT can be selected in thh[5;1He eventloop
# The 5 buttons on the right side control/lock off different axii adn sensitivity or provide calles to show Topp[7;1H,Front,Right
# views.  I can't seem to get these to be detected.  For DX (OpenDX, aka DataExplorer) the T,F,R should be mappp[9;1Hed to to to
# those views in the AutoCamera (or other module used in Image).  The Fit button (fifth button on right) shouldd[11;1H be mapped
# to reset in OpenDX.
# The original dotland code.  main.o has been branched to aix_main (for spaceball) and lnx_main (for spacepilott[14;1H)
# I think I can resue the disk and keyb objects unchanged
# The orginal event.c file has been branched to spaceball_lpfk_event and spacepilot_event
# The SpacePilot and Lnx versions have the LPFK and Dials sections gutted and the SpaceBall (aka Ball) sectionss[18;1H have been
# replaced by the SpacePilot code.
# The test versions of SpacePilot code are found in /c/3Dx on sys76.
# [150701] may bave to break up spaceball into spaceball device code and ball code the ball is the sphere in thh[22;1He image and
# that still need to be maintained/updated, but don't want to link in any spaceball device code.
# [151120] spacepilot.cpp is a 'development version' of spacepilotlib.cpp (SpacePilotLib.cpp)
# The lib version lives in /c/3Dx/src and is (will be) used to build the lib???.a file which will be linked intt[26;1Ho dotland
# This (building the lib) has to be done

# [150702] broke lnx_main up into view.c and devices.c <<<--- don't need devices.c for LNX version (SpacePilot)[30;1Hlnx_executive  = lnx_main.o view.o

# there are some functions used from spaceball.c (formerly ball) and dials.c
# REFACTOR spaceball -> ball_device ball_model   dials -> dial_device, dial_model
lnx_devices    = spaceball.o spacepilot.o event.o dial.o lpfk.o

aix_code_set   = $(aix_executive) $(aix_devices) $(gui) $(icp) $(common) $(model_code)
lnx_code_set   = $(lnx_executive) $(lnx_devices) $(gui) $(icp) $(model_code) $(common)

# The specific targets - add to all: line
dot : $(lnx_code_set)[41;9H$K dot $E $F $G $(lnx_code_set) $I $L $(XgLib)

aix : $(aix_code_set)[44;9H$K dot.aix $E $F $G $(aix_code_set) $L $(XgLib)

xm   : xmenu.o xscale.o[47;9H$K xmenu$T $E $F $G xmenu.o xscale.o $(XmLib)

xmenu: XMenuMain.o xmenu.o xscale.o disk.o error.o[1;1H[?12l[?25h[?25l[27m[23m[m[H[2J[2;1Hxmenu: XMenuMain.o xmenu.o xscale.o disk.o error.o[3;9H$K xmmenu$T $E $F $G XMenuMain.o xmenu.o xscale.o disk.o error.o  $(XgLib)

xscale: xscale.c[6;9H$K xmscale$T $E $F $G -DSTANDALONE xscale.o  $(XmLib)

xtext: XTextMain.o xtext.o[9;9H$K xmtext$T $E $F $G XTextMain.o xtext.o  $(XmLib)

xview: xviewui.o[12;9H$K xmview$T $E $F $Gxviewui.o  -I/usr/dt/include -DSTANDALONE $(XgLib) # -lDtWidget

# LINUX
# NEW (2015) SpacePILOT take the place of SpaceBall (no dials or lpfk here)
# Need to build with lnx_main.cpp
# The specific components for the SpacePilot  (new version 4.0 151117 @ LodgeLab )
# The spacepilot.c should be 'merged' back into SpacePilotLib.cpp in /c/3Dx to build the lib3DX.a
spacepilot.o[12C: spacepilot.cpp  $(common_incl) $(3DX_INC_PATH)SpacePilotLib.hpp[7C; $C $E $F $G $$[20;1HI $<
lnx_main.o[14C: lnx_main.c      $(common_incl) $(3DX_INC_PATH)SpacePilotLib.hpp[7C; $C $E $F $G $$[22;1HI $<

# Currently only spacepilot_event will work with app (process_X_event) has a new signature.
# 151210 Renamed (back) to event.c from spacepilot_event.c
event.o[17C: event.c $(common_incl) $(3DX_INC_PATH)SpacePilotLib.hpp[15C; $C $E $F $G $$[27;1HI $<

# AIX
# Original (1999) SpaceBall LPFK and Dials - need to build with aix_main.o
# The specific components for SpaceBALL, LPFK, and Dials, used as in necessary from list of 'component objects  [32;1Hsets'
spaceball_lpfk_event.o  : spaceball_lpfk_event.c $(common_incl) display.h[23C; $C $E $F $G $$[34;1H<
aix_main.o[14C: aix_main.c    $(common_incl) dial.h[35C; $C $E $F $G $$[36;1H<

# This is really only needed with SpaceBall, Dial, LPFK (that is on AIX) since they use X-Extensions - not partt[39;1H of SpacePilot
devices.o[15C: devices.c  $(common_incl)     ; $C $E $F $G $<

# COMMON - the translateMotion in spacepilotlib conversts 3DxConnection ClientMessage into an XDeviceMotionEvenn[43;1Ht so that
# we may use spaceball and other lower level methods to render to the screen
spaceball.o[13C: spaceball.c  $(common_incl)[43C; $C $E $F $G $$[46;1H<

# This takes input from SpacePilot or SpaceBall
sphere.o   : sphere.c   $(common_incl)[18C; $C $E $F $G $<[1;1H[?12l[?25h[?25l[27m[23m[m[H[2J[1;1H# This takes input from SpacePilot or SpaceBall
sphere.o   : sphere.c   $(common_incl)[18C; $C $E $F $G $<
colormap.o : colormap.c $(common_incl)[18C; $C $E $F $G $<
dial.o     : dial.c     $(common_incl) dial.h[11C; $C $E $F $G $<
error.o    : error.c    $(common_incl)[18C; $C $E $F $G $<
base.o     : base.c     $(common_incl)[18C; $C $E $F $G $<
disk.o     : disk.c     $(common_incl) dial.h ball.h    ; $C $E $F $G $<
keyb.o     : keyb.c     $(common_incl)[18C; $C $E $F $G $<
window.o   : window.c   $(common_incl)[18C; $C $E $F $G $<
view.o     : view.c     $(common_incl)[18C; $C $E $F $G $<

# version 1.3 addition of XMotif interface
# xscale is controlled by xmenu
xscale.o    : xscale.c dtype.h define.h[17C; $C $(Xinc) $E $F $G -fpermissive xscale.c
xmenu.o     : xmenu.c[35C; $C $(Xinc) $E $F $G -fpermissive xmenu.c
XMenuMain.o : XMenuMain.c[31C; $C $(Xinc) $E $F $G -fpermissive XMenuMain.c

# version 1.4 addition of pipe and spawned process
pipe.o      : pipe.c define.h dtype.h mask.h[12C; $C $E $F $G $<

# version 1.5
# merged dial events onto xwindow for ball
# addtion of dotland and multile function modes
# 151125 replaced ball.h with sphere.h
dots.o      : dots.c dotl.h  $(common_incl)[13C; $C $E $F $G $<

# version 1.6.4
# added LPFK input extension device support (990310)
lpfk.o      : lpfk.c lpfk.h define.h dtype.h display.h   ; $C $E $F $G $<

# version 1.7.1
dump.o      : dump.c define.h dtype.h WindowData.h DeviceData.h ; $C $E $F $G $<

# version 1.7.1 the xtext is an xmainwindow standalone app that displays
# data about a node -
# DEMO - currently this reads from ../node.data
xtext.o     : xtext.c xtext.h[27C; $C xtext.c $E $F $G -fpermissive $<
XTextMain.o : XTextMain.c[31C; $C XTextMain.c $E $F $G -fpermissive $<

# version 1.8.2 stating the Xviewport which will hold the OpenGL viewport
xviewui.o   : xviewui.c xviewui.h[23C; $C xviewui.c $E $F $G $(Xinc)

# The main target (when make is run without an argument, is the first one detected, ie 'all')
likenew     : clean fresh dot

# utilities
install     : $(APP)$T[48;17Hstrip $(APP)$T[49;17H/bin/cp -p $(APP)$T $/usr/local/bin[1;1H[?12l[?25h[?25l[27m[23m[m[H[2J[1;17Hstrip $(APP)$T[2;17H/bin/cp -p $(APP)$T $/usr/local/bin

clean:[5;9H/bin/rm -f *.o[6;9H/bin/rm -f *~   # emacs

fresh:[9;9Hclear; clear > /dev/pts/1

run:[12;9Hdotl.aix > /dev/pts/1

runsilent:[15;9Hdotl.aix > /dev/null

# end


[94m~                                                                                                              [21;1H~                                                                                                              [22;1H~                                                                                                              [23;1H~                                                                                                              [24;1H~                                                                                                              [25;1H~                                                                                                              [26;1H~                                                                                                              [27;1H~                                                                                                              [28;1H~                                                                                                              [29;1H~                                                                                                              [30;1H~                                                                                                              [31;1H~                                                                                                              [32;1H~                                                                                                              [33;1H~                                                                                                              [34;1H~                                                                                                              [35;1H~                                                                                                              [36;1H~                                                                                                              [37;1H~                                                                                                              [38;1H~                                                                                                              [39;1H~                                                                                                              [40;1H~                                                                                                              [41;1H~                                                                                                              [42;1H~                                                                                                              [43;1H~                                                                                                              [44;1H~                                                                                                              [45;1H~                                                                                                              [46;1H~                                                                                                              [47;1H~                                                                                                              [48;1H~                                                                                                              [49;1H~                                                                                                              [1;17H[?12l[?25h[?25l[50;1H[m:[?12l[?25hq[?25l[50;1H[K[50;1H[?1l>[?12l[?25h[?1049lthaddeus@TT:/c/dotland/src$ cp makefile /c/AMD/MLp[Kopen/aDNN/src/makefile.a[KaDD[KNN[K[K[K[Klib.[K
thaddeus@TT:/c/dotland/src$ clear
[3;J[H[2Jthaddeus@TT:/c/dotland/src$ ls [K[K[Kcd /c/AMD/MLopen/aDNN/src
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ ls 
aDNN.cl			   aDNN.hpp		 aDNNOCL.hpp		 AMDnn.h
aDNN.cl.h		   aDNNInternal.cpp	 aDNNPoolingBwd.cl	 AMDnn.hpp
aDNNConvBwd1.cl		   #aDNNInternal.hpp#	 aDNNPooling.cl		 AMDnnImpl.cpp
aDNNConv_GT32_NCHW.cl	   aDNNInternal.hpp	 aDNNPoolingLayer.cpp	 AMDnnTensor.cpp
#aDNNConvLayer.cpp#	   aDNNInternal.hpp.NEW  aDNNSoftMax.cl		 #CMakeCache.txt#
aDNNConvLayer.cpp	   aDNNLayer.cpp	 aDNNSoftMaxLayer.cpp	 CMakeCache.txt
aDNNConvLayerWin.cpp	   aDNNLRN.cl		 aDNNTensor.hpp		 CMakeFiles
aDNNConv_LE32_NCHW.cl	   aDNNLRNLayer.cpp	 aDNNWeightsUpdate.cl.h  cmake_install.cmake
aDNNConv_NCHW_N3.cl	   aDNNMatMat.cl	 aLibDNNInternal.cpp	 CMakeLists.txt
aDNNConvWeightsUpdate.cl   aDNNMatOps.cl	 aLibDNNObj.cpp		 Makefile
aDNNConv_Win2x2_NCHW.cl    aDNNNeuron.cl	 aLibDNN.sdf		 makefile.lib
aDNNConv_Win4x4_NCHW.cl    aDNNNeuron.cl.h	 aLibDNN.sln		 makefile.lib~
aDNNConv_Win_NCHW.cl	   aDNNNeuronLayer.cpp	 aLibDNN.VC.opendb	 ReadMe.txt
aDNN.cpp		   aDNNOCL.cpp		 aLibDNN.vcxproj	 sgemm_NT.CL
aDNNFullyConnectLayer.cpp  #aDNNOCL.hpp#	 aLibDNN.vcxproj.user	 TAGS
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ mv Makefile Maf[Kkefile.fromCMake
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ ln makefile.lib makefile
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make [Kthaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  aDNNConvLayer.cpp
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[KaDNNOCL.hpp:22:27:[m[K [01;31m[Kfatal error: [m[KaLibsCLUtil.hpp: No such file or directory
compilation terminated.
# cc1plus 0.07 0.01
# as 0.00 0.00
makefile:109: recipe for target 'aDNNConvLayer.o' failed
make: *** [aDNNConvLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ find /c/AMD - a[K[Kname aLibsCLUtil.hpp
/c/AMD/Include/aDNN/BAK/aLibsCLUtil.hpp
/c/AMD/Include/aDNN/aLibsCLUtil.hpp
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ find /c/AMD -name aLibsCLUtil.hppmake lib[K
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  aDNNConvLayer.cpp
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[KaDNNOCL.hpp:22:27:[m[K [01;31m[Kfatal error: [m[KaLibsCLUtil.hpp: No such file or directory
compilation terminated.
# cc1plus 0.07 0.01
# as 0.00 0.00
makefile:109: recipe for target 'aDNNConvLayer.o' failed
make: *** [aDNNConvLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  aDNNConvLayer.cpp
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[KaDNNOCL.hpp:22:27:[m[K [01;31m[Kfatal error: [m[KaLibsCLUtil.hpp: No such file or directory
compilation terminated.
# cc1plus 0.06 0.01
# as 0.00 0.00
makefile:109: recipe for target 'aDNNConvLayer.o' failed
make: *** [aDNNConvLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN aDNNConvLayer.cpp
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:63:31:[m[K [01;31m[Kfatal error: [m[KSDKUtil/SDKUtil.hpp: No such file or directory
compilation terminated.
# cc1plus 0.09 0.01
# as 0.00 0.00
makefile:109: recipe for target 'aDNNConvLayer.o' failed
make: *** [aDNNConvLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ ls /[K/c/AMD/Include
aDNN  AMDSDK  clBLAS  pthread.cpp  pthread.h
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ ls /c/AMD/Include/AMDSDK
CL  GL	README.Include.AMDSDK  README.Include.AMDSDK~  SDKUtil
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ ls /c/AMD/Include/AMDSDK[K[9Pmake lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNConvLayer.cpp
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:83:0:[m[K [01;35m[Kwarning: [m[K"CHECK_ALLOCATION" redefined
 #define CHECK_ALLOCATION(actual, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:63:0[m[K,
                 from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/SDKUtil/SDKUtil.hpp:82:0:[m[K [01;36m[Knote: [m[Kthis is the location of the previous definition
 #define CHECK_ALLOCATION(actual, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:91:0:[m[K [01;35m[Kwarning: [m[K"CHECK_ERROR" redefined
 #define CHECK_ERROR(actual, reference, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:63:0[m[K,
                 from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/SDKUtil/SDKUtil.hpp:90:0:[m[K [01;36m[Knote: [m[Kthis is the location of the previous definition
 #define CHECK_ERROR(actual, reference, msg) \
[01;32m[K ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNConvLayer.cpp:18[m[K:
[01m[KaDNN.hpp:22:21:[m[K [01;31m[Kfatal error: [m[KaLibDNN.h: No such file or directory
compilation terminated.
# cc1plus 0.08 0.00
makefile:110: recipe for target 'aDNNConvLayer.o' failed
make: *** [aDNNConvLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  aDNN.cpp
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNN.cpp:18[m[K:
[01m[KaDNNOCL.hpp:22:27:[m[K [01;31m[Kfatal error: [m[KaLibsCLUtil.hpp: No such file or directory
compilation terminated.
# cc1plus 0.06 0.01
makefile:114: recipe for target 'aDNN.o' failed
make: *** [aDNN.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make libls /c/AMD/Include/AMDSDK[K[9Pmake libfind /c/AMD -name aLibsCLUtil.hppmake lib[K
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNN.cpp
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNN.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:83:0:[m[K [01;35m[Kwarning: [m[K"CHECK_ALLOCATION" redefined
 #define CHECK_ALLOCATION(actual, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:63:0[m[K,
                 from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNN.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/SDKUtil/SDKUtil.hpp:82:0:[m[K [01;36m[Knote: [m[Kthis is the location of the previous definition
 #define CHECK_ALLOCATION(actual, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNN.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:91:0:[m[K [01;35m[Kwarning: [m[K"CHECK_ERROR" redefined
 #define CHECK_ERROR(actual, reference, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:63:0[m[K,
                 from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNN.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/SDKUtil/SDKUtil.hpp:90:0:[m[K [01;36m[Knote: [m[Kthis is the location of the previous definition
 #define CHECK_ERROR(actual, reference, msg) \
[01;32m[K ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNN.cpp:18[m[K:
[01m[KaDNN.hpp:22:21:[m[K [01;31m[Kfatal error: [m[KaLibDNN.h: No such file or directory
compilation terminated.
# cc1plus 0.10 0.00
# as 0.00 0.01
makefile:114: recipe for target 'aDNN.o' failed
make: *** [aDNN.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ meld /c/AMD/Include/aD[K[KSDKU[K[K[K[KAMDSK[KDK/SDKUtil/SK[KDKUtil.hpp /c/AMD/Include/aDNN/al[KLibsUtil.hpp 
^Z
[1]+  Stopped                 meld /c/AMD/Include/AMDSDK/SDKUtil/SDKUtil.hpp /c/AMD/Include/aDNN/aLibsUtil.hpp
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ cat [K[K[K[Kfgrep aLI[KibsUtil.hpp *.cpp *.hpp
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ cd /c/AMD/i[KInclude/aDNN
thaddeus@TT:/c/AMD/Include/aDNN$ cd /c/AMD/Include/aDNNfgrep aLibsUtil.hpp *.cpp *.hpp
grep: *.cpp: No such file or directory
Binary file aLibsCLUtil.hpp matches
thaddeus@TT:/c/AMD/Include/aDNN$ ls ../AMDSDK/SDKUtil 
BoltAMPUtil.hpp  BoltCLUtil.hpp  CLUtil.hpp  OpenCVUtil.hpp  SDKBitMap.hpp  SDKFile.hpp  SDKThread.hpp	SDKUtil.hpp
thaddeus@TT:/c/AMD/Include/aDNN$ make lib
make: *** No rule to make target 'lib'.  Stop.
thaddeus@TT:/c/AMD/Include/aDNN$ cd src
bash: cd: src: No such file or directory
thaddeus@TT:/c/AMD/Include/aDNN$ make [K[K[K[K[Kcd -
/c/AMD/MLopen/aDNN/src
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNFullyConnectLayer.cpp
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:83:0:[m[K [01;35m[Kwarning: [m[K"CHECK_ALLOCATION" redefined
 #define CHECK_ALLOCATION(actual, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:63:0[m[K,
                 from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/SDKUtil/SDKUtil.hpp:82:0:[m[K [01;36m[Knote: [m[Kthis is the location of the previous definition
 #define CHECK_ALLOCATION(actual, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23:0[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:91:0:[m[K [01;35m[Kwarning: [m[K"CHECK_ERROR" redefined
 #define CHECK_ERROR(actual, reference, msg) \
[01;32m[K ^[m[K
In file included from [01m[K/c/AMD/Include/aDNN/aLibsUtil.hpp:63:0[m[K,
                 from [01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:23[m[K,
                 from [01m[KaDNNOCL.hpp:22[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/SDKUtil/SDKUtil.hpp:90:0:[m[K [01;36m[Knote: [m[Kthis is the location of the previous definition
 #define CHECK_ERROR(actual, reference, msg) \
[01;32m[K ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:22:21:[m[K [01;31m[Kfatal error: [m[KaLibDNN.h: No such file or directory
compilation terminated.
# cc1plus 0.07 0.01
makefile:116: recipe for target 'aDNNFullyConnectLayer.o' failed
make: *** [aDNNFullyConnectLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNFullyConnectLayer.cpp
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:22:21:[m[K [01;31m[Kfatal error: [m[KaLibDNN.h: No such file or directory
compilation terminated.
# cc1plus 0.08 0.02
# as 0.01 0.00
makefile:116: recipe for target 'aDNNFullyConnectLayer.o' failed
make: *** [aDNNFullyConnectLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ ls
aDNN.cl		       aDNNConv_LE32_NCHW.cl	 aDNNFullyConnectLayer.cpp  aDNNLRN.cl		 aDNNOCL.cpp	       aDNNSoftMaxLayer.cpp    aLibDNN.VC.opendb     #CMakeCache.txt#	  makefile.lib
aDNN.cl.h	       aDNNConv_NCHW_N3.cl	 aDNN.hpp		    aDNNLRNLayer.cpp	 #aDNNOCL.hpp#	       aDNNTensor.hpp	       aLibDNN.vcxproj	     CMakeCache.txt	  makefile.lib~
aDNNConvBwd1.cl        aDNNConvWeightsUpdate.cl  aDNNInternal.cpp	    aDNNMatMat.cl	 aDNNOCL.hpp	       aDNNWeightsUpdate.cl.h  aLibDNN.vcxproj.user  CMakeFiles		  ReadMe.txt
aDNNConv_GT32_NCHW.cl  aDNNConv_Win2x2_NCHW.cl	 #aDNNInternal.hpp#	    aDNNMatOps.cl	 aDNNPoolingBwd.cl     aLibDNNInternal.cpp     AMDnn.h		     cmake_install.cmake  sgemm_NT.CL
#aDNNConvLayer.cpp#    aDNNConv_Win4x4_NCHW.cl	 aDNNInternal.hpp	    aDNNNeuron.cl	 aDNNPooling.cl        aLibDNNObj.cpp	       AMDnn.hpp	     CMakeLists.txt	  TAGS
aDNNConvLayer.cpp      aDNNConv_Win_NCHW.cl	 aDNNInternal.hpp.NEW	    aDNNNeuron.cl.h	 aDNNPoolingLayer.cpp  aLibDNN.sdf	       AMDnnImpl.cpp	     makefile
aDNNConvLayerWin.cpp   aDNN.cpp			 aDNNLayer.cpp		    aDNNNeuronLayer.cpp  aDNNSoftMax.cl        aLibDNN.sln	       AMDnnTensor.cpp	     Makefile.fromCMake
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ fidn [K[K[Knd /c/a[KAMD -name aLibDNN.h[K[K*""aLibDNN*"
/c/AMD/MLopen/aDNN/app/aLibDNNDriver.cpp
/c/AMD/MLopen/aDNN/app/aLibDNNDriver.vcxproj
/c/AMD/MLopen/aDNN/app/CMakeFiles/aDNNdriver.lnx.dir/aLibDNNDriver.cpp.o
/c/AMD/MLopen/aDNN/src/aLibDNN.vcxproj
/c/AMD/MLopen/aDNN/src/aLibDNN.vcxproj.user
/c/AMD/MLopen/aDNN/src/aLibDNN.sdf
/c/AMD/MLopen/aDNN/src/aLibDNN.sln
/c/AMD/MLopen/aDNN/src/aLibDNNObj.cpp
/c/AMD/MLopen/aDNN/src/aLibDNN.VC.opendb
/c/AMD/MLopen/aDNN/src/aLibDNNInternal.cpp
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ find /c/AMD -name aLibDNN.h 
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ find /c/AMD -name aLibDNN.h "aLibDNN*"ls[Kmake lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNFullyConnectLayer.cpp
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:23:23:[m[K [01;31m[Kfatal error: [m[KaLibDNN.hpp: No such file or directory
compilation terminated.
# cc1plus 0.07 0.01
makefile:116: recipe for target 'aDNNFullyConnectLayer.o' failed
make: *** [aDNNFullyConnectLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make libfind /c/AMD -name aLibDNN.h [Kpp
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ find /c/AMD -name aLibDNN.hpp
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ find /c/AMD -name aLibDNN.hppmake lib[K
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNFullyConnectLayer.cpp
In file included from [01m[KaDNNFullyConnectLayer.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeFullyConnect::VerifyFwd()[m[K’:
[01m[KaDNNFullyConnectLayer.cpp:470:21:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
   double max_err = -FLT_MIN;
[01;32m[K                     ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeFullyConnect::ConstructBwd()[m[K’:
[01m[KaDNNFullyConnectLayer.cpp:601:60:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
    int min_n_mt = min(n_mt_out_pix_horiz, n_mt_out_pix_vert);
[01;32m[K                                                            ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:601:60:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNFullyConnectLayer.cpp:18[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeFullyConnect::RunHostBwd()[m[K’:
[01m[KaDNNFullyConnectLayer.cpp:869:18:[m[K [01;31m[Kerror: [m[K‘[01m[KADNN_MM_TRANSPOSE[m[K’ was not declared in this scope
    int a_flags = ADNN_MM_TRANSPOSE;
[01;32m[K                  ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:890:4:[m[K [01;31m[Kerror: [m[K‘[01m[KADNN_mm_cpu[m[K’ was not declared in this scope
    ADNN_mm_cpu<aDType>(a_ptr, a_cols, a_rows, a_stride, a_flags,
[01;32m[K    ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:890:22:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K>[m[K’ token
    ADNN_mm_cpu<aDType>(a_ptr, a_cols, a_rows, a_stride, a_flags,
[01;32m[K                      ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:922:4:[m[K [01;31m[Kerror: [m[K‘[01m[KADNN_mm_cpu[m[K’ was not declared in this scope
    ADNN_mm_cpu<aDType>(a_ptr, a_cols, a_rows, a_stride, a_flags,
[01;32m[K    ^[m[K
[01m[KaDNNFullyConnectLayer.cpp:922:22:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K>[m[K’ token
    ADNN_mm_cpu<aDType>(a_ptr, a_cols, a_rows, a_stride, a_flags,
[01;32m[K                      ^[m[K
# cc1plus 0.77 0.08
# as 0.00 0.00
makefile:116: recipe for target 'aDNNFullyConnectLayer.o' failed
make: *** [aDNNFullyConnectLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNInternal.cpp
In file included from [01m[KaDNNInternal.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNInternal.cpp:[m[K In member function ‘[01m[Kadnn::aDNNode* adnn::ADNN::AddNode(const adnn_node_parameters&)[m[K’:
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_GENERIC[m[K’ not handled in switch [-Wswitch-enum]
    switch (node_descr.type)
[01;32m[K           ^[m[K
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_NET[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_CONV_LOCAL[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_DROPOUT[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_COST_SOFTMAX[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_COST_LOGREG[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_ELEMSUM[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_ELEMMAX[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaDNNInternal.cpp:94:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_LAYER_TOTAL[m[K’ not handled in switch [-Wswitch-enum]
# cc1plus 0.75 0.07
# as 0.00 0.01
makefile:117: recipe for target 'aDNNInternal.o' failed
make: *** [aDNNInternal.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNLayer.cpp
In file included from [01m[KaDNNLayer.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNLayer.cpp:[m[K In member function ‘[01m[Kint adnn::aDNNode::init(const adnn_node_parameters&)[m[K’:
[01m[KaDNNLayer.cpp:386:75:[m[K [01;31m[Kerror: [m[K‘[01m[K_getcwd[m[K’ was not declared in this scope
   generic_comp_otions_ = std::string(" -I ") + std::string(_getcwd(NULL, 0)) + std::string("\\..\\aLibDNN\\ ");
[01;32m[K                                                                           ^[m[K
[01m[KaDNNLayer.cpp:[m[K In member function ‘[01m[Kint adnn::aDNNode::calculateUpdateRates(aDType&, aDType&, bool)[m[K’:
[01m[KaDNNLayer.cpp:973:104:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[KgetLearningRate(const adnn_lr_policy_params&, size_t&)[m[K’
   double global_rate = (isNet()) ? getLearningRate<double>(getNet().getLearningParams(weights), counter) : 1;
[01;32m[K                                                                                                        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:95:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _T> _T adnn::getLearningRate(adnn_lr_policy_params&, size_t)
  _T getLearningRate(adnn_lr_policy_params & l_policy, size_t counter) {
[01;32m[K     ^[m[K
[01m[KaDNN.hpp:95:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KaDNNLayer.cpp:973:86:[m[K [01;36m[Knote: [m[K  cannot convert ‘[01m[K(& adnn::aDNNode::getNet())->adnn::ADNN::<anonymous>.adnn::aDNNode::getLearningParams(((int)weights))[m[K’ (type ‘[01m[Kconst adnn_lr_policy_params {aka const _adnn_lr_policy_params}[m[K’) to type ‘[01m[Kadnn_lr_policy_params& {aka _adnn_lr_policy_params&}[m[K’
   double global_rate = (isNet()) ? getLearningRate<double>(getNet().getLearningParams(weights), counter) : 1;
[01;32m[K                                                                                      ^[m[K
[01m[KaDNNLayer.cpp:975:82:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[KgetLearningRate(const adnn_lr_policy_params&, size_t&)[m[K’
   double local_rate = getLearningRate<double>(getLearningParams(weights), counter);
[01;32m[K                                                                                  ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLayer.cpp:18[m[K:
[01m[KaDNN.hpp:95:5:[m[K [01;36m[Knote: [m[Kcandidate: template<class _T> _T adnn::getLearningRate(adnn_lr_policy_params&, size_t)
  _T getLearningRate(adnn_lr_policy_params & l_policy, size_t counter) {
[01;32m[K     ^[m[K
[01m[KaDNN.hpp:95:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KaDNNLayer.cpp:975:64:[m[K [01;36m[Knote: [m[K  cannot convert ‘[01m[Kadnn::aDNNode::getLearningParams(((int)weights))[m[K’ (type ‘[01m[Kconst adnn_lr_policy_params {aka const _adnn_lr_policy_params}[m[K’) to type ‘[01m[Kadnn_lr_policy_params& {aka _adnn_lr_policy_params&}[m[K’
   double local_rate = getLearningRate<double>(getLearningParams(weights), counter);
[01;32m[K                                                                ^[m[K
# cc1plus 0.85 0.06
# as 0.00 0.00
makefile:119: recipe for target 'aDNNLayer.o' failed
make: *** [aDNNLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK AMDnnImpl.cpp
In file included from [01m[KAMDnnImpl.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnImpl.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KAMDnnImpl.cpp:[m[K In function ‘[01m[Kvoid* ADNNLibCreate(const adnn_lib_parameters*)[m[K’:
[01m[KAMDnnImpl.cpp:195:27:[m[K [01;31m[Kerror: [m[K‘[01m[KADNNLibCreate[m[K’ is not a member of ‘[01m[Kadnn[m[K’
  adnn::ADNNLib * newLib = adnn::ADNNLibCreate(l_context, l_accel_type, l_accel_p, l_kern_p);
[01;32m[K                           ^[m[K
[01m[KAMDnnImpl.cpp:195:27:[m[K [01;36m[Knote: [m[Ksuggested alternative:
[01m[KAMDnnImpl.cpp:188:10:[m[K [01;36m[Knote: [m[K  ‘[01m[KADNNLibCreate[m[K’
 alib_obj ADNNLibCreate(const adnn_lib_parameters * lib_params)
[01;32m[K          ^[m[K
[01m[KAMDnnImpl.cpp:[m[K In function ‘[01m[Kint ADNNLibDestroy(void**)[m[K’:
[01m[KAMDnnImpl.cpp:205:2:[m[K [01;31m[Kerror: [m[K‘[01m[KADNNLibDestroy[m[K’ is not a member of ‘[01m[Kadnn[m[K’
  adnn::ADNNLibDestroy((adnn::ADNNLib *)*alib);
[01;32m[K  ^[m[K
[01m[KAMDnnImpl.cpp:205:2:[m[K [01;36m[Knote: [m[Ksuggested alternative:
[01m[KAMDnnImpl.cpp:201:5:[m[K [01;36m[Knote: [m[K  ‘[01m[KADNNLibDestroy[m[K’
 int ADNNLibDestroy(alib_obj * alib)
[01;32m[K     ^[m[K
[01m[KAMDnnImpl.cpp:[m[K In function ‘[01m[Kint ADNNLibInspect(alib_obj, ADNNLIB_INSPECT, size_t*, void*)[m[K’:
[01m[KAMDnnImpl.cpp:222:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNNLIB_INSPECT_PARAMS[m[K’ not handled in switch [-Wswitch-enum]
   switch (cause)
[01;32m[K          ^[m[K
[01m[KAMDnnImpl.cpp:222:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNNLIB_INSPECT_VERSION[m[K’ not handled in switch [-Wswitch-enum]
[01m[KAMDnnImpl.cpp:222:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNNLIB_INSPECT_TOTAL[m[K’ not handled in switch [-Wswitch-enum]
[01m[KAMDnnImpl.cpp:[m[K In function ‘[01m[Kint ADNNodeInspect(anode_obj, ADNNODE_INSPECT, size_t*, void*)[m[K’:
[01m[KAMDnnImpl.cpp:601:47:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%d[m[K’ expects argument of type ‘[01m[Kint[m[K’, but argument 2 has type ‘[01m[Ksize_t {aka long unsigned int}[m[K’ [-Wformat=]
    printf("ERROR: incorrect size: %d\n", *size);
[01;32m[K                                               ^[m[K
[01m[KAMDnnImpl.cpp:575:9:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNNODE_INSPECT_TOTAL[m[K’ not handled in switch [-Wswitch-enum]
  switch (cause)
[01;32m[K         ^[m[K
# cc1plus 0.80 0.07
# as 0.00 0.00
makefile:127: recipe for target 'AMDnnImpl.o' failed
make: *** [AMDnnImpl.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNLRNLayer.cpp
In file included from [01m[KaDNNLRNLayer.cpp:17:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNLRNLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeLRN::RunHostFwd()[m[K’:
[01m[KaDNNLRNLayer.cpp:559:61:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
         int hend = min(hstart + local_area, bot_height + pad);
[01;32m[K                                                             ^[m[K
[01m[KaDNNLRNLayer.cpp:559:61:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNLRNLayer.cpp:562:31:[m[K [01;31m[Kerror: [m[K‘[01m[Kmax[m[K’ was not declared in this scope
         hstart = max(hstart, 0);
[01;32m[K                               ^[m[K
[01m[KaDNNLRNLayer.cpp:562:31:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3463:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::max[m[K’
     max(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNLRNLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeLRN::VerifyFwd()[m[K’:
[01m[KaDNNLRNLayer.cpp:648:21:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
   double max_err = -FLT_MIN;
[01;32m[K                     ^[m[K
[01m[KaDNNLRNLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeLRN::RunHostBwd()[m[K’:
[01m[KaDNNLRNLayer.cpp:1253:60:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
        int hend = min(hstart + local_area, top_height + pad);
[01;32m[K                                                            ^[m[K
[01m[KaDNNLRNLayer.cpp:1253:60:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNLRNLayer.cpp:1256:30:[m[K [01;31m[Kerror: [m[K‘[01m[Kmax[m[K’ was not declared in this scope
        hstart = max(hstart, 0);
[01;32m[K                              ^[m[K
[01m[KaDNNLRNLayer.cpp:1256:30:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNLRNLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3463:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::max[m[K’
     max(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNLRNLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeLRN::VerifyBwd()[m[K’:
[01m[KaDNNLRNLayer.cpp:1323:21:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
   double max_err = -FLT_MIN;
[01;32m[K                     ^[m[K
# cc1plus 0.82 0.05
# as 0.00 0.00
makefile:119: recipe for target 'aDNNLRNLayer.o' failed
make: *** [aDNNLRNLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNNeuronLayer.cpp
In file included from [01m[KaDNNNeuronLayer.cpp:17:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNNeuronLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNNeuronLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeNeuron::VerifyFwd()[m[K’:
[01m[KaDNNNeuronLayer.cpp:333:11:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NEURON_TOTAL[m[K’ not handled in switch [-Wswitch-enum]
    switch (getNeuronType())
[01;32m[K           ^[m[K
# cc1plus 0.80 0.06
# as 0.00 0.00
makefile:121: recipe for target 'aDNNNeuronLayer.o' failed
make: *** [aDNNNeuronLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNOCL.cpp
In file included from [01m[KaDNNOCL.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNOCL.cpp:[m[K In member function ‘[01m[K_cl_kernel* adnn::CaLibsOCL::getKernel(const string&, const string&, const string&)[m[K’:
[01m[KaDNNOCL.cpp:201:70:[m[K [01;35m[Kwarning: [m[Kformat ‘[01m[K%x[m[K’ expects argument of type ‘[01m[Kunsigned int[m[K’, but argument 3 has type ‘[01m[Klong long int[m[K’ [-Wformat=]
   printf("Kernel is %s : 0x%x\n", kernel_name.c_str(), (long long)ret);
[01;32m[K                                                                      ^[m[K
[01m[KaDNNOCL.cpp:[m[K In member function ‘[01m[K_cl_command_queue* adnn::CaLibsOCL::createClQueue(int, const cl_command_queue_properties*)[m[K’:
[01m[KaDNNOCL.cpp:271:14:[m[K [01;35m[Kwarning: [m[K‘[01m[K_cl_command_queue* clCreateCommandQueue(cl_context, cl_device_id, cl_command_queue_properties, cl_int*)[m[K’ is deprecated [-Wdeprecated-declarations]
     cQueue = clCreateCommandQueue(context_,
[01;32m[K              ^[m[K
In file included from [01m[K/c/AMD/Include/AMDSDK/CL/opencl.h:42:0[m[K,
                 from [01m[KaDNNInternal.hpp:23[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/CL/cl.h:1359:1:[m[K [01;36m[Knote: [m[Kdeclared here
 clCreateCommandQueue(cl_context                     /* context */,
[01;32m[K ^[m[K
[01m[KaDNNOCL.cpp:271:14:[m[K [01;35m[Kwarning: [m[K‘[01m[K_cl_command_queue* clCreateCommandQueue(cl_context, cl_device_id, cl_command_queue_properties, cl_int*)[m[K’ is deprecated [-Wdeprecated-declarations]
     cQueue = clCreateCommandQueue(context_,
[01;32m[K              ^[m[K
In file included from [01m[K/c/AMD/Include/AMDSDK/CL/opencl.h:42:0[m[K,
                 from [01m[KaDNNInternal.hpp:23[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/CL/cl.h:1359:1:[m[K [01;36m[Knote: [m[Kdeclared here
 clCreateCommandQueue(cl_context                     /* context */,
[01;32m[K ^[m[K
[01m[KaDNNOCL.cpp:274:13:[m[K [01;35m[Kwarning: [m[K‘[01m[K_cl_command_queue* clCreateCommandQueue(cl_context, cl_device_id, cl_command_queue_properties, cl_int*)[m[K’ is deprecated [-Wdeprecated-declarations]
      &status);
[01;32m[K             ^[m[K
In file included from [01m[K/c/AMD/Include/AMDSDK/CL/opencl.h:42:0[m[K,
                 from [01m[KaDNNInternal.hpp:23[m[K,
                 from [01m[KaDNNOCL.cpp:18[m[K:
[01m[K/c/AMD/Include/AMDSDK/CL/cl.h:1359:1:[m[K [01;36m[Knote: [m[Kdeclared here
 clCreateCommandQueue(cl_context                     /* context */,
[01;32m[K ^[m[K
# cc1plus 0.81 0.05
# as 0.00 0.00
makefile:123: recipe for target 'aDNNOCL.o' failed
make: *** [aDNNOCL.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNPoolingLayer.cpp
In file included from [01m[KaDNNPoolingLayer.cpp:17:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNPoolingLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodePooling::VerifyFwd()[m[K’:
[01m[KaDNNPoolingLayer.cpp:451:55:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
        int hend = min(hstart + kernel_size, bot_height);
[01;32m[K                                                       ^[m[K
[01m[KaDNNPoolingLayer.cpp:451:55:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNPoolingLayer.cpp:457:98:[m[K [01;31m[Kerror: [m[K‘[01m[Kmax[m[K’ was not declared in this scope
          res = max(res, bot_ptr[b*bot_batch_stride + o * bot_channel_stride + h * bot_stride + w]);
[01;32m[K                                                                                                  ^[m[K
[01m[KaDNNPoolingLayer.cpp:457:98:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3463:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::max[m[K’
     max(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNPoolingLayer.cpp:467:61:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
        int hend = min(hstart + kernel_size, bot_height + pad);
[01;32m[K                                                             ^[m[K
[01m[KaDNNPoolingLayer.cpp:467:61:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNPoolingLayer.cpp:470:30:[m[K [01;31m[Kerror: [m[K‘[01m[Kmax[m[K’ was not declared in this scope
        hstart = max(hstart, 0);
[01;32m[K                              ^[m[K
[01m[KaDNNPoolingLayer.cpp:470:30:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3463:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::max[m[K’
     max(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNPoolingLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodePooling::RunHostBwd()[m[K’:
[01m[KaDNNPoolingLayer.cpp:824:55:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
        int hend = min(hstart + kernel_size, bot_height);
[01;32m[K                                                       ^[m[K
[01m[KaDNNPoolingLayer.cpp:824:55:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNPoolingLayer.cpp:866:50:[m[K [01;31m[Kerror: [m[K‘[01m[Kmin[m[K’ was not declared in this scope
        int phend = min(h / stride + 1, top_height);
[01;32m[K                                                  ^[m[K
[01m[KaDNNPoolingLayer.cpp:866:50:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNPoolingLayer.cpp:17[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3451:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::min[m[K’
     min(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNPoolingLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodePooling::VerifyBwd()[m[K’:
[01m[KaDNNPoolingLayer.cpp:945:21:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
   double max_err = -FLT_MIN;
[01;32m[K                     ^[m[K
# cc1plus 0.81 0.05
makefile:124: recipe for target 'aDNNPoolingLayer.o' failed
make: *** [aDNNPoolingLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aDNNSoftMaxLayer.cpp
In file included from [01m[KaDNNSoftMaxLayer.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaDNNSoftMaxLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeSoftMax::RunHostFwd()[m[K’:
[01m[KaDNNSoftMaxLayer.cpp:409:56:[m[K [01;31m[Kerror: [m[K‘[01m[Kmax[m[K’ was not declared in this scope
      accum[j] = max(accum[j], bot_ptr[j*bot_stride + i]);
[01;32m[K                                                        ^[m[K
[01m[KaDNNSoftMaxLayer.cpp:409:56:[m[K [01;36m[Knote: [m[Ksuggested alternative:
In file included from [01m[K/usr/include/c++/5/algorithm:62:0[m[K,
                 from [01m[KaDNNInternal.hpp:35[m[K,
                 from [01m[KaDNNSoftMaxLayer.cpp:18[m[K:
[01m[K/usr/include/c++/5/bits/stl_algo.h:3463:5:[m[K [01;36m[Knote: [m[K  ‘[01m[Kstd::max[m[K’
     max(initializer_list<_Tp> __l, _Compare __comp)
[01;32m[K     ^[m[K
[01m[KaDNNSoftMaxLayer.cpp:[m[K In member function ‘[01m[Kvirtual int adnn::aDNNodeSoftMax::VerifyFwd()[m[K’:
[01m[KaDNNSoftMaxLayer.cpp:512:21:[m[K [01;31m[Kerror: [m[K‘[01m[KFLT_MIN[m[K’ was not declared in this scope
   double max_err = -FLT_MIN;
[01;32m[K                     ^[m[K
# cc1plus 0.77 0.06
makefile:125: recipe for target 'aDNNSoftMaxLayer.o' failed
make: *** [aDNNSoftMaxLayer.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aLibDNNInternal.cpp
In file included from [01m[KaLibDNNInternal.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
[01m[KaLibDNNInternal.cpp:[m[K In member function ‘[01m[Kadnn::aDNNTensor* adnn::ADNNLib::createTensor(const adnn_data_parameters&)[m[K’:
[01m[KaLibDNNInternal.cpp:128:56:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<float>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<float>(*this, data_params);
[01;32m[K                                                        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = float; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = float; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = float]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<float>::CDNN_Tensor(const adnn::CDNN_Tensor<float>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:132:57:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<double>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<double>(*this, data_params);
[01;32m[K                                                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = double; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = double; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = double]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<double>::CDNN_Tensor(const adnn::CDNN_Tensor<double>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:136:54:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<int>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<int>(*this, data_params);
[01;32m[K                                                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = int]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<int>::CDNN_Tensor(const adnn::CDNN_Tensor<int>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:139:63:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<unsigned int>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<unsigned int>(*this, data_params);
[01;32m[K                                                               ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = unsigned int]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<unsigned int>::CDNN_Tensor(const adnn::CDNN_Tensor<unsigned int>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:142:65:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<short unsigned int>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<unsigned short>(*this, data_params);
[01;32m[K                                                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = short unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = short unsigned int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = short unsigned int]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<short unsigned int>::CDNN_Tensor(const adnn::CDNN_Tensor<short unsigned int>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:145:56:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<short int>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<short>(*this, data_params);
[01;32m[K                                                        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = short int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = short int; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = short int]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<short int>::CDNN_Tensor(const adnn::CDNN_Tensor<short int>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:148:64:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<unsigned char>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<unsigned char>(*this, data_params);
[01;32m[K                                                                ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = unsigned char; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = unsigned char; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = unsigned char]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<unsigned char>::CDNN_Tensor(const adnn::CDNN_Tensor<unsigned char>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:151:55:[m[K [01;31m[Kerror: [m[Kno matching function for call to ‘[01m[Kadnn::CDNN_Tensor<char>::CDNN_Tensor(adnn::ADNNLib&, const adnn_data_parameters&)[m[K’
    new_tens = new CDNN_Tensor<char>(*this, data_params);
[01;32m[K                                                       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNInternal.cpp:18[m[K:
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, size_t, size_t, size_t, size_t) [with _T = char; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, size_t X = 0, size_t Y = 1, size_t Z = 1, size_t W = 1) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:235:3:[m[K [01;36m[Knote: [m[K  candidate expects 7 arguments, 2 provided
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor(adnn::CDNN_Object*, void*, std::__cxx11::string, int, size_t*) [with _T = char; std::__cxx11::string = std::__cxx11::basic_string<char>; size_t = long unsigned int]
   CDNN_Tensor(CDNN_Object * parent, void * wrapper, std::string name, int dim, size_t * dim_ln) :
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:219:3:[m[K [01;36m[Knote: [m[K  candidate expects 5 arguments, 2 provided
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<_T>::CDNN_Tensor() [with _T = char]
   CDNN_Tensor():CDNN_Object()
[01;32m[K   ^[m[K
[01m[KaDNN.hpp:207:3:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 2 provided
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[Kcandidate: adnn::CDNN_Tensor<char>::CDNN_Tensor(const adnn::CDNN_Tensor<char>&)
  class CDNN_Tensor : public CDNN_Object
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:204:8:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[KaLibDNNInternal.cpp:124:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_DF_TOTAL[m[K’ not handled in switch [-Wswitch-enum]
   switch (data_params.data_format)
[01;32m[K          ^[m[K
[01m[KaLibDNNInternal.cpp:[m[K In member function ‘[01m[Kadnn::aDNNode* adnn::ADNNLib::createNode(const adnn_node_parameters&)[m[K’:
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_GENERIC[m[K’ not handled in switch [-Wswitch-enum]
   switch (node_descr.type)
[01;32m[K          ^[m[K
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_NET[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_CONV_LOCAL[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_DROPOUT[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_COST_SOFTMAX[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_COST_LOGREG[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_ELEMSUM[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_NODE_ELEMMAX[m[K’ not handled in switch [-Wswitch-enum]
[01m[KaLibDNNInternal.cpp:166:10:[m[K [01;35m[Kwarning: [m[Kenumeration value ‘[01m[KADNN_LAYER_TOTAL[m[K’ not handled in switch [-Wswitch-enum]
# cc1plus 0.75 0.05
# as 0.00 0.00
makefile:126: recipe for target 'aLibDNNInternal.o' failed
make: *** [aLibDNNInternal.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK aLibDNNObj.cpp
In file included from [01m[KaLibDNNObj.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KaLibDNNObj.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_iter_);
[01;32m[K                     ^[m[K
# cc1plus 0.77 0.04
# as 0.00 0.00
makefile:127: recipe for target 'aLibDNNObj.o' failed
make: *** [aLibDNNObj.o] Error 1
thaddeus@TT:/c/AMD/MLopen/aDNN/src$ make lib
g++ -mglibc -pipe -pthread -c -D_REENTRANT -fno-rtti -std=c++0x -frepo -fno-implicit-templates -DLNX -DVLP -time -DSPACEPILOT_3DX_DRIVER  -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -fpermissive -Wno-deprecated -Wno-non-template-friend  -Wswitch-enum -Wswitch-default -Wcast-align  -Wno-write-strings -DVERBOSE -fmessage-length=0 -g2 -ggdb  -I/c/AMD/MLopen/aDNN/src -I/c/AMD/Include/aDNN -I/c/AMD/Include/AMDSDK AMDnnTensor.cpp
In file included from [01m[KAMDnnTensor.cpp:18:0[m[K:
[01m[KaDNNInternal.hpp:[m[K In function ‘[01m[Kdouble mach_absolute_time()[m[K’:
[01m[KaDNNInternal.hpp:74:29:[m[K [01;31m[Kerror: [m[K‘[01m[KLARGE_INTEGER[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                             ^[m[K
[01m[KaDNNInternal.hpp:74:44:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                            ^[m[K
[01m[KaDNNInternal.hpp:74:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceFrequency[m[K’ was not declared in this scope
  QueryPerformanceFrequency((LARGE_INTEGER *)&frec);
[01;32m[K                                                  ^[m[K
[01m[KaDNNInternal.hpp:75:42:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before ‘[01m[K)[m[K’ token
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                          ^[m[K
[01m[KaDNNInternal.hpp:75:50:[m[K [01;31m[Kerror: [m[K‘[01m[KQueryPerformanceCounter[m[K’ was not declared in this scope
  QueryPerformanceCounter((LARGE_INTEGER *)&clocks);
[01;32m[K                                                  ^[m[K
In file included from [01m[KaDNNOCL.hpp:22:0[m[K,
                 from [01m[KaDNNInternal.hpp:109[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:[m[K In function ‘[01m[Kint alibs::getPlatformL(_cl_platform_id*&, int, bool, cl_device_type&, std::__cxx11::string)[m[K’:
[01m[K/c/AMD/Include/aDNN/aLibsCLUtil.hpp:760:10:[m[K [01;35m[Kwarning: [m[Kswitch missing default case [-Wswitch-default]
    switch(dType)
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:109:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CABuf<T>::setValue2(T, cl_command_queue)[m[K’:
[01m[KaDNNOCL.hpp:516:32:[m[K [01;31m[Kerror: [m[Kcannot use typeid with -fno-rtti
   std:: string type_nm(typeid( _val ).name());
[01;32m[K                                ^[m[K
[01m[KaDNNOCL.hpp:[m[K In constructor ‘[01m[Kadnn::CASubBuf<T>::CASubBuf(adnn::CABuf<T>&)[m[K’:
[01m[KaDNNOCL.hpp:654:3:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   sys_ptr_ = _base.getSysMem();
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:[m[K In member function ‘[01m[Kint adnn::CASubBuf<T>::create(size_t, size_t, uint)[m[K’:
[01m[KaDNNOCL.hpp:668:8:[m[K [01;31m[Kerror: [m[K‘[01m[Ksys_ptr_[m[K’ was not declared in this scope
   if ( sys_ptr_ )
[01;32m[K        ^[m[K
[01m[KaDNNOCL.hpp:679:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kbuf_[m[K’ was not declared in this scope
   buf_ = clCreateSubBuffer ( base_buf_,
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:692:3:[m[K [01;31m[Kerror: [m[K‘[01m[Klen_[m[K’ was not declared in this scope
   len_ = _sz;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:693:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kcl_own_[m[K’ was not declared in this scope
   cl_own_ = true;
[01;32m[K   ^[m[K
[01m[KaDNNOCL.hpp:694:3:[m[K [01;31m[Kerror: [m[K‘[01m[Kflags_[m[K’ was not declared in this scope
   flags_ = _flags;
[01;32m[K   ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K At global scope:
[01m[KAMDnn.hpp:635:7:[m[K [01;35m[Kwarning: [m[Kextra qualification ‘[01m[Kadnn::CDNN_OCL_kern_exe::[m[K’ on member ‘[01m[KExecuteNoWait[m[K’ [-fpermissive]
   int CDNN_OCL_kern_exe::ExecuteNoWait(
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:[m[K In function ‘[01m[K_T adnn::getLearningRate(adnn_lr_policy_params&, size_t)[m[K’:
[01m[KaDNN.hpp:101:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_FIXED[m[K’ was not declared in this scope
   case ALIBDNN_LP_FIXED:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:104:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_LINEAR[m[K’ was not declared in this scope
   case ALIBDNN_LP_LINEAR:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:107:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_STEP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_STEP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:111:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:114:8:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_LP_EXP_INV[m[K’ was not declared in this scope
   case ALIBDNN_LP_EXP_INV:
[01;32m[K        ^[m[K
[01m[KaDNN.hpp:115:37:[m[K [01;31m[Kerror: [m[K‘[01m[KDtype[m[K’ was not declared in this scope
    rate = (_T)(l_policy.base * pow((Dtype)1 + l_policy.gamma *  counter, -l_policy.power));
[01;32m[K                                     ^[m[K
[01m[KaDNN.hpp:[m[K At global scope:
[01m[KaDNN.hpp:614:8:[m[K [01;31m[Kerror: [m[Kredefinition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public CDNN_Object
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:619:8:[m[K [01;31m[Kerror: [m[Kprevious definition of ‘[01m[Kclass adnn::CDNN_OCL_kern_exe[m[K’
  class CDNN_OCL_kern_exe : public ADNNBase
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:775:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NODE_TYPE[m[K’ does not name a type
   inline ALIBDNN_NODE_TYPE getType(void) const
[01;32m[K          ^[m[K
[01m[KaDNN.hpp:897:10:[m[K [01;31m[Kerror: [m[K‘[01m[KALIBDNN_NEURON_TYPE[m[K’ does not name a type
   inline ALIBDNN_NEURON_TYPE getNeuronType(void) const
[01;32m[K          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst string& adnn::CDNN_Dnet_layer::getBottom() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:789:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[0].getName());
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsFirstLayer() const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:794:22:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(!getNode().inputs_[0].getName().compare(""));
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNOutputs() const[m[K’:
[01m[KAMDnn.hpp:1209:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::outputs_[m[K’ is protected
   std::vector<aDNNEdge> outputs_;      // node output edge, the name is nodes name if a single output
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:845:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:845:33:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kn_output_featuremaps_[m[K’
    return(getNode().outputs_[0].n_output_featuremaps_);
[01;32m[K                                 ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getKernelSz(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:850:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:850:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].size);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getPad(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:855:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:855:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].pad);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getStep(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:865:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:865:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0].stride);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn::adnn_filter1D& adnn::CDNN_Dnet_layer::getFilterParams(int) const[m[K’:
[01m[KAMDnn.hpp:1208:25:[m[K [01;31m[Kerror: [m[K‘[01m[Kstd::vector<adnn::aDNNEdge> adnn::aDNNode::inputs_[m[K’ is protected
   std::vector<aDNNEdge> inputs_;      // inputs (on-direction) edges (data set); its name is the name the up-stream node
[01;32m[K                         ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:870:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                     ^[m[K
[01m[KaDNN.hpp:870:42:[m[K [01;31m[Kerror: [m[K‘[01m[Kconst value_type {aka const class adnn::aDNNEdge}[m[K’ has no member named ‘[01m[Kweights_params_[m[K’
    return(getNode().inputs_[input_index].weights_params_.filter_params.filter[0]);
[01;32m[K                                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_neuron_parameters& adnn::CDNN_Dnet_layer::getNeuronParams() const[m[K’:
[01m[KAMDnn.hpp:1210:26:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_neuron_parameters adnn::aDNNode::neuron_params_[m[K’ is protected
   adnn_neuron_parameters neuron_params_;
[01;32m[K                          ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:905:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().neuron_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kconst adnn_update_params& adnn::CDNN_Dnet_layer::getUpdateParams() const[m[K’:
[01m[KAMDnn.hpp:1211:22:[m[K [01;31m[Kerror: [m[K‘[01m[Kadnn_update_params adnn::aDNNode::update_params_[m[K’ is protected
   adnn_update_params update_params_;
[01;32m[K                      ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:910:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().update_params_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerTiming() const[m[K’:
[01m[KAMDnn.hpp:1253:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_timing_[m[K’ is protected
   bool per_layer_timing_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:1035:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_timing_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kbool adnn::CDNN_Dnet_layer::IsPerLayerMessages() const[m[K’:
[01m[KAMDnn.hpp:1256:8:[m[K [01;31m[Kerror: [m[K‘[01m[Kbool adnn::aDNNode::per_layer_messages_[m[K’ is protected
   bool per_layer_messages_;
[01;32m[K        ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:1043:21:[m[K [01;31m[Kerror: [m[Kwithin this context
    return(getNode().per_layer_messages_);
[01;32m[K                     ^[m[K
In file included from [01m[KaDNNInternal.hpp:116:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KAMDnn.hpp:[m[K In member function ‘[01m[Kint adnn::CDNN_Dnet_layer::getNetPerLayerIter() const[m[K’:
[01m[KAMDnn.hpp:1255:7:[m[K [01;31m[Kerror: [m[K‘[01m[Kint adnn::aDNNode::per_layer_iter_[m[K’ is protected
   int per_layer_iter_;
[01;32m[K       ^[m[K
In file included from [01m[KaDNNInternal.hpp:117:0[m[K,
                 from [01m[KAMDnnTensor.cpp:18[m[K:
[01m[KaDNN.hpp:1076:21:[m[K [01;31m[Kerror: [m[Kwithin 